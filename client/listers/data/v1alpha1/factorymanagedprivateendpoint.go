/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FactoryManagedPrivateEndpointLister helps list FactoryManagedPrivateEndpoints.
// All objects returned here must be treated as read-only.
type FactoryManagedPrivateEndpointLister interface {
	// List lists all FactoryManagedPrivateEndpoints in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryManagedPrivateEndpoint, err error)
	// FactoryManagedPrivateEndpoints returns an object that can list and get FactoryManagedPrivateEndpoints.
	FactoryManagedPrivateEndpoints(namespace string) FactoryManagedPrivateEndpointNamespaceLister
	FactoryManagedPrivateEndpointListerExpansion
}

// factoryManagedPrivateEndpointLister implements the FactoryManagedPrivateEndpointLister interface.
type factoryManagedPrivateEndpointLister struct {
	indexer cache.Indexer
}

// NewFactoryManagedPrivateEndpointLister returns a new FactoryManagedPrivateEndpointLister.
func NewFactoryManagedPrivateEndpointLister(indexer cache.Indexer) FactoryManagedPrivateEndpointLister {
	return &factoryManagedPrivateEndpointLister{indexer: indexer}
}

// List lists all FactoryManagedPrivateEndpoints in the indexer.
func (s *factoryManagedPrivateEndpointLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryManagedPrivateEndpoint, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryManagedPrivateEndpoint))
	})
	return ret, err
}

// FactoryManagedPrivateEndpoints returns an object that can list and get FactoryManagedPrivateEndpoints.
func (s *factoryManagedPrivateEndpointLister) FactoryManagedPrivateEndpoints(namespace string) FactoryManagedPrivateEndpointNamespaceLister {
	return factoryManagedPrivateEndpointNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FactoryManagedPrivateEndpointNamespaceLister helps list and get FactoryManagedPrivateEndpoints.
// All objects returned here must be treated as read-only.
type FactoryManagedPrivateEndpointNamespaceLister interface {
	// List lists all FactoryManagedPrivateEndpoints in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryManagedPrivateEndpoint, err error)
	// Get retrieves the FactoryManagedPrivateEndpoint from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FactoryManagedPrivateEndpoint, error)
	FactoryManagedPrivateEndpointNamespaceListerExpansion
}

// factoryManagedPrivateEndpointNamespaceLister implements the FactoryManagedPrivateEndpointNamespaceLister
// interface.
type factoryManagedPrivateEndpointNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FactoryManagedPrivateEndpoints in the indexer for a given namespace.
func (s factoryManagedPrivateEndpointNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryManagedPrivateEndpoint, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryManagedPrivateEndpoint))
	})
	return ret, err
}

// Get retrieves the FactoryManagedPrivateEndpoint from the indexer for a given namespace and name.
func (s factoryManagedPrivateEndpointNamespaceLister) Get(name string) (*v1alpha1.FactoryManagedPrivateEndpoint, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("factorymanagedprivateendpoint"), name)
	}
	return obj.(*v1alpha1.FactoryManagedPrivateEndpoint), nil
}
