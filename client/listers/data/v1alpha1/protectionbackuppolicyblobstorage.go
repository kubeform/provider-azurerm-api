/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ProtectionBackupPolicyBlobStorageLister helps list ProtectionBackupPolicyBlobStorages.
// All objects returned here must be treated as read-only.
type ProtectionBackupPolicyBlobStorageLister interface {
	// List lists all ProtectionBackupPolicyBlobStorages in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ProtectionBackupPolicyBlobStorage, err error)
	// ProtectionBackupPolicyBlobStorages returns an object that can list and get ProtectionBackupPolicyBlobStorages.
	ProtectionBackupPolicyBlobStorages(namespace string) ProtectionBackupPolicyBlobStorageNamespaceLister
	ProtectionBackupPolicyBlobStorageListerExpansion
}

// protectionBackupPolicyBlobStorageLister implements the ProtectionBackupPolicyBlobStorageLister interface.
type protectionBackupPolicyBlobStorageLister struct {
	indexer cache.Indexer
}

// NewProtectionBackupPolicyBlobStorageLister returns a new ProtectionBackupPolicyBlobStorageLister.
func NewProtectionBackupPolicyBlobStorageLister(indexer cache.Indexer) ProtectionBackupPolicyBlobStorageLister {
	return &protectionBackupPolicyBlobStorageLister{indexer: indexer}
}

// List lists all ProtectionBackupPolicyBlobStorages in the indexer.
func (s *protectionBackupPolicyBlobStorageLister) List(selector labels.Selector) (ret []*v1alpha1.ProtectionBackupPolicyBlobStorage, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ProtectionBackupPolicyBlobStorage))
	})
	return ret, err
}

// ProtectionBackupPolicyBlobStorages returns an object that can list and get ProtectionBackupPolicyBlobStorages.
func (s *protectionBackupPolicyBlobStorageLister) ProtectionBackupPolicyBlobStorages(namespace string) ProtectionBackupPolicyBlobStorageNamespaceLister {
	return protectionBackupPolicyBlobStorageNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ProtectionBackupPolicyBlobStorageNamespaceLister helps list and get ProtectionBackupPolicyBlobStorages.
// All objects returned here must be treated as read-only.
type ProtectionBackupPolicyBlobStorageNamespaceLister interface {
	// List lists all ProtectionBackupPolicyBlobStorages in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ProtectionBackupPolicyBlobStorage, err error)
	// Get retrieves the ProtectionBackupPolicyBlobStorage from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ProtectionBackupPolicyBlobStorage, error)
	ProtectionBackupPolicyBlobStorageNamespaceListerExpansion
}

// protectionBackupPolicyBlobStorageNamespaceLister implements the ProtectionBackupPolicyBlobStorageNamespaceLister
// interface.
type protectionBackupPolicyBlobStorageNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ProtectionBackupPolicyBlobStorages in the indexer for a given namespace.
func (s protectionBackupPolicyBlobStorageNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ProtectionBackupPolicyBlobStorage, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ProtectionBackupPolicyBlobStorage))
	})
	return ret, err
}

// Get retrieves the ProtectionBackupPolicyBlobStorage from the indexer for a given namespace and name.
func (s protectionBackupPolicyBlobStorageNamespaceLister) Get(name string) (*v1alpha1.ProtectionBackupPolicyBlobStorage, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("protectionbackuppolicyblobstorage"), name)
	}
	return obj.(*v1alpha1.ProtectionBackupPolicyBlobStorage), nil
}
