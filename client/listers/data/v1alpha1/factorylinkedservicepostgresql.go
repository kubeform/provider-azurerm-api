/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FactoryLinkedServicePostgresqlLister helps list FactoryLinkedServicePostgresqls.
// All objects returned here must be treated as read-only.
type FactoryLinkedServicePostgresqlLister interface {
	// List lists all FactoryLinkedServicePostgresqls in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServicePostgresql, err error)
	// FactoryLinkedServicePostgresqls returns an object that can list and get FactoryLinkedServicePostgresqls.
	FactoryLinkedServicePostgresqls(namespace string) FactoryLinkedServicePostgresqlNamespaceLister
	FactoryLinkedServicePostgresqlListerExpansion
}

// factoryLinkedServicePostgresqlLister implements the FactoryLinkedServicePostgresqlLister interface.
type factoryLinkedServicePostgresqlLister struct {
	indexer cache.Indexer
}

// NewFactoryLinkedServicePostgresqlLister returns a new FactoryLinkedServicePostgresqlLister.
func NewFactoryLinkedServicePostgresqlLister(indexer cache.Indexer) FactoryLinkedServicePostgresqlLister {
	return &factoryLinkedServicePostgresqlLister{indexer: indexer}
}

// List lists all FactoryLinkedServicePostgresqls in the indexer.
func (s *factoryLinkedServicePostgresqlLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServicePostgresql, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryLinkedServicePostgresql))
	})
	return ret, err
}

// FactoryLinkedServicePostgresqls returns an object that can list and get FactoryLinkedServicePostgresqls.
func (s *factoryLinkedServicePostgresqlLister) FactoryLinkedServicePostgresqls(namespace string) FactoryLinkedServicePostgresqlNamespaceLister {
	return factoryLinkedServicePostgresqlNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FactoryLinkedServicePostgresqlNamespaceLister helps list and get FactoryLinkedServicePostgresqls.
// All objects returned here must be treated as read-only.
type FactoryLinkedServicePostgresqlNamespaceLister interface {
	// List lists all FactoryLinkedServicePostgresqls in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServicePostgresql, err error)
	// Get retrieves the FactoryLinkedServicePostgresql from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FactoryLinkedServicePostgresql, error)
	FactoryLinkedServicePostgresqlNamespaceListerExpansion
}

// factoryLinkedServicePostgresqlNamespaceLister implements the FactoryLinkedServicePostgresqlNamespaceLister
// interface.
type factoryLinkedServicePostgresqlNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FactoryLinkedServicePostgresqls in the indexer for a given namespace.
func (s factoryLinkedServicePostgresqlNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServicePostgresql, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryLinkedServicePostgresql))
	})
	return ret, err
}

// Get retrieves the FactoryLinkedServicePostgresql from the indexer for a given namespace and name.
func (s factoryLinkedServicePostgresqlNamespaceLister) Get(name string) (*v1alpha1.FactoryLinkedServicePostgresql, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("factorylinkedservicepostgresql"), name)
	}
	return obj.(*v1alpha1.FactoryLinkedServicePostgresql), nil
}
