/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FactoryLinkedServiceCosmosdbMongoapiLister helps list FactoryLinkedServiceCosmosdbMongoapis.
// All objects returned here must be treated as read-only.
type FactoryLinkedServiceCosmosdbMongoapiLister interface {
	// List lists all FactoryLinkedServiceCosmosdbMongoapis in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceCosmosdbMongoapi, err error)
	// FactoryLinkedServiceCosmosdbMongoapis returns an object that can list and get FactoryLinkedServiceCosmosdbMongoapis.
	FactoryLinkedServiceCosmosdbMongoapis(namespace string) FactoryLinkedServiceCosmosdbMongoapiNamespaceLister
	FactoryLinkedServiceCosmosdbMongoapiListerExpansion
}

// factoryLinkedServiceCosmosdbMongoapiLister implements the FactoryLinkedServiceCosmosdbMongoapiLister interface.
type factoryLinkedServiceCosmosdbMongoapiLister struct {
	indexer cache.Indexer
}

// NewFactoryLinkedServiceCosmosdbMongoapiLister returns a new FactoryLinkedServiceCosmosdbMongoapiLister.
func NewFactoryLinkedServiceCosmosdbMongoapiLister(indexer cache.Indexer) FactoryLinkedServiceCosmosdbMongoapiLister {
	return &factoryLinkedServiceCosmosdbMongoapiLister{indexer: indexer}
}

// List lists all FactoryLinkedServiceCosmosdbMongoapis in the indexer.
func (s *factoryLinkedServiceCosmosdbMongoapiLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceCosmosdbMongoapi, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryLinkedServiceCosmosdbMongoapi))
	})
	return ret, err
}

// FactoryLinkedServiceCosmosdbMongoapis returns an object that can list and get FactoryLinkedServiceCosmosdbMongoapis.
func (s *factoryLinkedServiceCosmosdbMongoapiLister) FactoryLinkedServiceCosmosdbMongoapis(namespace string) FactoryLinkedServiceCosmosdbMongoapiNamespaceLister {
	return factoryLinkedServiceCosmosdbMongoapiNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FactoryLinkedServiceCosmosdbMongoapiNamespaceLister helps list and get FactoryLinkedServiceCosmosdbMongoapis.
// All objects returned here must be treated as read-only.
type FactoryLinkedServiceCosmosdbMongoapiNamespaceLister interface {
	// List lists all FactoryLinkedServiceCosmosdbMongoapis in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceCosmosdbMongoapi, err error)
	// Get retrieves the FactoryLinkedServiceCosmosdbMongoapi from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FactoryLinkedServiceCosmosdbMongoapi, error)
	FactoryLinkedServiceCosmosdbMongoapiNamespaceListerExpansion
}

// factoryLinkedServiceCosmosdbMongoapiNamespaceLister implements the FactoryLinkedServiceCosmosdbMongoapiNamespaceLister
// interface.
type factoryLinkedServiceCosmosdbMongoapiNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FactoryLinkedServiceCosmosdbMongoapis in the indexer for a given namespace.
func (s factoryLinkedServiceCosmosdbMongoapiNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceCosmosdbMongoapi, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryLinkedServiceCosmosdbMongoapi))
	})
	return ret, err
}

// Get retrieves the FactoryLinkedServiceCosmosdbMongoapi from the indexer for a given namespace and name.
func (s factoryLinkedServiceCosmosdbMongoapiNamespaceLister) Get(name string) (*v1alpha1.FactoryLinkedServiceCosmosdbMongoapi, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("factorylinkedservicecosmosdbmongoapi"), name)
	}
	return obj.(*v1alpha1.FactoryLinkedServiceCosmosdbMongoapi), nil
}
