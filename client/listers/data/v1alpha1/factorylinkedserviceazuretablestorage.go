/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FactoryLinkedServiceAzureTableStorageLister helps list FactoryLinkedServiceAzureTableStorages.
// All objects returned here must be treated as read-only.
type FactoryLinkedServiceAzureTableStorageLister interface {
	// List lists all FactoryLinkedServiceAzureTableStorages in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceAzureTableStorage, err error)
	// FactoryLinkedServiceAzureTableStorages returns an object that can list and get FactoryLinkedServiceAzureTableStorages.
	FactoryLinkedServiceAzureTableStorages(namespace string) FactoryLinkedServiceAzureTableStorageNamespaceLister
	FactoryLinkedServiceAzureTableStorageListerExpansion
}

// factoryLinkedServiceAzureTableStorageLister implements the FactoryLinkedServiceAzureTableStorageLister interface.
type factoryLinkedServiceAzureTableStorageLister struct {
	indexer cache.Indexer
}

// NewFactoryLinkedServiceAzureTableStorageLister returns a new FactoryLinkedServiceAzureTableStorageLister.
func NewFactoryLinkedServiceAzureTableStorageLister(indexer cache.Indexer) FactoryLinkedServiceAzureTableStorageLister {
	return &factoryLinkedServiceAzureTableStorageLister{indexer: indexer}
}

// List lists all FactoryLinkedServiceAzureTableStorages in the indexer.
func (s *factoryLinkedServiceAzureTableStorageLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceAzureTableStorage, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryLinkedServiceAzureTableStorage))
	})
	return ret, err
}

// FactoryLinkedServiceAzureTableStorages returns an object that can list and get FactoryLinkedServiceAzureTableStorages.
func (s *factoryLinkedServiceAzureTableStorageLister) FactoryLinkedServiceAzureTableStorages(namespace string) FactoryLinkedServiceAzureTableStorageNamespaceLister {
	return factoryLinkedServiceAzureTableStorageNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FactoryLinkedServiceAzureTableStorageNamespaceLister helps list and get FactoryLinkedServiceAzureTableStorages.
// All objects returned here must be treated as read-only.
type FactoryLinkedServiceAzureTableStorageNamespaceLister interface {
	// List lists all FactoryLinkedServiceAzureTableStorages in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceAzureTableStorage, err error)
	// Get retrieves the FactoryLinkedServiceAzureTableStorage from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FactoryLinkedServiceAzureTableStorage, error)
	FactoryLinkedServiceAzureTableStorageNamespaceListerExpansion
}

// factoryLinkedServiceAzureTableStorageNamespaceLister implements the FactoryLinkedServiceAzureTableStorageNamespaceLister
// interface.
type factoryLinkedServiceAzureTableStorageNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FactoryLinkedServiceAzureTableStorages in the indexer for a given namespace.
func (s factoryLinkedServiceAzureTableStorageNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceAzureTableStorage, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryLinkedServiceAzureTableStorage))
	})
	return ret, err
}

// Get retrieves the FactoryLinkedServiceAzureTableStorage from the indexer for a given namespace and name.
func (s factoryLinkedServiceAzureTableStorageNamespaceLister) Get(name string) (*v1alpha1.FactoryLinkedServiceAzureTableStorage, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("factorylinkedserviceazuretablestorage"), name)
	}
	return obj.(*v1alpha1.FactoryLinkedServiceAzureTableStorage), nil
}
