/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FactoryLinkedServiceSQLServerLister helps list FactoryLinkedServiceSQLServers.
// All objects returned here must be treated as read-only.
type FactoryLinkedServiceSQLServerLister interface {
	// List lists all FactoryLinkedServiceSQLServers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceSQLServer, err error)
	// FactoryLinkedServiceSQLServers returns an object that can list and get FactoryLinkedServiceSQLServers.
	FactoryLinkedServiceSQLServers(namespace string) FactoryLinkedServiceSQLServerNamespaceLister
	FactoryLinkedServiceSQLServerListerExpansion
}

// factoryLinkedServiceSQLServerLister implements the FactoryLinkedServiceSQLServerLister interface.
type factoryLinkedServiceSQLServerLister struct {
	indexer cache.Indexer
}

// NewFactoryLinkedServiceSQLServerLister returns a new FactoryLinkedServiceSQLServerLister.
func NewFactoryLinkedServiceSQLServerLister(indexer cache.Indexer) FactoryLinkedServiceSQLServerLister {
	return &factoryLinkedServiceSQLServerLister{indexer: indexer}
}

// List lists all FactoryLinkedServiceSQLServers in the indexer.
func (s *factoryLinkedServiceSQLServerLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceSQLServer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryLinkedServiceSQLServer))
	})
	return ret, err
}

// FactoryLinkedServiceSQLServers returns an object that can list and get FactoryLinkedServiceSQLServers.
func (s *factoryLinkedServiceSQLServerLister) FactoryLinkedServiceSQLServers(namespace string) FactoryLinkedServiceSQLServerNamespaceLister {
	return factoryLinkedServiceSQLServerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FactoryLinkedServiceSQLServerNamespaceLister helps list and get FactoryLinkedServiceSQLServers.
// All objects returned here must be treated as read-only.
type FactoryLinkedServiceSQLServerNamespaceLister interface {
	// List lists all FactoryLinkedServiceSQLServers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceSQLServer, err error)
	// Get retrieves the FactoryLinkedServiceSQLServer from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FactoryLinkedServiceSQLServer, error)
	FactoryLinkedServiceSQLServerNamespaceListerExpansion
}

// factoryLinkedServiceSQLServerNamespaceLister implements the FactoryLinkedServiceSQLServerNamespaceLister
// interface.
type factoryLinkedServiceSQLServerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FactoryLinkedServiceSQLServers in the indexer for a given namespace.
func (s factoryLinkedServiceSQLServerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceSQLServer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryLinkedServiceSQLServer))
	})
	return ret, err
}

// Get retrieves the FactoryLinkedServiceSQLServer from the indexer for a given namespace and name.
func (s factoryLinkedServiceSQLServerNamespaceLister) Get(name string) (*v1alpha1.FactoryLinkedServiceSQLServer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("factorylinkedservicesqlserver"), name)
	}
	return obj.(*v1alpha1.FactoryLinkedServiceSQLServer), nil
}
