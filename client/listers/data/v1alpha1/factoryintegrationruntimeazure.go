/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FactoryIntegrationRuntimeAzureLister helps list FactoryIntegrationRuntimeAzures.
// All objects returned here must be treated as read-only.
type FactoryIntegrationRuntimeAzureLister interface {
	// List lists all FactoryIntegrationRuntimeAzures in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryIntegrationRuntimeAzure, err error)
	// FactoryIntegrationRuntimeAzures returns an object that can list and get FactoryIntegrationRuntimeAzures.
	FactoryIntegrationRuntimeAzures(namespace string) FactoryIntegrationRuntimeAzureNamespaceLister
	FactoryIntegrationRuntimeAzureListerExpansion
}

// factoryIntegrationRuntimeAzureLister implements the FactoryIntegrationRuntimeAzureLister interface.
type factoryIntegrationRuntimeAzureLister struct {
	indexer cache.Indexer
}

// NewFactoryIntegrationRuntimeAzureLister returns a new FactoryIntegrationRuntimeAzureLister.
func NewFactoryIntegrationRuntimeAzureLister(indexer cache.Indexer) FactoryIntegrationRuntimeAzureLister {
	return &factoryIntegrationRuntimeAzureLister{indexer: indexer}
}

// List lists all FactoryIntegrationRuntimeAzures in the indexer.
func (s *factoryIntegrationRuntimeAzureLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryIntegrationRuntimeAzure, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryIntegrationRuntimeAzure))
	})
	return ret, err
}

// FactoryIntegrationRuntimeAzures returns an object that can list and get FactoryIntegrationRuntimeAzures.
func (s *factoryIntegrationRuntimeAzureLister) FactoryIntegrationRuntimeAzures(namespace string) FactoryIntegrationRuntimeAzureNamespaceLister {
	return factoryIntegrationRuntimeAzureNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FactoryIntegrationRuntimeAzureNamespaceLister helps list and get FactoryIntegrationRuntimeAzures.
// All objects returned here must be treated as read-only.
type FactoryIntegrationRuntimeAzureNamespaceLister interface {
	// List lists all FactoryIntegrationRuntimeAzures in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryIntegrationRuntimeAzure, err error)
	// Get retrieves the FactoryIntegrationRuntimeAzure from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FactoryIntegrationRuntimeAzure, error)
	FactoryIntegrationRuntimeAzureNamespaceListerExpansion
}

// factoryIntegrationRuntimeAzureNamespaceLister implements the FactoryIntegrationRuntimeAzureNamespaceLister
// interface.
type factoryIntegrationRuntimeAzureNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FactoryIntegrationRuntimeAzures in the indexer for a given namespace.
func (s factoryIntegrationRuntimeAzureNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryIntegrationRuntimeAzure, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryIntegrationRuntimeAzure))
	})
	return ret, err
}

// Get retrieves the FactoryIntegrationRuntimeAzure from the indexer for a given namespace and name.
func (s factoryIntegrationRuntimeAzureNamespaceLister) Get(name string) (*v1alpha1.FactoryIntegrationRuntimeAzure, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("factoryintegrationruntimeazure"), name)
	}
	return obj.(*v1alpha1.FactoryIntegrationRuntimeAzure), nil
}
