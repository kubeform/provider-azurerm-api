/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FactoryLinkedServiceAzureDatabricksLister helps list FactoryLinkedServiceAzureDatabrickses.
// All objects returned here must be treated as read-only.
type FactoryLinkedServiceAzureDatabricksLister interface {
	// List lists all FactoryLinkedServiceAzureDatabrickses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceAzureDatabricks, err error)
	// FactoryLinkedServiceAzureDatabrickses returns an object that can list and get FactoryLinkedServiceAzureDatabrickses.
	FactoryLinkedServiceAzureDatabrickses(namespace string) FactoryLinkedServiceAzureDatabricksNamespaceLister
	FactoryLinkedServiceAzureDatabricksListerExpansion
}

// factoryLinkedServiceAzureDatabricksLister implements the FactoryLinkedServiceAzureDatabricksLister interface.
type factoryLinkedServiceAzureDatabricksLister struct {
	indexer cache.Indexer
}

// NewFactoryLinkedServiceAzureDatabricksLister returns a new FactoryLinkedServiceAzureDatabricksLister.
func NewFactoryLinkedServiceAzureDatabricksLister(indexer cache.Indexer) FactoryLinkedServiceAzureDatabricksLister {
	return &factoryLinkedServiceAzureDatabricksLister{indexer: indexer}
}

// List lists all FactoryLinkedServiceAzureDatabrickses in the indexer.
func (s *factoryLinkedServiceAzureDatabricksLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceAzureDatabricks, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryLinkedServiceAzureDatabricks))
	})
	return ret, err
}

// FactoryLinkedServiceAzureDatabrickses returns an object that can list and get FactoryLinkedServiceAzureDatabrickses.
func (s *factoryLinkedServiceAzureDatabricksLister) FactoryLinkedServiceAzureDatabrickses(namespace string) FactoryLinkedServiceAzureDatabricksNamespaceLister {
	return factoryLinkedServiceAzureDatabricksNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FactoryLinkedServiceAzureDatabricksNamespaceLister helps list and get FactoryLinkedServiceAzureDatabrickses.
// All objects returned here must be treated as read-only.
type FactoryLinkedServiceAzureDatabricksNamespaceLister interface {
	// List lists all FactoryLinkedServiceAzureDatabrickses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceAzureDatabricks, err error)
	// Get retrieves the FactoryLinkedServiceAzureDatabricks from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FactoryLinkedServiceAzureDatabricks, error)
	FactoryLinkedServiceAzureDatabricksNamespaceListerExpansion
}

// factoryLinkedServiceAzureDatabricksNamespaceLister implements the FactoryLinkedServiceAzureDatabricksNamespaceLister
// interface.
type factoryLinkedServiceAzureDatabricksNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FactoryLinkedServiceAzureDatabrickses in the indexer for a given namespace.
func (s factoryLinkedServiceAzureDatabricksNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryLinkedServiceAzureDatabricks, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryLinkedServiceAzureDatabricks))
	})
	return ret, err
}

// Get retrieves the FactoryLinkedServiceAzureDatabricks from the indexer for a given namespace and name.
func (s factoryLinkedServiceAzureDatabricksNamespaceLister) Get(name string) (*v1alpha1.FactoryLinkedServiceAzureDatabricks, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("factorylinkedserviceazuredatabricks"), name)
	}
	return obj.(*v1alpha1.FactoryLinkedServiceAzureDatabricks), nil
}
