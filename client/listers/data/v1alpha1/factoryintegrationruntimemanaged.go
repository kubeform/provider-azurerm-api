/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FactoryIntegrationRuntimeManagedLister helps list FactoryIntegrationRuntimeManageds.
// All objects returned here must be treated as read-only.
type FactoryIntegrationRuntimeManagedLister interface {
	// List lists all FactoryIntegrationRuntimeManageds in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryIntegrationRuntimeManaged, err error)
	// FactoryIntegrationRuntimeManageds returns an object that can list and get FactoryIntegrationRuntimeManageds.
	FactoryIntegrationRuntimeManageds(namespace string) FactoryIntegrationRuntimeManagedNamespaceLister
	FactoryIntegrationRuntimeManagedListerExpansion
}

// factoryIntegrationRuntimeManagedLister implements the FactoryIntegrationRuntimeManagedLister interface.
type factoryIntegrationRuntimeManagedLister struct {
	indexer cache.Indexer
}

// NewFactoryIntegrationRuntimeManagedLister returns a new FactoryIntegrationRuntimeManagedLister.
func NewFactoryIntegrationRuntimeManagedLister(indexer cache.Indexer) FactoryIntegrationRuntimeManagedLister {
	return &factoryIntegrationRuntimeManagedLister{indexer: indexer}
}

// List lists all FactoryIntegrationRuntimeManageds in the indexer.
func (s *factoryIntegrationRuntimeManagedLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryIntegrationRuntimeManaged, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryIntegrationRuntimeManaged))
	})
	return ret, err
}

// FactoryIntegrationRuntimeManageds returns an object that can list and get FactoryIntegrationRuntimeManageds.
func (s *factoryIntegrationRuntimeManagedLister) FactoryIntegrationRuntimeManageds(namespace string) FactoryIntegrationRuntimeManagedNamespaceLister {
	return factoryIntegrationRuntimeManagedNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FactoryIntegrationRuntimeManagedNamespaceLister helps list and get FactoryIntegrationRuntimeManageds.
// All objects returned here must be treated as read-only.
type FactoryIntegrationRuntimeManagedNamespaceLister interface {
	// List lists all FactoryIntegrationRuntimeManageds in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FactoryIntegrationRuntimeManaged, err error)
	// Get retrieves the FactoryIntegrationRuntimeManaged from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FactoryIntegrationRuntimeManaged, error)
	FactoryIntegrationRuntimeManagedNamespaceListerExpansion
}

// factoryIntegrationRuntimeManagedNamespaceLister implements the FactoryIntegrationRuntimeManagedNamespaceLister
// interface.
type factoryIntegrationRuntimeManagedNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FactoryIntegrationRuntimeManageds in the indexer for a given namespace.
func (s factoryIntegrationRuntimeManagedNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FactoryIntegrationRuntimeManaged, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FactoryIntegrationRuntimeManaged))
	})
	return ret, err
}

// Get retrieves the FactoryIntegrationRuntimeManaged from the indexer for a given namespace and name.
func (s factoryIntegrationRuntimeManagedNamespaceLister) Get(name string) (*v1alpha1.FactoryIntegrationRuntimeManaged, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("factoryintegrationruntimemanaged"), name)
	}
	return obj.(*v1alpha1.FactoryIntegrationRuntimeManaged), nil
}
