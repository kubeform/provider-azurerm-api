/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ProtectionBackupInstancePostgresqlLister helps list ProtectionBackupInstancePostgresqls.
// All objects returned here must be treated as read-only.
type ProtectionBackupInstancePostgresqlLister interface {
	// List lists all ProtectionBackupInstancePostgresqls in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ProtectionBackupInstancePostgresql, err error)
	// ProtectionBackupInstancePostgresqls returns an object that can list and get ProtectionBackupInstancePostgresqls.
	ProtectionBackupInstancePostgresqls(namespace string) ProtectionBackupInstancePostgresqlNamespaceLister
	ProtectionBackupInstancePostgresqlListerExpansion
}

// protectionBackupInstancePostgresqlLister implements the ProtectionBackupInstancePostgresqlLister interface.
type protectionBackupInstancePostgresqlLister struct {
	indexer cache.Indexer
}

// NewProtectionBackupInstancePostgresqlLister returns a new ProtectionBackupInstancePostgresqlLister.
func NewProtectionBackupInstancePostgresqlLister(indexer cache.Indexer) ProtectionBackupInstancePostgresqlLister {
	return &protectionBackupInstancePostgresqlLister{indexer: indexer}
}

// List lists all ProtectionBackupInstancePostgresqls in the indexer.
func (s *protectionBackupInstancePostgresqlLister) List(selector labels.Selector) (ret []*v1alpha1.ProtectionBackupInstancePostgresql, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ProtectionBackupInstancePostgresql))
	})
	return ret, err
}

// ProtectionBackupInstancePostgresqls returns an object that can list and get ProtectionBackupInstancePostgresqls.
func (s *protectionBackupInstancePostgresqlLister) ProtectionBackupInstancePostgresqls(namespace string) ProtectionBackupInstancePostgresqlNamespaceLister {
	return protectionBackupInstancePostgresqlNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ProtectionBackupInstancePostgresqlNamespaceLister helps list and get ProtectionBackupInstancePostgresqls.
// All objects returned here must be treated as read-only.
type ProtectionBackupInstancePostgresqlNamespaceLister interface {
	// List lists all ProtectionBackupInstancePostgresqls in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ProtectionBackupInstancePostgresql, err error)
	// Get retrieves the ProtectionBackupInstancePostgresql from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ProtectionBackupInstancePostgresql, error)
	ProtectionBackupInstancePostgresqlNamespaceListerExpansion
}

// protectionBackupInstancePostgresqlNamespaceLister implements the ProtectionBackupInstancePostgresqlNamespaceLister
// interface.
type protectionBackupInstancePostgresqlNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ProtectionBackupInstancePostgresqls in the indexer for a given namespace.
func (s protectionBackupInstancePostgresqlNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ProtectionBackupInstancePostgresql, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ProtectionBackupInstancePostgresql))
	})
	return ret, err
}

// Get retrieves the ProtectionBackupInstancePostgresql from the indexer for a given namespace and name.
func (s protectionBackupInstancePostgresqlNamespaceLister) Get(name string) (*v1alpha1.ProtectionBackupInstancePostgresql, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("protectionbackupinstancepostgresql"), name)
	}
	return obj.(*v1alpha1.ProtectionBackupInstancePostgresql), nil
}
