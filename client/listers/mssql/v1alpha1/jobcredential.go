/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/mssql/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// JobCredentialLister helps list JobCredentials.
// All objects returned here must be treated as read-only.
type JobCredentialLister interface {
	// List lists all JobCredentials in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JobCredential, err error)
	// JobCredentials returns an object that can list and get JobCredentials.
	JobCredentials(namespace string) JobCredentialNamespaceLister
	JobCredentialListerExpansion
}

// jobCredentialLister implements the JobCredentialLister interface.
type jobCredentialLister struct {
	indexer cache.Indexer
}

// NewJobCredentialLister returns a new JobCredentialLister.
func NewJobCredentialLister(indexer cache.Indexer) JobCredentialLister {
	return &jobCredentialLister{indexer: indexer}
}

// List lists all JobCredentials in the indexer.
func (s *jobCredentialLister) List(selector labels.Selector) (ret []*v1alpha1.JobCredential, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JobCredential))
	})
	return ret, err
}

// JobCredentials returns an object that can list and get JobCredentials.
func (s *jobCredentialLister) JobCredentials(namespace string) JobCredentialNamespaceLister {
	return jobCredentialNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// JobCredentialNamespaceLister helps list and get JobCredentials.
// All objects returned here must be treated as read-only.
type JobCredentialNamespaceLister interface {
	// List lists all JobCredentials in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JobCredential, err error)
	// Get retrieves the JobCredential from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.JobCredential, error)
	JobCredentialNamespaceListerExpansion
}

// jobCredentialNamespaceLister implements the JobCredentialNamespaceLister
// interface.
type jobCredentialNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all JobCredentials in the indexer for a given namespace.
func (s jobCredentialNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.JobCredential, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JobCredential))
	})
	return ret, err
}

// Get retrieves the JobCredential from the indexer for a given namespace and name.
func (s jobCredentialNamespaceLister) Get(name string) (*v1alpha1.JobCredential, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("jobcredential"), name)
	}
	return obj.(*v1alpha1.JobCredential), nil
}
