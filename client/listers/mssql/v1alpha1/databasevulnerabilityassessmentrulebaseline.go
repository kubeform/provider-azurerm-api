/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/mssql/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DatabaseVulnerabilityAssessmentRuleBaselineLister helps list DatabaseVulnerabilityAssessmentRuleBaselines.
// All objects returned here must be treated as read-only.
type DatabaseVulnerabilityAssessmentRuleBaselineLister interface {
	// List lists all DatabaseVulnerabilityAssessmentRuleBaselines in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DatabaseVulnerabilityAssessmentRuleBaseline, err error)
	// DatabaseVulnerabilityAssessmentRuleBaselines returns an object that can list and get DatabaseVulnerabilityAssessmentRuleBaselines.
	DatabaseVulnerabilityAssessmentRuleBaselines(namespace string) DatabaseVulnerabilityAssessmentRuleBaselineNamespaceLister
	DatabaseVulnerabilityAssessmentRuleBaselineListerExpansion
}

// databaseVulnerabilityAssessmentRuleBaselineLister implements the DatabaseVulnerabilityAssessmentRuleBaselineLister interface.
type databaseVulnerabilityAssessmentRuleBaselineLister struct {
	indexer cache.Indexer
}

// NewDatabaseVulnerabilityAssessmentRuleBaselineLister returns a new DatabaseVulnerabilityAssessmentRuleBaselineLister.
func NewDatabaseVulnerabilityAssessmentRuleBaselineLister(indexer cache.Indexer) DatabaseVulnerabilityAssessmentRuleBaselineLister {
	return &databaseVulnerabilityAssessmentRuleBaselineLister{indexer: indexer}
}

// List lists all DatabaseVulnerabilityAssessmentRuleBaselines in the indexer.
func (s *databaseVulnerabilityAssessmentRuleBaselineLister) List(selector labels.Selector) (ret []*v1alpha1.DatabaseVulnerabilityAssessmentRuleBaseline, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DatabaseVulnerabilityAssessmentRuleBaseline))
	})
	return ret, err
}

// DatabaseVulnerabilityAssessmentRuleBaselines returns an object that can list and get DatabaseVulnerabilityAssessmentRuleBaselines.
func (s *databaseVulnerabilityAssessmentRuleBaselineLister) DatabaseVulnerabilityAssessmentRuleBaselines(namespace string) DatabaseVulnerabilityAssessmentRuleBaselineNamespaceLister {
	return databaseVulnerabilityAssessmentRuleBaselineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DatabaseVulnerabilityAssessmentRuleBaselineNamespaceLister helps list and get DatabaseVulnerabilityAssessmentRuleBaselines.
// All objects returned here must be treated as read-only.
type DatabaseVulnerabilityAssessmentRuleBaselineNamespaceLister interface {
	// List lists all DatabaseVulnerabilityAssessmentRuleBaselines in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DatabaseVulnerabilityAssessmentRuleBaseline, err error)
	// Get retrieves the DatabaseVulnerabilityAssessmentRuleBaseline from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DatabaseVulnerabilityAssessmentRuleBaseline, error)
	DatabaseVulnerabilityAssessmentRuleBaselineNamespaceListerExpansion
}

// databaseVulnerabilityAssessmentRuleBaselineNamespaceLister implements the DatabaseVulnerabilityAssessmentRuleBaselineNamespaceLister
// interface.
type databaseVulnerabilityAssessmentRuleBaselineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DatabaseVulnerabilityAssessmentRuleBaselines in the indexer for a given namespace.
func (s databaseVulnerabilityAssessmentRuleBaselineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DatabaseVulnerabilityAssessmentRuleBaseline, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DatabaseVulnerabilityAssessmentRuleBaseline))
	})
	return ret, err
}

// Get retrieves the DatabaseVulnerabilityAssessmentRuleBaseline from the indexer for a given namespace and name.
func (s databaseVulnerabilityAssessmentRuleBaselineNamespaceLister) Get(name string) (*v1alpha1.DatabaseVulnerabilityAssessmentRuleBaseline, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("databasevulnerabilityassessmentrulebaseline"), name)
	}
	return obj.(*v1alpha1.DatabaseVulnerabilityAssessmentRuleBaseline), nil
}
