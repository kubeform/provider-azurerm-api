/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/mssql/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServerVulnerabilityAssessmentLister helps list ServerVulnerabilityAssessments.
// All objects returned here must be treated as read-only.
type ServerVulnerabilityAssessmentLister interface {
	// List lists all ServerVulnerabilityAssessments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServerVulnerabilityAssessment, err error)
	// ServerVulnerabilityAssessments returns an object that can list and get ServerVulnerabilityAssessments.
	ServerVulnerabilityAssessments(namespace string) ServerVulnerabilityAssessmentNamespaceLister
	ServerVulnerabilityAssessmentListerExpansion
}

// serverVulnerabilityAssessmentLister implements the ServerVulnerabilityAssessmentLister interface.
type serverVulnerabilityAssessmentLister struct {
	indexer cache.Indexer
}

// NewServerVulnerabilityAssessmentLister returns a new ServerVulnerabilityAssessmentLister.
func NewServerVulnerabilityAssessmentLister(indexer cache.Indexer) ServerVulnerabilityAssessmentLister {
	return &serverVulnerabilityAssessmentLister{indexer: indexer}
}

// List lists all ServerVulnerabilityAssessments in the indexer.
func (s *serverVulnerabilityAssessmentLister) List(selector labels.Selector) (ret []*v1alpha1.ServerVulnerabilityAssessment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServerVulnerabilityAssessment))
	})
	return ret, err
}

// ServerVulnerabilityAssessments returns an object that can list and get ServerVulnerabilityAssessments.
func (s *serverVulnerabilityAssessmentLister) ServerVulnerabilityAssessments(namespace string) ServerVulnerabilityAssessmentNamespaceLister {
	return serverVulnerabilityAssessmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServerVulnerabilityAssessmentNamespaceLister helps list and get ServerVulnerabilityAssessments.
// All objects returned here must be treated as read-only.
type ServerVulnerabilityAssessmentNamespaceLister interface {
	// List lists all ServerVulnerabilityAssessments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServerVulnerabilityAssessment, err error)
	// Get retrieves the ServerVulnerabilityAssessment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ServerVulnerabilityAssessment, error)
	ServerVulnerabilityAssessmentNamespaceListerExpansion
}

// serverVulnerabilityAssessmentNamespaceLister implements the ServerVulnerabilityAssessmentNamespaceLister
// interface.
type serverVulnerabilityAssessmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServerVulnerabilityAssessments in the indexer for a given namespace.
func (s serverVulnerabilityAssessmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServerVulnerabilityAssessment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServerVulnerabilityAssessment))
	})
	return ret, err
}

// Get retrieves the ServerVulnerabilityAssessment from the indexer for a given namespace and name.
func (s serverVulnerabilityAssessmentNamespaceLister) Get(name string) (*v1alpha1.ServerVulnerabilityAssessment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("servervulnerabilityassessment"), name)
	}
	return obj.(*v1alpha1.ServerVulnerabilityAssessment), nil
}
