/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/mssql/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// JobAgentLister helps list JobAgents.
// All objects returned here must be treated as read-only.
type JobAgentLister interface {
	// List lists all JobAgents in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JobAgent, err error)
	// JobAgents returns an object that can list and get JobAgents.
	JobAgents(namespace string) JobAgentNamespaceLister
	JobAgentListerExpansion
}

// jobAgentLister implements the JobAgentLister interface.
type jobAgentLister struct {
	indexer cache.Indexer
}

// NewJobAgentLister returns a new JobAgentLister.
func NewJobAgentLister(indexer cache.Indexer) JobAgentLister {
	return &jobAgentLister{indexer: indexer}
}

// List lists all JobAgents in the indexer.
func (s *jobAgentLister) List(selector labels.Selector) (ret []*v1alpha1.JobAgent, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JobAgent))
	})
	return ret, err
}

// JobAgents returns an object that can list and get JobAgents.
func (s *jobAgentLister) JobAgents(namespace string) JobAgentNamespaceLister {
	return jobAgentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// JobAgentNamespaceLister helps list and get JobAgents.
// All objects returned here must be treated as read-only.
type JobAgentNamespaceLister interface {
	// List lists all JobAgents in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JobAgent, err error)
	// Get retrieves the JobAgent from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.JobAgent, error)
	JobAgentNamespaceListerExpansion
}

// jobAgentNamespaceLister implements the JobAgentNamespaceLister
// interface.
type jobAgentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all JobAgents in the indexer for a given namespace.
func (s jobAgentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.JobAgent, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JobAgent))
	})
	return ret, err
}

// Get retrieves the JobAgent from the indexer for a given namespace and name.
func (s jobAgentNamespaceLister) Get(name string) (*v1alpha1.JobAgent, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("jobagent"), name)
	}
	return obj.(*v1alpha1.JobAgent), nil
}
