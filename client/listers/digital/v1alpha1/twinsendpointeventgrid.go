/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/digital/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TwinsEndpointEventgridLister helps list TwinsEndpointEventgrids.
// All objects returned here must be treated as read-only.
type TwinsEndpointEventgridLister interface {
	// List lists all TwinsEndpointEventgrids in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TwinsEndpointEventgrid, err error)
	// TwinsEndpointEventgrids returns an object that can list and get TwinsEndpointEventgrids.
	TwinsEndpointEventgrids(namespace string) TwinsEndpointEventgridNamespaceLister
	TwinsEndpointEventgridListerExpansion
}

// twinsEndpointEventgridLister implements the TwinsEndpointEventgridLister interface.
type twinsEndpointEventgridLister struct {
	indexer cache.Indexer
}

// NewTwinsEndpointEventgridLister returns a new TwinsEndpointEventgridLister.
func NewTwinsEndpointEventgridLister(indexer cache.Indexer) TwinsEndpointEventgridLister {
	return &twinsEndpointEventgridLister{indexer: indexer}
}

// List lists all TwinsEndpointEventgrids in the indexer.
func (s *twinsEndpointEventgridLister) List(selector labels.Selector) (ret []*v1alpha1.TwinsEndpointEventgrid, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TwinsEndpointEventgrid))
	})
	return ret, err
}

// TwinsEndpointEventgrids returns an object that can list and get TwinsEndpointEventgrids.
func (s *twinsEndpointEventgridLister) TwinsEndpointEventgrids(namespace string) TwinsEndpointEventgridNamespaceLister {
	return twinsEndpointEventgridNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TwinsEndpointEventgridNamespaceLister helps list and get TwinsEndpointEventgrids.
// All objects returned here must be treated as read-only.
type TwinsEndpointEventgridNamespaceLister interface {
	// List lists all TwinsEndpointEventgrids in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TwinsEndpointEventgrid, err error)
	// Get retrieves the TwinsEndpointEventgrid from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TwinsEndpointEventgrid, error)
	TwinsEndpointEventgridNamespaceListerExpansion
}

// twinsEndpointEventgridNamespaceLister implements the TwinsEndpointEventgridNamespaceLister
// interface.
type twinsEndpointEventgridNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TwinsEndpointEventgrids in the indexer for a given namespace.
func (s twinsEndpointEventgridNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TwinsEndpointEventgrid, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TwinsEndpointEventgrid))
	})
	return ret, err
}

// Get retrieves the TwinsEndpointEventgrid from the indexer for a given namespace and name.
func (s twinsEndpointEventgridNamespaceLister) Get(name string) (*v1alpha1.TwinsEndpointEventgrid, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("twinsendpointeventgrid"), name)
	}
	return obj.(*v1alpha1.TwinsEndpointEventgrid), nil
}
