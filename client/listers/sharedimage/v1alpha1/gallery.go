/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/sharedimage/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GalleryLister helps list Galleries.
// All objects returned here must be treated as read-only.
type GalleryLister interface {
	// List lists all Galleries in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Gallery, err error)
	// Galleries returns an object that can list and get Galleries.
	Galleries(namespace string) GalleryNamespaceLister
	GalleryListerExpansion
}

// galleryLister implements the GalleryLister interface.
type galleryLister struct {
	indexer cache.Indexer
}

// NewGalleryLister returns a new GalleryLister.
func NewGalleryLister(indexer cache.Indexer) GalleryLister {
	return &galleryLister{indexer: indexer}
}

// List lists all Galleries in the indexer.
func (s *galleryLister) List(selector labels.Selector) (ret []*v1alpha1.Gallery, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Gallery))
	})
	return ret, err
}

// Galleries returns an object that can list and get Galleries.
func (s *galleryLister) Galleries(namespace string) GalleryNamespaceLister {
	return galleryNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GalleryNamespaceLister helps list and get Galleries.
// All objects returned here must be treated as read-only.
type GalleryNamespaceLister interface {
	// List lists all Galleries in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Gallery, err error)
	// Get retrieves the Gallery from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Gallery, error)
	GalleryNamespaceListerExpansion
}

// galleryNamespaceLister implements the GalleryNamespaceLister
// interface.
type galleryNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Galleries in the indexer for a given namespace.
func (s galleryNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Gallery, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Gallery))
	})
	return ret, err
}

// Get retrieves the Gallery from the indexer for a given namespace and name.
func (s galleryNamespaceLister) Get(name string) (*v1alpha1.Gallery, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("gallery"), name)
	}
	return obj.(*v1alpha1.Gallery), nil
}
