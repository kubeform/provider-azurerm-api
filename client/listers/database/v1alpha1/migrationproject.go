/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/database/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MigrationProjectLister helps list MigrationProjects.
// All objects returned here must be treated as read-only.
type MigrationProjectLister interface {
	// List lists all MigrationProjects in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MigrationProject, err error)
	// MigrationProjects returns an object that can list and get MigrationProjects.
	MigrationProjects(namespace string) MigrationProjectNamespaceLister
	MigrationProjectListerExpansion
}

// migrationProjectLister implements the MigrationProjectLister interface.
type migrationProjectLister struct {
	indexer cache.Indexer
}

// NewMigrationProjectLister returns a new MigrationProjectLister.
func NewMigrationProjectLister(indexer cache.Indexer) MigrationProjectLister {
	return &migrationProjectLister{indexer: indexer}
}

// List lists all MigrationProjects in the indexer.
func (s *migrationProjectLister) List(selector labels.Selector) (ret []*v1alpha1.MigrationProject, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MigrationProject))
	})
	return ret, err
}

// MigrationProjects returns an object that can list and get MigrationProjects.
func (s *migrationProjectLister) MigrationProjects(namespace string) MigrationProjectNamespaceLister {
	return migrationProjectNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MigrationProjectNamespaceLister helps list and get MigrationProjects.
// All objects returned here must be treated as read-only.
type MigrationProjectNamespaceLister interface {
	// List lists all MigrationProjects in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MigrationProject, err error)
	// Get retrieves the MigrationProject from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MigrationProject, error)
	MigrationProjectNamespaceListerExpansion
}

// migrationProjectNamespaceLister implements the MigrationProjectNamespaceLister
// interface.
type migrationProjectNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MigrationProjects in the indexer for a given namespace.
func (s migrationProjectNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MigrationProject, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MigrationProject))
	})
	return ret, err
}

// Get retrieves the MigrationProject from the indexer for a given namespace and name.
func (s migrationProjectNamespaceLister) Get(name string) (*v1alpha1.MigrationProject, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("migrationproject"), name)
	}
	return obj.(*v1alpha1.MigrationProject), nil
}
