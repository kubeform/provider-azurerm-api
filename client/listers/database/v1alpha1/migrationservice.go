/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/database/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MigrationServiceLister helps list MigrationServices.
// All objects returned here must be treated as read-only.
type MigrationServiceLister interface {
	// List lists all MigrationServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MigrationService, err error)
	// MigrationServices returns an object that can list and get MigrationServices.
	MigrationServices(namespace string) MigrationServiceNamespaceLister
	MigrationServiceListerExpansion
}

// migrationServiceLister implements the MigrationServiceLister interface.
type migrationServiceLister struct {
	indexer cache.Indexer
}

// NewMigrationServiceLister returns a new MigrationServiceLister.
func NewMigrationServiceLister(indexer cache.Indexer) MigrationServiceLister {
	return &migrationServiceLister{indexer: indexer}
}

// List lists all MigrationServices in the indexer.
func (s *migrationServiceLister) List(selector labels.Selector) (ret []*v1alpha1.MigrationService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MigrationService))
	})
	return ret, err
}

// MigrationServices returns an object that can list and get MigrationServices.
func (s *migrationServiceLister) MigrationServices(namespace string) MigrationServiceNamespaceLister {
	return migrationServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MigrationServiceNamespaceLister helps list and get MigrationServices.
// All objects returned here must be treated as read-only.
type MigrationServiceNamespaceLister interface {
	// List lists all MigrationServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MigrationService, err error)
	// Get retrieves the MigrationService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MigrationService, error)
	MigrationServiceNamespaceListerExpansion
}

// migrationServiceNamespaceLister implements the MigrationServiceNamespaceLister
// interface.
type migrationServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MigrationServices in the indexer for a given namespace.
func (s migrationServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MigrationService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MigrationService))
	})
	return ret, err
}

// Get retrieves the MigrationService from the indexer for a given namespace and name.
func (s migrationServiceNamespaceLister) Get(name string) (*v1alpha1.MigrationService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("migrationservice"), name)
	}
	return obj.(*v1alpha1.MigrationService), nil
}
