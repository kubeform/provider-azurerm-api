/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/media/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServicesAccountLister helps list ServicesAccounts.
// All objects returned here must be treated as read-only.
type ServicesAccountLister interface {
	// List lists all ServicesAccounts in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServicesAccount, err error)
	// ServicesAccounts returns an object that can list and get ServicesAccounts.
	ServicesAccounts(namespace string) ServicesAccountNamespaceLister
	ServicesAccountListerExpansion
}

// servicesAccountLister implements the ServicesAccountLister interface.
type servicesAccountLister struct {
	indexer cache.Indexer
}

// NewServicesAccountLister returns a new ServicesAccountLister.
func NewServicesAccountLister(indexer cache.Indexer) ServicesAccountLister {
	return &servicesAccountLister{indexer: indexer}
}

// List lists all ServicesAccounts in the indexer.
func (s *servicesAccountLister) List(selector labels.Selector) (ret []*v1alpha1.ServicesAccount, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServicesAccount))
	})
	return ret, err
}

// ServicesAccounts returns an object that can list and get ServicesAccounts.
func (s *servicesAccountLister) ServicesAccounts(namespace string) ServicesAccountNamespaceLister {
	return servicesAccountNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServicesAccountNamespaceLister helps list and get ServicesAccounts.
// All objects returned here must be treated as read-only.
type ServicesAccountNamespaceLister interface {
	// List lists all ServicesAccounts in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServicesAccount, err error)
	// Get retrieves the ServicesAccount from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ServicesAccount, error)
	ServicesAccountNamespaceListerExpansion
}

// servicesAccountNamespaceLister implements the ServicesAccountNamespaceLister
// interface.
type servicesAccountNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServicesAccounts in the indexer for a given namespace.
func (s servicesAccountNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServicesAccount, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServicesAccount))
	})
	return ret, err
}

// Get retrieves the ServicesAccount from the indexer for a given namespace and name.
func (s servicesAccountNamespaceLister) Get(name string) (*v1alpha1.ServicesAccount, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("servicesaccount"), name)
	}
	return obj.(*v1alpha1.ServicesAccount), nil
}
