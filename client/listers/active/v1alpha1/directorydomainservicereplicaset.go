/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/active/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DirectoryDomainServiceReplicaSetLister helps list DirectoryDomainServiceReplicaSets.
// All objects returned here must be treated as read-only.
type DirectoryDomainServiceReplicaSetLister interface {
	// List lists all DirectoryDomainServiceReplicaSets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DirectoryDomainServiceReplicaSet, err error)
	// DirectoryDomainServiceReplicaSets returns an object that can list and get DirectoryDomainServiceReplicaSets.
	DirectoryDomainServiceReplicaSets(namespace string) DirectoryDomainServiceReplicaSetNamespaceLister
	DirectoryDomainServiceReplicaSetListerExpansion
}

// directoryDomainServiceReplicaSetLister implements the DirectoryDomainServiceReplicaSetLister interface.
type directoryDomainServiceReplicaSetLister struct {
	indexer cache.Indexer
}

// NewDirectoryDomainServiceReplicaSetLister returns a new DirectoryDomainServiceReplicaSetLister.
func NewDirectoryDomainServiceReplicaSetLister(indexer cache.Indexer) DirectoryDomainServiceReplicaSetLister {
	return &directoryDomainServiceReplicaSetLister{indexer: indexer}
}

// List lists all DirectoryDomainServiceReplicaSets in the indexer.
func (s *directoryDomainServiceReplicaSetLister) List(selector labels.Selector) (ret []*v1alpha1.DirectoryDomainServiceReplicaSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DirectoryDomainServiceReplicaSet))
	})
	return ret, err
}

// DirectoryDomainServiceReplicaSets returns an object that can list and get DirectoryDomainServiceReplicaSets.
func (s *directoryDomainServiceReplicaSetLister) DirectoryDomainServiceReplicaSets(namespace string) DirectoryDomainServiceReplicaSetNamespaceLister {
	return directoryDomainServiceReplicaSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DirectoryDomainServiceReplicaSetNamespaceLister helps list and get DirectoryDomainServiceReplicaSets.
// All objects returned here must be treated as read-only.
type DirectoryDomainServiceReplicaSetNamespaceLister interface {
	// List lists all DirectoryDomainServiceReplicaSets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DirectoryDomainServiceReplicaSet, err error)
	// Get retrieves the DirectoryDomainServiceReplicaSet from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DirectoryDomainServiceReplicaSet, error)
	DirectoryDomainServiceReplicaSetNamespaceListerExpansion
}

// directoryDomainServiceReplicaSetNamespaceLister implements the DirectoryDomainServiceReplicaSetNamespaceLister
// interface.
type directoryDomainServiceReplicaSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DirectoryDomainServiceReplicaSets in the indexer for a given namespace.
func (s directoryDomainServiceReplicaSetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DirectoryDomainServiceReplicaSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DirectoryDomainServiceReplicaSet))
	})
	return ret, err
}

// Get retrieves the DirectoryDomainServiceReplicaSet from the indexer for a given namespace and name.
func (s directoryDomainServiceReplicaSetNamespaceLister) Get(name string) (*v1alpha1.DirectoryDomainServiceReplicaSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("directorydomainservicereplicaset"), name)
	}
	return obj.(*v1alpha1.DirectoryDomainServiceReplicaSet), nil
}
