/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/cdn/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EndpointCustomDomainLister helps list EndpointCustomDomains.
// All objects returned here must be treated as read-only.
type EndpointCustomDomainLister interface {
	// List lists all EndpointCustomDomains in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EndpointCustomDomain, err error)
	// EndpointCustomDomains returns an object that can list and get EndpointCustomDomains.
	EndpointCustomDomains(namespace string) EndpointCustomDomainNamespaceLister
	EndpointCustomDomainListerExpansion
}

// endpointCustomDomainLister implements the EndpointCustomDomainLister interface.
type endpointCustomDomainLister struct {
	indexer cache.Indexer
}

// NewEndpointCustomDomainLister returns a new EndpointCustomDomainLister.
func NewEndpointCustomDomainLister(indexer cache.Indexer) EndpointCustomDomainLister {
	return &endpointCustomDomainLister{indexer: indexer}
}

// List lists all EndpointCustomDomains in the indexer.
func (s *endpointCustomDomainLister) List(selector labels.Selector) (ret []*v1alpha1.EndpointCustomDomain, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EndpointCustomDomain))
	})
	return ret, err
}

// EndpointCustomDomains returns an object that can list and get EndpointCustomDomains.
func (s *endpointCustomDomainLister) EndpointCustomDomains(namespace string) EndpointCustomDomainNamespaceLister {
	return endpointCustomDomainNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EndpointCustomDomainNamespaceLister helps list and get EndpointCustomDomains.
// All objects returned here must be treated as read-only.
type EndpointCustomDomainNamespaceLister interface {
	// List lists all EndpointCustomDomains in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EndpointCustomDomain, err error)
	// Get retrieves the EndpointCustomDomain from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.EndpointCustomDomain, error)
	EndpointCustomDomainNamespaceListerExpansion
}

// endpointCustomDomainNamespaceLister implements the EndpointCustomDomainNamespaceLister
// interface.
type endpointCustomDomainNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EndpointCustomDomains in the indexer for a given namespace.
func (s endpointCustomDomainNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EndpointCustomDomain, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EndpointCustomDomain))
	})
	return ret, err
}

// Get retrieves the EndpointCustomDomain from the indexer for a given namespace and name.
func (s endpointCustomDomainNamespaceLister) Get(name string) (*v1alpha1.EndpointCustomDomain, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("endpointcustomdomain"), name)
	}
	return obj.(*v1alpha1.EndpointCustomDomain), nil
}
