/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/management/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GroupTemplateDeploymentLister helps list GroupTemplateDeployments.
// All objects returned here must be treated as read-only.
type GroupTemplateDeploymentLister interface {
	// List lists all GroupTemplateDeployments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GroupTemplateDeployment, err error)
	// GroupTemplateDeployments returns an object that can list and get GroupTemplateDeployments.
	GroupTemplateDeployments(namespace string) GroupTemplateDeploymentNamespaceLister
	GroupTemplateDeploymentListerExpansion
}

// groupTemplateDeploymentLister implements the GroupTemplateDeploymentLister interface.
type groupTemplateDeploymentLister struct {
	indexer cache.Indexer
}

// NewGroupTemplateDeploymentLister returns a new GroupTemplateDeploymentLister.
func NewGroupTemplateDeploymentLister(indexer cache.Indexer) GroupTemplateDeploymentLister {
	return &groupTemplateDeploymentLister{indexer: indexer}
}

// List lists all GroupTemplateDeployments in the indexer.
func (s *groupTemplateDeploymentLister) List(selector labels.Selector) (ret []*v1alpha1.GroupTemplateDeployment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GroupTemplateDeployment))
	})
	return ret, err
}

// GroupTemplateDeployments returns an object that can list and get GroupTemplateDeployments.
func (s *groupTemplateDeploymentLister) GroupTemplateDeployments(namespace string) GroupTemplateDeploymentNamespaceLister {
	return groupTemplateDeploymentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GroupTemplateDeploymentNamespaceLister helps list and get GroupTemplateDeployments.
// All objects returned here must be treated as read-only.
type GroupTemplateDeploymentNamespaceLister interface {
	// List lists all GroupTemplateDeployments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GroupTemplateDeployment, err error)
	// Get retrieves the GroupTemplateDeployment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GroupTemplateDeployment, error)
	GroupTemplateDeploymentNamespaceListerExpansion
}

// groupTemplateDeploymentNamespaceLister implements the GroupTemplateDeploymentNamespaceLister
// interface.
type groupTemplateDeploymentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GroupTemplateDeployments in the indexer for a given namespace.
func (s groupTemplateDeploymentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GroupTemplateDeployment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GroupTemplateDeployment))
	})
	return ret, err
}

// Get retrieves the GroupTemplateDeployment from the indexer for a given namespace and name.
func (s groupTemplateDeploymentNamespaceLister) Get(name string) (*v1alpha1.GroupTemplateDeployment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("grouptemplatedeployment"), name)
	}
	return obj.(*v1alpha1.GroupTemplateDeployment), nil
}
