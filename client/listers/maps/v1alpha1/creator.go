/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/maps/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CreatorLister helps list Creators.
// All objects returned here must be treated as read-only.
type CreatorLister interface {
	// List lists all Creators in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Creator, err error)
	// Creators returns an object that can list and get Creators.
	Creators(namespace string) CreatorNamespaceLister
	CreatorListerExpansion
}

// creatorLister implements the CreatorLister interface.
type creatorLister struct {
	indexer cache.Indexer
}

// NewCreatorLister returns a new CreatorLister.
func NewCreatorLister(indexer cache.Indexer) CreatorLister {
	return &creatorLister{indexer: indexer}
}

// List lists all Creators in the indexer.
func (s *creatorLister) List(selector labels.Selector) (ret []*v1alpha1.Creator, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Creator))
	})
	return ret, err
}

// Creators returns an object that can list and get Creators.
func (s *creatorLister) Creators(namespace string) CreatorNamespaceLister {
	return creatorNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CreatorNamespaceLister helps list and get Creators.
// All objects returned here must be treated as read-only.
type CreatorNamespaceLister interface {
	// List lists all Creators in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Creator, err error)
	// Get retrieves the Creator from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Creator, error)
	CreatorNamespaceListerExpansion
}

// creatorNamespaceLister implements the CreatorNamespaceLister
// interface.
type creatorNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Creators in the indexer for a given namespace.
func (s creatorNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Creator, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Creator))
	})
	return ret, err
}

// Get retrieves the Creator from the indexer for a given namespace and name.
func (s creatorNamespaceLister) Get(name string) (*v1alpha1.Creator, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("creator"), name)
	}
	return obj.(*v1alpha1.Creator), nil
}
