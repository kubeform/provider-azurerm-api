/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/spring/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudAppLister helps list CloudApps.
// All objects returned here must be treated as read-only.
type CloudAppLister interface {
	// List lists all CloudApps in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CloudApp, err error)
	// CloudApps returns an object that can list and get CloudApps.
	CloudApps(namespace string) CloudAppNamespaceLister
	CloudAppListerExpansion
}

// cloudAppLister implements the CloudAppLister interface.
type cloudAppLister struct {
	indexer cache.Indexer
}

// NewCloudAppLister returns a new CloudAppLister.
func NewCloudAppLister(indexer cache.Indexer) CloudAppLister {
	return &cloudAppLister{indexer: indexer}
}

// List lists all CloudApps in the indexer.
func (s *cloudAppLister) List(selector labels.Selector) (ret []*v1alpha1.CloudApp, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudApp))
	})
	return ret, err
}

// CloudApps returns an object that can list and get CloudApps.
func (s *cloudAppLister) CloudApps(namespace string) CloudAppNamespaceLister {
	return cloudAppNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudAppNamespaceLister helps list and get CloudApps.
// All objects returned here must be treated as read-only.
type CloudAppNamespaceLister interface {
	// List lists all CloudApps in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CloudApp, err error)
	// Get retrieves the CloudApp from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CloudApp, error)
	CloudAppNamespaceListerExpansion
}

// cloudAppNamespaceLister implements the CloudAppNamespaceLister
// interface.
type cloudAppNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudApps in the indexer for a given namespace.
func (s cloudAppNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudApp, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudApp))
	})
	return ret, err
}

// Get retrieves the CloudApp from the indexer for a given namespace and name.
func (s cloudAppNamespaceLister) Get(name string) (*v1alpha1.CloudApp, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cloudapp"), name)
	}
	return obj.(*v1alpha1.CloudApp), nil
}
