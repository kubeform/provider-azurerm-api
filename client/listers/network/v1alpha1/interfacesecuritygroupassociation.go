/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/network/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InterfaceSecurityGroupAssociationLister helps list InterfaceSecurityGroupAssociations.
// All objects returned here must be treated as read-only.
type InterfaceSecurityGroupAssociationLister interface {
	// List lists all InterfaceSecurityGroupAssociations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InterfaceSecurityGroupAssociation, err error)
	// InterfaceSecurityGroupAssociations returns an object that can list and get InterfaceSecurityGroupAssociations.
	InterfaceSecurityGroupAssociations(namespace string) InterfaceSecurityGroupAssociationNamespaceLister
	InterfaceSecurityGroupAssociationListerExpansion
}

// interfaceSecurityGroupAssociationLister implements the InterfaceSecurityGroupAssociationLister interface.
type interfaceSecurityGroupAssociationLister struct {
	indexer cache.Indexer
}

// NewInterfaceSecurityGroupAssociationLister returns a new InterfaceSecurityGroupAssociationLister.
func NewInterfaceSecurityGroupAssociationLister(indexer cache.Indexer) InterfaceSecurityGroupAssociationLister {
	return &interfaceSecurityGroupAssociationLister{indexer: indexer}
}

// List lists all InterfaceSecurityGroupAssociations in the indexer.
func (s *interfaceSecurityGroupAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.InterfaceSecurityGroupAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InterfaceSecurityGroupAssociation))
	})
	return ret, err
}

// InterfaceSecurityGroupAssociations returns an object that can list and get InterfaceSecurityGroupAssociations.
func (s *interfaceSecurityGroupAssociationLister) InterfaceSecurityGroupAssociations(namespace string) InterfaceSecurityGroupAssociationNamespaceLister {
	return interfaceSecurityGroupAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InterfaceSecurityGroupAssociationNamespaceLister helps list and get InterfaceSecurityGroupAssociations.
// All objects returned here must be treated as read-only.
type InterfaceSecurityGroupAssociationNamespaceLister interface {
	// List lists all InterfaceSecurityGroupAssociations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InterfaceSecurityGroupAssociation, err error)
	// Get retrieves the InterfaceSecurityGroupAssociation from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.InterfaceSecurityGroupAssociation, error)
	InterfaceSecurityGroupAssociationNamespaceListerExpansion
}

// interfaceSecurityGroupAssociationNamespaceLister implements the InterfaceSecurityGroupAssociationNamespaceLister
// interface.
type interfaceSecurityGroupAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InterfaceSecurityGroupAssociations in the indexer for a given namespace.
func (s interfaceSecurityGroupAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InterfaceSecurityGroupAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InterfaceSecurityGroupAssociation))
	})
	return ret, err
}

// Get retrieves the InterfaceSecurityGroupAssociation from the indexer for a given namespace and name.
func (s interfaceSecurityGroupAssociationNamespaceLister) Get(name string) (*v1alpha1.InterfaceSecurityGroupAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("interfacesecuritygroupassociation"), name)
	}
	return obj.(*v1alpha1.InterfaceSecurityGroupAssociation), nil
}
