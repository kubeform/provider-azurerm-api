/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/security/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CenterServerVulnerabilityAssessmentLister helps list CenterServerVulnerabilityAssessments.
// All objects returned here must be treated as read-only.
type CenterServerVulnerabilityAssessmentLister interface {
	// List lists all CenterServerVulnerabilityAssessments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CenterServerVulnerabilityAssessment, err error)
	// CenterServerVulnerabilityAssessments returns an object that can list and get CenterServerVulnerabilityAssessments.
	CenterServerVulnerabilityAssessments(namespace string) CenterServerVulnerabilityAssessmentNamespaceLister
	CenterServerVulnerabilityAssessmentListerExpansion
}

// centerServerVulnerabilityAssessmentLister implements the CenterServerVulnerabilityAssessmentLister interface.
type centerServerVulnerabilityAssessmentLister struct {
	indexer cache.Indexer
}

// NewCenterServerVulnerabilityAssessmentLister returns a new CenterServerVulnerabilityAssessmentLister.
func NewCenterServerVulnerabilityAssessmentLister(indexer cache.Indexer) CenterServerVulnerabilityAssessmentLister {
	return &centerServerVulnerabilityAssessmentLister{indexer: indexer}
}

// List lists all CenterServerVulnerabilityAssessments in the indexer.
func (s *centerServerVulnerabilityAssessmentLister) List(selector labels.Selector) (ret []*v1alpha1.CenterServerVulnerabilityAssessment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CenterServerVulnerabilityAssessment))
	})
	return ret, err
}

// CenterServerVulnerabilityAssessments returns an object that can list and get CenterServerVulnerabilityAssessments.
func (s *centerServerVulnerabilityAssessmentLister) CenterServerVulnerabilityAssessments(namespace string) CenterServerVulnerabilityAssessmentNamespaceLister {
	return centerServerVulnerabilityAssessmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CenterServerVulnerabilityAssessmentNamespaceLister helps list and get CenterServerVulnerabilityAssessments.
// All objects returned here must be treated as read-only.
type CenterServerVulnerabilityAssessmentNamespaceLister interface {
	// List lists all CenterServerVulnerabilityAssessments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CenterServerVulnerabilityAssessment, err error)
	// Get retrieves the CenterServerVulnerabilityAssessment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CenterServerVulnerabilityAssessment, error)
	CenterServerVulnerabilityAssessmentNamespaceListerExpansion
}

// centerServerVulnerabilityAssessmentNamespaceLister implements the CenterServerVulnerabilityAssessmentNamespaceLister
// interface.
type centerServerVulnerabilityAssessmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CenterServerVulnerabilityAssessments in the indexer for a given namespace.
func (s centerServerVulnerabilityAssessmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CenterServerVulnerabilityAssessment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CenterServerVulnerabilityAssessment))
	})
	return ret, err
}

// Get retrieves the CenterServerVulnerabilityAssessment from the indexer for a given namespace and name.
func (s centerServerVulnerabilityAssessmentNamespaceLister) Get(name string) (*v1alpha1.CenterServerVulnerabilityAssessment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("centerservervulnerabilityassessment"), name)
	}
	return obj.(*v1alpha1.CenterServerVulnerabilityAssessment), nil
}
