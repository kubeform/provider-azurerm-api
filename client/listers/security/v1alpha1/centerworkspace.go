/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/security/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CenterWorkspaceLister helps list CenterWorkspaces.
// All objects returned here must be treated as read-only.
type CenterWorkspaceLister interface {
	// List lists all CenterWorkspaces in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CenterWorkspace, err error)
	// CenterWorkspaces returns an object that can list and get CenterWorkspaces.
	CenterWorkspaces(namespace string) CenterWorkspaceNamespaceLister
	CenterWorkspaceListerExpansion
}

// centerWorkspaceLister implements the CenterWorkspaceLister interface.
type centerWorkspaceLister struct {
	indexer cache.Indexer
}

// NewCenterWorkspaceLister returns a new CenterWorkspaceLister.
func NewCenterWorkspaceLister(indexer cache.Indexer) CenterWorkspaceLister {
	return &centerWorkspaceLister{indexer: indexer}
}

// List lists all CenterWorkspaces in the indexer.
func (s *centerWorkspaceLister) List(selector labels.Selector) (ret []*v1alpha1.CenterWorkspace, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CenterWorkspace))
	})
	return ret, err
}

// CenterWorkspaces returns an object that can list and get CenterWorkspaces.
func (s *centerWorkspaceLister) CenterWorkspaces(namespace string) CenterWorkspaceNamespaceLister {
	return centerWorkspaceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CenterWorkspaceNamespaceLister helps list and get CenterWorkspaces.
// All objects returned here must be treated as read-only.
type CenterWorkspaceNamespaceLister interface {
	// List lists all CenterWorkspaces in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CenterWorkspace, err error)
	// Get retrieves the CenterWorkspace from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CenterWorkspace, error)
	CenterWorkspaceNamespaceListerExpansion
}

// centerWorkspaceNamespaceLister implements the CenterWorkspaceNamespaceLister
// interface.
type centerWorkspaceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CenterWorkspaces in the indexer for a given namespace.
func (s centerWorkspaceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CenterWorkspace, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CenterWorkspace))
	})
	return ret, err
}

// Get retrieves the CenterWorkspace from the indexer for a given namespace and name.
func (s centerWorkspaceNamespaceLister) Get(name string) (*v1alpha1.CenterWorkspace, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("centerworkspace"), name)
	}
	return obj.(*v1alpha1.CenterWorkspace), nil
}
