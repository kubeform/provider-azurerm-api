/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/security/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CenterAssessmentPolicyLister helps list CenterAssessmentPolicies.
// All objects returned here must be treated as read-only.
type CenterAssessmentPolicyLister interface {
	// List lists all CenterAssessmentPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CenterAssessmentPolicy, err error)
	// CenterAssessmentPolicies returns an object that can list and get CenterAssessmentPolicies.
	CenterAssessmentPolicies(namespace string) CenterAssessmentPolicyNamespaceLister
	CenterAssessmentPolicyListerExpansion
}

// centerAssessmentPolicyLister implements the CenterAssessmentPolicyLister interface.
type centerAssessmentPolicyLister struct {
	indexer cache.Indexer
}

// NewCenterAssessmentPolicyLister returns a new CenterAssessmentPolicyLister.
func NewCenterAssessmentPolicyLister(indexer cache.Indexer) CenterAssessmentPolicyLister {
	return &centerAssessmentPolicyLister{indexer: indexer}
}

// List lists all CenterAssessmentPolicies in the indexer.
func (s *centerAssessmentPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.CenterAssessmentPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CenterAssessmentPolicy))
	})
	return ret, err
}

// CenterAssessmentPolicies returns an object that can list and get CenterAssessmentPolicies.
func (s *centerAssessmentPolicyLister) CenterAssessmentPolicies(namespace string) CenterAssessmentPolicyNamespaceLister {
	return centerAssessmentPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CenterAssessmentPolicyNamespaceLister helps list and get CenterAssessmentPolicies.
// All objects returned here must be treated as read-only.
type CenterAssessmentPolicyNamespaceLister interface {
	// List lists all CenterAssessmentPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CenterAssessmentPolicy, err error)
	// Get retrieves the CenterAssessmentPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CenterAssessmentPolicy, error)
	CenterAssessmentPolicyNamespaceListerExpansion
}

// centerAssessmentPolicyNamespaceLister implements the CenterAssessmentPolicyNamespaceLister
// interface.
type centerAssessmentPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CenterAssessmentPolicies in the indexer for a given namespace.
func (s centerAssessmentPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CenterAssessmentPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CenterAssessmentPolicy))
	})
	return ret, err
}

// Get retrieves the CenterAssessmentPolicy from the indexer for a given namespace and name.
func (s centerAssessmentPolicyNamespaceLister) Get(name string) (*v1alpha1.CenterAssessmentPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("centerassessmentpolicy"), name)
	}
	return obj.(*v1alpha1.CenterAssessmentPolicy), nil
}
