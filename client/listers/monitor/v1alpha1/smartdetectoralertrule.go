/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/monitor/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SmartDetectorAlertRuleLister helps list SmartDetectorAlertRules.
// All objects returned here must be treated as read-only.
type SmartDetectorAlertRuleLister interface {
	// List lists all SmartDetectorAlertRules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SmartDetectorAlertRule, err error)
	// SmartDetectorAlertRules returns an object that can list and get SmartDetectorAlertRules.
	SmartDetectorAlertRules(namespace string) SmartDetectorAlertRuleNamespaceLister
	SmartDetectorAlertRuleListerExpansion
}

// smartDetectorAlertRuleLister implements the SmartDetectorAlertRuleLister interface.
type smartDetectorAlertRuleLister struct {
	indexer cache.Indexer
}

// NewSmartDetectorAlertRuleLister returns a new SmartDetectorAlertRuleLister.
func NewSmartDetectorAlertRuleLister(indexer cache.Indexer) SmartDetectorAlertRuleLister {
	return &smartDetectorAlertRuleLister{indexer: indexer}
}

// List lists all SmartDetectorAlertRules in the indexer.
func (s *smartDetectorAlertRuleLister) List(selector labels.Selector) (ret []*v1alpha1.SmartDetectorAlertRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SmartDetectorAlertRule))
	})
	return ret, err
}

// SmartDetectorAlertRules returns an object that can list and get SmartDetectorAlertRules.
func (s *smartDetectorAlertRuleLister) SmartDetectorAlertRules(namespace string) SmartDetectorAlertRuleNamespaceLister {
	return smartDetectorAlertRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SmartDetectorAlertRuleNamespaceLister helps list and get SmartDetectorAlertRules.
// All objects returned here must be treated as read-only.
type SmartDetectorAlertRuleNamespaceLister interface {
	// List lists all SmartDetectorAlertRules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SmartDetectorAlertRule, err error)
	// Get retrieves the SmartDetectorAlertRule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SmartDetectorAlertRule, error)
	SmartDetectorAlertRuleNamespaceListerExpansion
}

// smartDetectorAlertRuleNamespaceLister implements the SmartDetectorAlertRuleNamespaceLister
// interface.
type smartDetectorAlertRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SmartDetectorAlertRules in the indexer for a given namespace.
func (s smartDetectorAlertRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SmartDetectorAlertRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SmartDetectorAlertRule))
	})
	return ret, err
}

// Get retrieves the SmartDetectorAlertRule from the indexer for a given namespace and name.
func (s smartDetectorAlertRuleNamespaceLister) Get(name string) (*v1alpha1.SmartDetectorAlertRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("smartdetectoralertrule"), name)
	}
	return obj.(*v1alpha1.SmartDetectorAlertRule), nil
}
