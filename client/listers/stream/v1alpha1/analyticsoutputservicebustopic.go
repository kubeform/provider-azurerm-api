/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/stream/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AnalyticsOutputServicebusTopicLister helps list AnalyticsOutputServicebusTopics.
// All objects returned here must be treated as read-only.
type AnalyticsOutputServicebusTopicLister interface {
	// List lists all AnalyticsOutputServicebusTopics in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputServicebusTopic, err error)
	// AnalyticsOutputServicebusTopics returns an object that can list and get AnalyticsOutputServicebusTopics.
	AnalyticsOutputServicebusTopics(namespace string) AnalyticsOutputServicebusTopicNamespaceLister
	AnalyticsOutputServicebusTopicListerExpansion
}

// analyticsOutputServicebusTopicLister implements the AnalyticsOutputServicebusTopicLister interface.
type analyticsOutputServicebusTopicLister struct {
	indexer cache.Indexer
}

// NewAnalyticsOutputServicebusTopicLister returns a new AnalyticsOutputServicebusTopicLister.
func NewAnalyticsOutputServicebusTopicLister(indexer cache.Indexer) AnalyticsOutputServicebusTopicLister {
	return &analyticsOutputServicebusTopicLister{indexer: indexer}
}

// List lists all AnalyticsOutputServicebusTopics in the indexer.
func (s *analyticsOutputServicebusTopicLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputServicebusTopic, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsOutputServicebusTopic))
	})
	return ret, err
}

// AnalyticsOutputServicebusTopics returns an object that can list and get AnalyticsOutputServicebusTopics.
func (s *analyticsOutputServicebusTopicLister) AnalyticsOutputServicebusTopics(namespace string) AnalyticsOutputServicebusTopicNamespaceLister {
	return analyticsOutputServicebusTopicNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AnalyticsOutputServicebusTopicNamespaceLister helps list and get AnalyticsOutputServicebusTopics.
// All objects returned here must be treated as read-only.
type AnalyticsOutputServicebusTopicNamespaceLister interface {
	// List lists all AnalyticsOutputServicebusTopics in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputServicebusTopic, err error)
	// Get retrieves the AnalyticsOutputServicebusTopic from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AnalyticsOutputServicebusTopic, error)
	AnalyticsOutputServicebusTopicNamespaceListerExpansion
}

// analyticsOutputServicebusTopicNamespaceLister implements the AnalyticsOutputServicebusTopicNamespaceLister
// interface.
type analyticsOutputServicebusTopicNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AnalyticsOutputServicebusTopics in the indexer for a given namespace.
func (s analyticsOutputServicebusTopicNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputServicebusTopic, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsOutputServicebusTopic))
	})
	return ret, err
}

// Get retrieves the AnalyticsOutputServicebusTopic from the indexer for a given namespace and name.
func (s analyticsOutputServicebusTopicNamespaceLister) Get(name string) (*v1alpha1.AnalyticsOutputServicebusTopic, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("analyticsoutputservicebustopic"), name)
	}
	return obj.(*v1alpha1.AnalyticsOutputServicebusTopic), nil
}
