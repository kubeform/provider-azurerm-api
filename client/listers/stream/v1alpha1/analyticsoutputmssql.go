/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/stream/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AnalyticsOutputMssqlLister helps list AnalyticsOutputMssqls.
// All objects returned here must be treated as read-only.
type AnalyticsOutputMssqlLister interface {
	// List lists all AnalyticsOutputMssqls in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputMssql, err error)
	// AnalyticsOutputMssqls returns an object that can list and get AnalyticsOutputMssqls.
	AnalyticsOutputMssqls(namespace string) AnalyticsOutputMssqlNamespaceLister
	AnalyticsOutputMssqlListerExpansion
}

// analyticsOutputMssqlLister implements the AnalyticsOutputMssqlLister interface.
type analyticsOutputMssqlLister struct {
	indexer cache.Indexer
}

// NewAnalyticsOutputMssqlLister returns a new AnalyticsOutputMssqlLister.
func NewAnalyticsOutputMssqlLister(indexer cache.Indexer) AnalyticsOutputMssqlLister {
	return &analyticsOutputMssqlLister{indexer: indexer}
}

// List lists all AnalyticsOutputMssqls in the indexer.
func (s *analyticsOutputMssqlLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputMssql, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsOutputMssql))
	})
	return ret, err
}

// AnalyticsOutputMssqls returns an object that can list and get AnalyticsOutputMssqls.
func (s *analyticsOutputMssqlLister) AnalyticsOutputMssqls(namespace string) AnalyticsOutputMssqlNamespaceLister {
	return analyticsOutputMssqlNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AnalyticsOutputMssqlNamespaceLister helps list and get AnalyticsOutputMssqls.
// All objects returned here must be treated as read-only.
type AnalyticsOutputMssqlNamespaceLister interface {
	// List lists all AnalyticsOutputMssqls in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputMssql, err error)
	// Get retrieves the AnalyticsOutputMssql from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AnalyticsOutputMssql, error)
	AnalyticsOutputMssqlNamespaceListerExpansion
}

// analyticsOutputMssqlNamespaceLister implements the AnalyticsOutputMssqlNamespaceLister
// interface.
type analyticsOutputMssqlNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AnalyticsOutputMssqls in the indexer for a given namespace.
func (s analyticsOutputMssqlNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputMssql, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsOutputMssql))
	})
	return ret, err
}

// Get retrieves the AnalyticsOutputMssql from the indexer for a given namespace and name.
func (s analyticsOutputMssqlNamespaceLister) Get(name string) (*v1alpha1.AnalyticsOutputMssql, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("analyticsoutputmssql"), name)
	}
	return obj.(*v1alpha1.AnalyticsOutputMssql), nil
}
