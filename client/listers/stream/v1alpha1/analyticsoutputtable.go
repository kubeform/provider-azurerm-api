/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/stream/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AnalyticsOutputTableLister helps list AnalyticsOutputTables.
// All objects returned here must be treated as read-only.
type AnalyticsOutputTableLister interface {
	// List lists all AnalyticsOutputTables in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputTable, err error)
	// AnalyticsOutputTables returns an object that can list and get AnalyticsOutputTables.
	AnalyticsOutputTables(namespace string) AnalyticsOutputTableNamespaceLister
	AnalyticsOutputTableListerExpansion
}

// analyticsOutputTableLister implements the AnalyticsOutputTableLister interface.
type analyticsOutputTableLister struct {
	indexer cache.Indexer
}

// NewAnalyticsOutputTableLister returns a new AnalyticsOutputTableLister.
func NewAnalyticsOutputTableLister(indexer cache.Indexer) AnalyticsOutputTableLister {
	return &analyticsOutputTableLister{indexer: indexer}
}

// List lists all AnalyticsOutputTables in the indexer.
func (s *analyticsOutputTableLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputTable, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsOutputTable))
	})
	return ret, err
}

// AnalyticsOutputTables returns an object that can list and get AnalyticsOutputTables.
func (s *analyticsOutputTableLister) AnalyticsOutputTables(namespace string) AnalyticsOutputTableNamespaceLister {
	return analyticsOutputTableNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AnalyticsOutputTableNamespaceLister helps list and get AnalyticsOutputTables.
// All objects returned here must be treated as read-only.
type AnalyticsOutputTableNamespaceLister interface {
	// List lists all AnalyticsOutputTables in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputTable, err error)
	// Get retrieves the AnalyticsOutputTable from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AnalyticsOutputTable, error)
	AnalyticsOutputTableNamespaceListerExpansion
}

// analyticsOutputTableNamespaceLister implements the AnalyticsOutputTableNamespaceLister
// interface.
type analyticsOutputTableNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AnalyticsOutputTables in the indexer for a given namespace.
func (s analyticsOutputTableNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputTable, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsOutputTable))
	})
	return ret, err
}

// Get retrieves the AnalyticsOutputTable from the indexer for a given namespace and name.
func (s analyticsOutputTableNamespaceLister) Get(name string) (*v1alpha1.AnalyticsOutputTable, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("analyticsoutputtable"), name)
	}
	return obj.(*v1alpha1.AnalyticsOutputTable), nil
}
