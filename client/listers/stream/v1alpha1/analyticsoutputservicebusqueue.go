/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/stream/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AnalyticsOutputServicebusQueueLister helps list AnalyticsOutputServicebusQueues.
// All objects returned here must be treated as read-only.
type AnalyticsOutputServicebusQueueLister interface {
	// List lists all AnalyticsOutputServicebusQueues in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputServicebusQueue, err error)
	// AnalyticsOutputServicebusQueues returns an object that can list and get AnalyticsOutputServicebusQueues.
	AnalyticsOutputServicebusQueues(namespace string) AnalyticsOutputServicebusQueueNamespaceLister
	AnalyticsOutputServicebusQueueListerExpansion
}

// analyticsOutputServicebusQueueLister implements the AnalyticsOutputServicebusQueueLister interface.
type analyticsOutputServicebusQueueLister struct {
	indexer cache.Indexer
}

// NewAnalyticsOutputServicebusQueueLister returns a new AnalyticsOutputServicebusQueueLister.
func NewAnalyticsOutputServicebusQueueLister(indexer cache.Indexer) AnalyticsOutputServicebusQueueLister {
	return &analyticsOutputServicebusQueueLister{indexer: indexer}
}

// List lists all AnalyticsOutputServicebusQueues in the indexer.
func (s *analyticsOutputServicebusQueueLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputServicebusQueue, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsOutputServicebusQueue))
	})
	return ret, err
}

// AnalyticsOutputServicebusQueues returns an object that can list and get AnalyticsOutputServicebusQueues.
func (s *analyticsOutputServicebusQueueLister) AnalyticsOutputServicebusQueues(namespace string) AnalyticsOutputServicebusQueueNamespaceLister {
	return analyticsOutputServicebusQueueNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AnalyticsOutputServicebusQueueNamespaceLister helps list and get AnalyticsOutputServicebusQueues.
// All objects returned here must be treated as read-only.
type AnalyticsOutputServicebusQueueNamespaceLister interface {
	// List lists all AnalyticsOutputServicebusQueues in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputServicebusQueue, err error)
	// Get retrieves the AnalyticsOutputServicebusQueue from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AnalyticsOutputServicebusQueue, error)
	AnalyticsOutputServicebusQueueNamespaceListerExpansion
}

// analyticsOutputServicebusQueueNamespaceLister implements the AnalyticsOutputServicebusQueueNamespaceLister
// interface.
type analyticsOutputServicebusQueueNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AnalyticsOutputServicebusQueues in the indexer for a given namespace.
func (s analyticsOutputServicebusQueueNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsOutputServicebusQueue, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsOutputServicebusQueue))
	})
	return ret, err
}

// Get retrieves the AnalyticsOutputServicebusQueue from the indexer for a given namespace and name.
func (s analyticsOutputServicebusQueueNamespaceLister) Get(name string) (*v1alpha1.AnalyticsOutputServicebusQueue, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("analyticsoutputservicebusqueue"), name)
	}
	return obj.(*v1alpha1.AnalyticsOutputServicebusQueue), nil
}
