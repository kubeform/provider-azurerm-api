/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/stream/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AnalyticsManagedPrivateEndpointLister helps list AnalyticsManagedPrivateEndpoints.
// All objects returned here must be treated as read-only.
type AnalyticsManagedPrivateEndpointLister interface {
	// List lists all AnalyticsManagedPrivateEndpoints in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsManagedPrivateEndpoint, err error)
	// AnalyticsManagedPrivateEndpoints returns an object that can list and get AnalyticsManagedPrivateEndpoints.
	AnalyticsManagedPrivateEndpoints(namespace string) AnalyticsManagedPrivateEndpointNamespaceLister
	AnalyticsManagedPrivateEndpointListerExpansion
}

// analyticsManagedPrivateEndpointLister implements the AnalyticsManagedPrivateEndpointLister interface.
type analyticsManagedPrivateEndpointLister struct {
	indexer cache.Indexer
}

// NewAnalyticsManagedPrivateEndpointLister returns a new AnalyticsManagedPrivateEndpointLister.
func NewAnalyticsManagedPrivateEndpointLister(indexer cache.Indexer) AnalyticsManagedPrivateEndpointLister {
	return &analyticsManagedPrivateEndpointLister{indexer: indexer}
}

// List lists all AnalyticsManagedPrivateEndpoints in the indexer.
func (s *analyticsManagedPrivateEndpointLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsManagedPrivateEndpoint, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsManagedPrivateEndpoint))
	})
	return ret, err
}

// AnalyticsManagedPrivateEndpoints returns an object that can list and get AnalyticsManagedPrivateEndpoints.
func (s *analyticsManagedPrivateEndpointLister) AnalyticsManagedPrivateEndpoints(namespace string) AnalyticsManagedPrivateEndpointNamespaceLister {
	return analyticsManagedPrivateEndpointNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AnalyticsManagedPrivateEndpointNamespaceLister helps list and get AnalyticsManagedPrivateEndpoints.
// All objects returned here must be treated as read-only.
type AnalyticsManagedPrivateEndpointNamespaceLister interface {
	// List lists all AnalyticsManagedPrivateEndpoints in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsManagedPrivateEndpoint, err error)
	// Get retrieves the AnalyticsManagedPrivateEndpoint from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AnalyticsManagedPrivateEndpoint, error)
	AnalyticsManagedPrivateEndpointNamespaceListerExpansion
}

// analyticsManagedPrivateEndpointNamespaceLister implements the AnalyticsManagedPrivateEndpointNamespaceLister
// interface.
type analyticsManagedPrivateEndpointNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AnalyticsManagedPrivateEndpoints in the indexer for a given namespace.
func (s analyticsManagedPrivateEndpointNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsManagedPrivateEndpoint, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsManagedPrivateEndpoint))
	})
	return ret, err
}

// Get retrieves the AnalyticsManagedPrivateEndpoint from the indexer for a given namespace and name.
func (s analyticsManagedPrivateEndpointNamespaceLister) Get(name string) (*v1alpha1.AnalyticsManagedPrivateEndpoint, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("analyticsmanagedprivateendpoint"), name)
	}
	return obj.(*v1alpha1.AnalyticsManagedPrivateEndpoint), nil
}
