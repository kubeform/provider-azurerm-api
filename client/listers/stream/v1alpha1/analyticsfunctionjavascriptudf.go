/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/stream/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AnalyticsFunctionJavascriptUdfLister helps list AnalyticsFunctionJavascriptUdves.
// All objects returned here must be treated as read-only.
type AnalyticsFunctionJavascriptUdfLister interface {
	// List lists all AnalyticsFunctionJavascriptUdves in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsFunctionJavascriptUdf, err error)
	// AnalyticsFunctionJavascriptUdves returns an object that can list and get AnalyticsFunctionJavascriptUdves.
	AnalyticsFunctionJavascriptUdves(namespace string) AnalyticsFunctionJavascriptUdfNamespaceLister
	AnalyticsFunctionJavascriptUdfListerExpansion
}

// analyticsFunctionJavascriptUdfLister implements the AnalyticsFunctionJavascriptUdfLister interface.
type analyticsFunctionJavascriptUdfLister struct {
	indexer cache.Indexer
}

// NewAnalyticsFunctionJavascriptUdfLister returns a new AnalyticsFunctionJavascriptUdfLister.
func NewAnalyticsFunctionJavascriptUdfLister(indexer cache.Indexer) AnalyticsFunctionJavascriptUdfLister {
	return &analyticsFunctionJavascriptUdfLister{indexer: indexer}
}

// List lists all AnalyticsFunctionJavascriptUdves in the indexer.
func (s *analyticsFunctionJavascriptUdfLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsFunctionJavascriptUdf, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsFunctionJavascriptUdf))
	})
	return ret, err
}

// AnalyticsFunctionJavascriptUdves returns an object that can list and get AnalyticsFunctionJavascriptUdves.
func (s *analyticsFunctionJavascriptUdfLister) AnalyticsFunctionJavascriptUdves(namespace string) AnalyticsFunctionJavascriptUdfNamespaceLister {
	return analyticsFunctionJavascriptUdfNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AnalyticsFunctionJavascriptUdfNamespaceLister helps list and get AnalyticsFunctionJavascriptUdves.
// All objects returned here must be treated as read-only.
type AnalyticsFunctionJavascriptUdfNamespaceLister interface {
	// List lists all AnalyticsFunctionJavascriptUdves in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsFunctionJavascriptUdf, err error)
	// Get retrieves the AnalyticsFunctionJavascriptUdf from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AnalyticsFunctionJavascriptUdf, error)
	AnalyticsFunctionJavascriptUdfNamespaceListerExpansion
}

// analyticsFunctionJavascriptUdfNamespaceLister implements the AnalyticsFunctionJavascriptUdfNamespaceLister
// interface.
type analyticsFunctionJavascriptUdfNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AnalyticsFunctionJavascriptUdves in the indexer for a given namespace.
func (s analyticsFunctionJavascriptUdfNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsFunctionJavascriptUdf, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsFunctionJavascriptUdf))
	})
	return ret, err
}

// Get retrieves the AnalyticsFunctionJavascriptUdf from the indexer for a given namespace and name.
func (s analyticsFunctionJavascriptUdfNamespaceLister) Get(name string) (*v1alpha1.AnalyticsFunctionJavascriptUdf, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("analyticsfunctionjavascriptudf"), name)
	}
	return obj.(*v1alpha1.AnalyticsFunctionJavascriptUdf), nil
}
