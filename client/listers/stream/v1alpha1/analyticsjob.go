/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/stream/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AnalyticsJobLister helps list AnalyticsJobs.
// All objects returned here must be treated as read-only.
type AnalyticsJobLister interface {
	// List lists all AnalyticsJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsJob, err error)
	// AnalyticsJobs returns an object that can list and get AnalyticsJobs.
	AnalyticsJobs(namespace string) AnalyticsJobNamespaceLister
	AnalyticsJobListerExpansion
}

// analyticsJobLister implements the AnalyticsJobLister interface.
type analyticsJobLister struct {
	indexer cache.Indexer
}

// NewAnalyticsJobLister returns a new AnalyticsJobLister.
func NewAnalyticsJobLister(indexer cache.Indexer) AnalyticsJobLister {
	return &analyticsJobLister{indexer: indexer}
}

// List lists all AnalyticsJobs in the indexer.
func (s *analyticsJobLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsJob))
	})
	return ret, err
}

// AnalyticsJobs returns an object that can list and get AnalyticsJobs.
func (s *analyticsJobLister) AnalyticsJobs(namespace string) AnalyticsJobNamespaceLister {
	return analyticsJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AnalyticsJobNamespaceLister helps list and get AnalyticsJobs.
// All objects returned here must be treated as read-only.
type AnalyticsJobNamespaceLister interface {
	// List lists all AnalyticsJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AnalyticsJob, err error)
	// Get retrieves the AnalyticsJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AnalyticsJob, error)
	AnalyticsJobNamespaceListerExpansion
}

// analyticsJobNamespaceLister implements the AnalyticsJobNamespaceLister
// interface.
type analyticsJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AnalyticsJobs in the indexer for a given namespace.
func (s analyticsJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AnalyticsJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AnalyticsJob))
	})
	return ret, err
}

// Get retrieves the AnalyticsJob from the indexer for a given namespace and name.
func (s analyticsJobNamespaceLister) Get(name string) (*v1alpha1.AnalyticsJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("analyticsjob"), name)
	}
	return obj.(*v1alpha1.AnalyticsJob), nil
}
