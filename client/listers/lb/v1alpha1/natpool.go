/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/lb/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NatPoolLister helps list NatPools.
// All objects returned here must be treated as read-only.
type NatPoolLister interface {
	// List lists all NatPools in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NatPool, err error)
	// NatPools returns an object that can list and get NatPools.
	NatPools(namespace string) NatPoolNamespaceLister
	NatPoolListerExpansion
}

// natPoolLister implements the NatPoolLister interface.
type natPoolLister struct {
	indexer cache.Indexer
}

// NewNatPoolLister returns a new NatPoolLister.
func NewNatPoolLister(indexer cache.Indexer) NatPoolLister {
	return &natPoolLister{indexer: indexer}
}

// List lists all NatPools in the indexer.
func (s *natPoolLister) List(selector labels.Selector) (ret []*v1alpha1.NatPool, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NatPool))
	})
	return ret, err
}

// NatPools returns an object that can list and get NatPools.
func (s *natPoolLister) NatPools(namespace string) NatPoolNamespaceLister {
	return natPoolNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NatPoolNamespaceLister helps list and get NatPools.
// All objects returned here must be treated as read-only.
type NatPoolNamespaceLister interface {
	// List lists all NatPools in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NatPool, err error)
	// Get retrieves the NatPool from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NatPool, error)
	NatPoolNamespaceListerExpansion
}

// natPoolNamespaceLister implements the NatPoolNamespaceLister
// interface.
type natPoolNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NatPools in the indexer for a given namespace.
func (s natPoolNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NatPool, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NatPool))
	})
	return ret, err
}

// Get retrieves the NatPool from the indexer for a given namespace and name.
func (s natPoolNamespaceLister) Get(name string) (*v1alpha1.NatPool, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("natpool"), name)
	}
	return obj.(*v1alpha1.NatPool), nil
}
