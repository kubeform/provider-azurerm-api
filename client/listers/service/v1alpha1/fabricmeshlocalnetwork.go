/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/service/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FabricMeshLocalNetworkLister helps list FabricMeshLocalNetworks.
// All objects returned here must be treated as read-only.
type FabricMeshLocalNetworkLister interface {
	// List lists all FabricMeshLocalNetworks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FabricMeshLocalNetwork, err error)
	// FabricMeshLocalNetworks returns an object that can list and get FabricMeshLocalNetworks.
	FabricMeshLocalNetworks(namespace string) FabricMeshLocalNetworkNamespaceLister
	FabricMeshLocalNetworkListerExpansion
}

// fabricMeshLocalNetworkLister implements the FabricMeshLocalNetworkLister interface.
type fabricMeshLocalNetworkLister struct {
	indexer cache.Indexer
}

// NewFabricMeshLocalNetworkLister returns a new FabricMeshLocalNetworkLister.
func NewFabricMeshLocalNetworkLister(indexer cache.Indexer) FabricMeshLocalNetworkLister {
	return &fabricMeshLocalNetworkLister{indexer: indexer}
}

// List lists all FabricMeshLocalNetworks in the indexer.
func (s *fabricMeshLocalNetworkLister) List(selector labels.Selector) (ret []*v1alpha1.FabricMeshLocalNetwork, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FabricMeshLocalNetwork))
	})
	return ret, err
}

// FabricMeshLocalNetworks returns an object that can list and get FabricMeshLocalNetworks.
func (s *fabricMeshLocalNetworkLister) FabricMeshLocalNetworks(namespace string) FabricMeshLocalNetworkNamespaceLister {
	return fabricMeshLocalNetworkNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FabricMeshLocalNetworkNamespaceLister helps list and get FabricMeshLocalNetworks.
// All objects returned here must be treated as read-only.
type FabricMeshLocalNetworkNamespaceLister interface {
	// List lists all FabricMeshLocalNetworks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FabricMeshLocalNetwork, err error)
	// Get retrieves the FabricMeshLocalNetwork from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FabricMeshLocalNetwork, error)
	FabricMeshLocalNetworkNamespaceListerExpansion
}

// fabricMeshLocalNetworkNamespaceLister implements the FabricMeshLocalNetworkNamespaceLister
// interface.
type fabricMeshLocalNetworkNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FabricMeshLocalNetworks in the indexer for a given namespace.
func (s fabricMeshLocalNetworkNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FabricMeshLocalNetwork, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FabricMeshLocalNetwork))
	})
	return ret, err
}

// Get retrieves the FabricMeshLocalNetwork from the indexer for a given namespace and name.
func (s fabricMeshLocalNetworkNamespaceLister) Get(name string) (*v1alpha1.FabricMeshLocalNetwork, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("fabricmeshlocalnetwork"), name)
	}
	return obj.(*v1alpha1.FabricMeshLocalNetwork), nil
}
