/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/logicapp/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TriggerCustomLister helps list TriggerCustoms.
// All objects returned here must be treated as read-only.
type TriggerCustomLister interface {
	// List lists all TriggerCustoms in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TriggerCustom, err error)
	// TriggerCustoms returns an object that can list and get TriggerCustoms.
	TriggerCustoms(namespace string) TriggerCustomNamespaceLister
	TriggerCustomListerExpansion
}

// triggerCustomLister implements the TriggerCustomLister interface.
type triggerCustomLister struct {
	indexer cache.Indexer
}

// NewTriggerCustomLister returns a new TriggerCustomLister.
func NewTriggerCustomLister(indexer cache.Indexer) TriggerCustomLister {
	return &triggerCustomLister{indexer: indexer}
}

// List lists all TriggerCustoms in the indexer.
func (s *triggerCustomLister) List(selector labels.Selector) (ret []*v1alpha1.TriggerCustom, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TriggerCustom))
	})
	return ret, err
}

// TriggerCustoms returns an object that can list and get TriggerCustoms.
func (s *triggerCustomLister) TriggerCustoms(namespace string) TriggerCustomNamespaceLister {
	return triggerCustomNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TriggerCustomNamespaceLister helps list and get TriggerCustoms.
// All objects returned here must be treated as read-only.
type TriggerCustomNamespaceLister interface {
	// List lists all TriggerCustoms in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TriggerCustom, err error)
	// Get retrieves the TriggerCustom from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TriggerCustom, error)
	TriggerCustomNamespaceListerExpansion
}

// triggerCustomNamespaceLister implements the TriggerCustomNamespaceLister
// interface.
type triggerCustomNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TriggerCustoms in the indexer for a given namespace.
func (s triggerCustomNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TriggerCustom, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TriggerCustom))
	})
	return ret, err
}

// Get retrieves the TriggerCustom from the indexer for a given namespace and name.
func (s triggerCustomNamespaceLister) Get(name string) (*v1alpha1.TriggerCustom, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("triggercustom"), name)
	}
	return obj.(*v1alpha1.TriggerCustom), nil
}
