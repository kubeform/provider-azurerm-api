/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/bot/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceAzureBotLister helps list ServiceAzureBots.
// All objects returned here must be treated as read-only.
type ServiceAzureBotLister interface {
	// List lists all ServiceAzureBots in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceAzureBot, err error)
	// ServiceAzureBots returns an object that can list and get ServiceAzureBots.
	ServiceAzureBots(namespace string) ServiceAzureBotNamespaceLister
	ServiceAzureBotListerExpansion
}

// serviceAzureBotLister implements the ServiceAzureBotLister interface.
type serviceAzureBotLister struct {
	indexer cache.Indexer
}

// NewServiceAzureBotLister returns a new ServiceAzureBotLister.
func NewServiceAzureBotLister(indexer cache.Indexer) ServiceAzureBotLister {
	return &serviceAzureBotLister{indexer: indexer}
}

// List lists all ServiceAzureBots in the indexer.
func (s *serviceAzureBotLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceAzureBot, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceAzureBot))
	})
	return ret, err
}

// ServiceAzureBots returns an object that can list and get ServiceAzureBots.
func (s *serviceAzureBotLister) ServiceAzureBots(namespace string) ServiceAzureBotNamespaceLister {
	return serviceAzureBotNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceAzureBotNamespaceLister helps list and get ServiceAzureBots.
// All objects returned here must be treated as read-only.
type ServiceAzureBotNamespaceLister interface {
	// List lists all ServiceAzureBots in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceAzureBot, err error)
	// Get retrieves the ServiceAzureBot from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ServiceAzureBot, error)
	ServiceAzureBotNamespaceListerExpansion
}

// serviceAzureBotNamespaceLister implements the ServiceAzureBotNamespaceLister
// interface.
type serviceAzureBotNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceAzureBots in the indexer for a given namespace.
func (s serviceAzureBotNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceAzureBot, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceAzureBot))
	})
	return ret, err
}

// Get retrieves the ServiceAzureBot from the indexer for a given namespace and name.
func (s serviceAzureBotNamespaceLister) Get(name string) (*v1alpha1.ServiceAzureBot, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("serviceazurebot"), name)
	}
	return obj.(*v1alpha1.ServiceAzureBot), nil
}
