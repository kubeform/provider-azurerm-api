/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/bot/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ChannelDirectlineLister helps list ChannelDirectlines.
// All objects returned here must be treated as read-only.
type ChannelDirectlineLister interface {
	// List lists all ChannelDirectlines in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ChannelDirectline, err error)
	// ChannelDirectlines returns an object that can list and get ChannelDirectlines.
	ChannelDirectlines(namespace string) ChannelDirectlineNamespaceLister
	ChannelDirectlineListerExpansion
}

// channelDirectlineLister implements the ChannelDirectlineLister interface.
type channelDirectlineLister struct {
	indexer cache.Indexer
}

// NewChannelDirectlineLister returns a new ChannelDirectlineLister.
func NewChannelDirectlineLister(indexer cache.Indexer) ChannelDirectlineLister {
	return &channelDirectlineLister{indexer: indexer}
}

// List lists all ChannelDirectlines in the indexer.
func (s *channelDirectlineLister) List(selector labels.Selector) (ret []*v1alpha1.ChannelDirectline, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ChannelDirectline))
	})
	return ret, err
}

// ChannelDirectlines returns an object that can list and get ChannelDirectlines.
func (s *channelDirectlineLister) ChannelDirectlines(namespace string) ChannelDirectlineNamespaceLister {
	return channelDirectlineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ChannelDirectlineNamespaceLister helps list and get ChannelDirectlines.
// All objects returned here must be treated as read-only.
type ChannelDirectlineNamespaceLister interface {
	// List lists all ChannelDirectlines in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ChannelDirectline, err error)
	// Get retrieves the ChannelDirectline from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ChannelDirectline, error)
	ChannelDirectlineNamespaceListerExpansion
}

// channelDirectlineNamespaceLister implements the ChannelDirectlineNamespaceLister
// interface.
type channelDirectlineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ChannelDirectlines in the indexer for a given namespace.
func (s channelDirectlineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ChannelDirectline, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ChannelDirectline))
	})
	return ret, err
}

// Get retrieves the ChannelDirectline from the indexer for a given namespace and name.
func (s channelDirectlineNamespaceLister) Get(name string) (*v1alpha1.ChannelDirectline, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("channeldirectline"), name)
	}
	return obj.(*v1alpha1.ChannelDirectline), nil
}
