/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/iottime/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SeriesInsightsStandardEnvironmentLister helps list SeriesInsightsStandardEnvironments.
// All objects returned here must be treated as read-only.
type SeriesInsightsStandardEnvironmentLister interface {
	// List lists all SeriesInsightsStandardEnvironments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SeriesInsightsStandardEnvironment, err error)
	// SeriesInsightsStandardEnvironments returns an object that can list and get SeriesInsightsStandardEnvironments.
	SeriesInsightsStandardEnvironments(namespace string) SeriesInsightsStandardEnvironmentNamespaceLister
	SeriesInsightsStandardEnvironmentListerExpansion
}

// seriesInsightsStandardEnvironmentLister implements the SeriesInsightsStandardEnvironmentLister interface.
type seriesInsightsStandardEnvironmentLister struct {
	indexer cache.Indexer
}

// NewSeriesInsightsStandardEnvironmentLister returns a new SeriesInsightsStandardEnvironmentLister.
func NewSeriesInsightsStandardEnvironmentLister(indexer cache.Indexer) SeriesInsightsStandardEnvironmentLister {
	return &seriesInsightsStandardEnvironmentLister{indexer: indexer}
}

// List lists all SeriesInsightsStandardEnvironments in the indexer.
func (s *seriesInsightsStandardEnvironmentLister) List(selector labels.Selector) (ret []*v1alpha1.SeriesInsightsStandardEnvironment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SeriesInsightsStandardEnvironment))
	})
	return ret, err
}

// SeriesInsightsStandardEnvironments returns an object that can list and get SeriesInsightsStandardEnvironments.
func (s *seriesInsightsStandardEnvironmentLister) SeriesInsightsStandardEnvironments(namespace string) SeriesInsightsStandardEnvironmentNamespaceLister {
	return seriesInsightsStandardEnvironmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SeriesInsightsStandardEnvironmentNamespaceLister helps list and get SeriesInsightsStandardEnvironments.
// All objects returned here must be treated as read-only.
type SeriesInsightsStandardEnvironmentNamespaceLister interface {
	// List lists all SeriesInsightsStandardEnvironments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SeriesInsightsStandardEnvironment, err error)
	// Get retrieves the SeriesInsightsStandardEnvironment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SeriesInsightsStandardEnvironment, error)
	SeriesInsightsStandardEnvironmentNamespaceListerExpansion
}

// seriesInsightsStandardEnvironmentNamespaceLister implements the SeriesInsightsStandardEnvironmentNamespaceLister
// interface.
type seriesInsightsStandardEnvironmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SeriesInsightsStandardEnvironments in the indexer for a given namespace.
func (s seriesInsightsStandardEnvironmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SeriesInsightsStandardEnvironment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SeriesInsightsStandardEnvironment))
	})
	return ret, err
}

// Get retrieves the SeriesInsightsStandardEnvironment from the indexer for a given namespace and name.
func (s seriesInsightsStandardEnvironmentNamespaceLister) Get(name string) (*v1alpha1.SeriesInsightsStandardEnvironment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("seriesinsightsstandardenvironment"), name)
	}
	return obj.(*v1alpha1.SeriesInsightsStandardEnvironment), nil
}
