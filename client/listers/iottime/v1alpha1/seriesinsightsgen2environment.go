/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/iottime/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SeriesInsightsGen2EnvironmentLister helps list SeriesInsightsGen2Environments.
// All objects returned here must be treated as read-only.
type SeriesInsightsGen2EnvironmentLister interface {
	// List lists all SeriesInsightsGen2Environments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SeriesInsightsGen2Environment, err error)
	// SeriesInsightsGen2Environments returns an object that can list and get SeriesInsightsGen2Environments.
	SeriesInsightsGen2Environments(namespace string) SeriesInsightsGen2EnvironmentNamespaceLister
	SeriesInsightsGen2EnvironmentListerExpansion
}

// seriesInsightsGen2EnvironmentLister implements the SeriesInsightsGen2EnvironmentLister interface.
type seriesInsightsGen2EnvironmentLister struct {
	indexer cache.Indexer
}

// NewSeriesInsightsGen2EnvironmentLister returns a new SeriesInsightsGen2EnvironmentLister.
func NewSeriesInsightsGen2EnvironmentLister(indexer cache.Indexer) SeriesInsightsGen2EnvironmentLister {
	return &seriesInsightsGen2EnvironmentLister{indexer: indexer}
}

// List lists all SeriesInsightsGen2Environments in the indexer.
func (s *seriesInsightsGen2EnvironmentLister) List(selector labels.Selector) (ret []*v1alpha1.SeriesInsightsGen2Environment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SeriesInsightsGen2Environment))
	})
	return ret, err
}

// SeriesInsightsGen2Environments returns an object that can list and get SeriesInsightsGen2Environments.
func (s *seriesInsightsGen2EnvironmentLister) SeriesInsightsGen2Environments(namespace string) SeriesInsightsGen2EnvironmentNamespaceLister {
	return seriesInsightsGen2EnvironmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SeriesInsightsGen2EnvironmentNamespaceLister helps list and get SeriesInsightsGen2Environments.
// All objects returned here must be treated as read-only.
type SeriesInsightsGen2EnvironmentNamespaceLister interface {
	// List lists all SeriesInsightsGen2Environments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SeriesInsightsGen2Environment, err error)
	// Get retrieves the SeriesInsightsGen2Environment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SeriesInsightsGen2Environment, error)
	SeriesInsightsGen2EnvironmentNamespaceListerExpansion
}

// seriesInsightsGen2EnvironmentNamespaceLister implements the SeriesInsightsGen2EnvironmentNamespaceLister
// interface.
type seriesInsightsGen2EnvironmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SeriesInsightsGen2Environments in the indexer for a given namespace.
func (s seriesInsightsGen2EnvironmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SeriesInsightsGen2Environment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SeriesInsightsGen2Environment))
	})
	return ret, err
}

// Get retrieves the SeriesInsightsGen2Environment from the indexer for a given namespace and name.
func (s seriesInsightsGen2EnvironmentNamespaceLister) Get(name string) (*v1alpha1.SeriesInsightsGen2Environment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("seriesinsightsgen2environment"), name)
	}
	return obj.(*v1alpha1.SeriesInsightsGen2Environment), nil
}
