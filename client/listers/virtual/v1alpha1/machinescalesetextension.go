/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/virtual/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MachineScaleSetExtensionLister helps list MachineScaleSetExtensions.
// All objects returned here must be treated as read-only.
type MachineScaleSetExtensionLister interface {
	// List lists all MachineScaleSetExtensions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MachineScaleSetExtension, err error)
	// MachineScaleSetExtensions returns an object that can list and get MachineScaleSetExtensions.
	MachineScaleSetExtensions(namespace string) MachineScaleSetExtensionNamespaceLister
	MachineScaleSetExtensionListerExpansion
}

// machineScaleSetExtensionLister implements the MachineScaleSetExtensionLister interface.
type machineScaleSetExtensionLister struct {
	indexer cache.Indexer
}

// NewMachineScaleSetExtensionLister returns a new MachineScaleSetExtensionLister.
func NewMachineScaleSetExtensionLister(indexer cache.Indexer) MachineScaleSetExtensionLister {
	return &machineScaleSetExtensionLister{indexer: indexer}
}

// List lists all MachineScaleSetExtensions in the indexer.
func (s *machineScaleSetExtensionLister) List(selector labels.Selector) (ret []*v1alpha1.MachineScaleSetExtension, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MachineScaleSetExtension))
	})
	return ret, err
}

// MachineScaleSetExtensions returns an object that can list and get MachineScaleSetExtensions.
func (s *machineScaleSetExtensionLister) MachineScaleSetExtensions(namespace string) MachineScaleSetExtensionNamespaceLister {
	return machineScaleSetExtensionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MachineScaleSetExtensionNamespaceLister helps list and get MachineScaleSetExtensions.
// All objects returned here must be treated as read-only.
type MachineScaleSetExtensionNamespaceLister interface {
	// List lists all MachineScaleSetExtensions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MachineScaleSetExtension, err error)
	// Get retrieves the MachineScaleSetExtension from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MachineScaleSetExtension, error)
	MachineScaleSetExtensionNamespaceListerExpansion
}

// machineScaleSetExtensionNamespaceLister implements the MachineScaleSetExtensionNamespaceLister
// interface.
type machineScaleSetExtensionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MachineScaleSetExtensions in the indexer for a given namespace.
func (s machineScaleSetExtensionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MachineScaleSetExtension, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MachineScaleSetExtension))
	})
	return ret, err
}

// Get retrieves the MachineScaleSetExtension from the indexer for a given namespace and name.
func (s machineScaleSetExtensionNamespaceLister) Get(name string) (*v1alpha1.MachineScaleSetExtension, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("machinescalesetextension"), name)
	}
	return obj.(*v1alpha1.MachineScaleSetExtension), nil
}
