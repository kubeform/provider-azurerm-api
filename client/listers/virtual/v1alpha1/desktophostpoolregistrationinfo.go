/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/virtual/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DesktopHostPoolRegistrationInfoLister helps list DesktopHostPoolRegistrationInfos.
// All objects returned here must be treated as read-only.
type DesktopHostPoolRegistrationInfoLister interface {
	// List lists all DesktopHostPoolRegistrationInfos in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DesktopHostPoolRegistrationInfo, err error)
	// DesktopHostPoolRegistrationInfos returns an object that can list and get DesktopHostPoolRegistrationInfos.
	DesktopHostPoolRegistrationInfos(namespace string) DesktopHostPoolRegistrationInfoNamespaceLister
	DesktopHostPoolRegistrationInfoListerExpansion
}

// desktopHostPoolRegistrationInfoLister implements the DesktopHostPoolRegistrationInfoLister interface.
type desktopHostPoolRegistrationInfoLister struct {
	indexer cache.Indexer
}

// NewDesktopHostPoolRegistrationInfoLister returns a new DesktopHostPoolRegistrationInfoLister.
func NewDesktopHostPoolRegistrationInfoLister(indexer cache.Indexer) DesktopHostPoolRegistrationInfoLister {
	return &desktopHostPoolRegistrationInfoLister{indexer: indexer}
}

// List lists all DesktopHostPoolRegistrationInfos in the indexer.
func (s *desktopHostPoolRegistrationInfoLister) List(selector labels.Selector) (ret []*v1alpha1.DesktopHostPoolRegistrationInfo, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DesktopHostPoolRegistrationInfo))
	})
	return ret, err
}

// DesktopHostPoolRegistrationInfos returns an object that can list and get DesktopHostPoolRegistrationInfos.
func (s *desktopHostPoolRegistrationInfoLister) DesktopHostPoolRegistrationInfos(namespace string) DesktopHostPoolRegistrationInfoNamespaceLister {
	return desktopHostPoolRegistrationInfoNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DesktopHostPoolRegistrationInfoNamespaceLister helps list and get DesktopHostPoolRegistrationInfos.
// All objects returned here must be treated as read-only.
type DesktopHostPoolRegistrationInfoNamespaceLister interface {
	// List lists all DesktopHostPoolRegistrationInfos in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DesktopHostPoolRegistrationInfo, err error)
	// Get retrieves the DesktopHostPoolRegistrationInfo from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DesktopHostPoolRegistrationInfo, error)
	DesktopHostPoolRegistrationInfoNamespaceListerExpansion
}

// desktopHostPoolRegistrationInfoNamespaceLister implements the DesktopHostPoolRegistrationInfoNamespaceLister
// interface.
type desktopHostPoolRegistrationInfoNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DesktopHostPoolRegistrationInfos in the indexer for a given namespace.
func (s desktopHostPoolRegistrationInfoNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DesktopHostPoolRegistrationInfo, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DesktopHostPoolRegistrationInfo))
	})
	return ret, err
}

// Get retrieves the DesktopHostPoolRegistrationInfo from the indexer for a given namespace and name.
func (s desktopHostPoolRegistrationInfoNamespaceLister) Get(name string) (*v1alpha1.DesktopHostPoolRegistrationInfo, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("desktophostpoolregistrationinfo"), name)
	}
	return obj.(*v1alpha1.DesktopHostPoolRegistrationInfo), nil
}
