/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/apimanagement/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApiOperationTagLister helps list ApiOperationTags.
// All objects returned here must be treated as read-only.
type ApiOperationTagLister interface {
	// List lists all ApiOperationTags in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ApiOperationTag, err error)
	// ApiOperationTags returns an object that can list and get ApiOperationTags.
	ApiOperationTags(namespace string) ApiOperationTagNamespaceLister
	ApiOperationTagListerExpansion
}

// apiOperationTagLister implements the ApiOperationTagLister interface.
type apiOperationTagLister struct {
	indexer cache.Indexer
}

// NewApiOperationTagLister returns a new ApiOperationTagLister.
func NewApiOperationTagLister(indexer cache.Indexer) ApiOperationTagLister {
	return &apiOperationTagLister{indexer: indexer}
}

// List lists all ApiOperationTags in the indexer.
func (s *apiOperationTagLister) List(selector labels.Selector) (ret []*v1alpha1.ApiOperationTag, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiOperationTag))
	})
	return ret, err
}

// ApiOperationTags returns an object that can list and get ApiOperationTags.
func (s *apiOperationTagLister) ApiOperationTags(namespace string) ApiOperationTagNamespaceLister {
	return apiOperationTagNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiOperationTagNamespaceLister helps list and get ApiOperationTags.
// All objects returned here must be treated as read-only.
type ApiOperationTagNamespaceLister interface {
	// List lists all ApiOperationTags in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ApiOperationTag, err error)
	// Get retrieves the ApiOperationTag from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ApiOperationTag, error)
	ApiOperationTagNamespaceListerExpansion
}

// apiOperationTagNamespaceLister implements the ApiOperationTagNamespaceLister
// interface.
type apiOperationTagNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiOperationTags in the indexer for a given namespace.
func (s apiOperationTagNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiOperationTag, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiOperationTag))
	})
	return ret, err
}

// Get retrieves the ApiOperationTag from the indexer for a given namespace and name.
func (s apiOperationTagNamespaceLister) Get(name string) (*v1alpha1.ApiOperationTag, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apioperationtag"), name)
	}
	return obj.(*v1alpha1.ApiOperationTag), nil
}
