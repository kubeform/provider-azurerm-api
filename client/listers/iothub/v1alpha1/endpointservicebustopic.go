/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/iothub/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EndpointServicebusTopicLister helps list EndpointServicebusTopics.
// All objects returned here must be treated as read-only.
type EndpointServicebusTopicLister interface {
	// List lists all EndpointServicebusTopics in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EndpointServicebusTopic, err error)
	// EndpointServicebusTopics returns an object that can list and get EndpointServicebusTopics.
	EndpointServicebusTopics(namespace string) EndpointServicebusTopicNamespaceLister
	EndpointServicebusTopicListerExpansion
}

// endpointServicebusTopicLister implements the EndpointServicebusTopicLister interface.
type endpointServicebusTopicLister struct {
	indexer cache.Indexer
}

// NewEndpointServicebusTopicLister returns a new EndpointServicebusTopicLister.
func NewEndpointServicebusTopicLister(indexer cache.Indexer) EndpointServicebusTopicLister {
	return &endpointServicebusTopicLister{indexer: indexer}
}

// List lists all EndpointServicebusTopics in the indexer.
func (s *endpointServicebusTopicLister) List(selector labels.Selector) (ret []*v1alpha1.EndpointServicebusTopic, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EndpointServicebusTopic))
	})
	return ret, err
}

// EndpointServicebusTopics returns an object that can list and get EndpointServicebusTopics.
func (s *endpointServicebusTopicLister) EndpointServicebusTopics(namespace string) EndpointServicebusTopicNamespaceLister {
	return endpointServicebusTopicNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EndpointServicebusTopicNamespaceLister helps list and get EndpointServicebusTopics.
// All objects returned here must be treated as read-only.
type EndpointServicebusTopicNamespaceLister interface {
	// List lists all EndpointServicebusTopics in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EndpointServicebusTopic, err error)
	// Get retrieves the EndpointServicebusTopic from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.EndpointServicebusTopic, error)
	EndpointServicebusTopicNamespaceListerExpansion
}

// endpointServicebusTopicNamespaceLister implements the EndpointServicebusTopicNamespaceLister
// interface.
type endpointServicebusTopicNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EndpointServicebusTopics in the indexer for a given namespace.
func (s endpointServicebusTopicNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EndpointServicebusTopic, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EndpointServicebusTopic))
	})
	return ret, err
}

// Get retrieves the EndpointServicebusTopic from the indexer for a given namespace and name.
func (s endpointServicebusTopicNamespaceLister) Get(name string) (*v1alpha1.EndpointServicebusTopic, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("endpointservicebustopic"), name)
	}
	return obj.(*v1alpha1.EndpointServicebusTopic), nil
}
