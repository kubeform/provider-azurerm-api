/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/storage/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BlobInventoryPolicyLister helps list BlobInventoryPolicies.
// All objects returned here must be treated as read-only.
type BlobInventoryPolicyLister interface {
	// List lists all BlobInventoryPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BlobInventoryPolicy, err error)
	// BlobInventoryPolicies returns an object that can list and get BlobInventoryPolicies.
	BlobInventoryPolicies(namespace string) BlobInventoryPolicyNamespaceLister
	BlobInventoryPolicyListerExpansion
}

// blobInventoryPolicyLister implements the BlobInventoryPolicyLister interface.
type blobInventoryPolicyLister struct {
	indexer cache.Indexer
}

// NewBlobInventoryPolicyLister returns a new BlobInventoryPolicyLister.
func NewBlobInventoryPolicyLister(indexer cache.Indexer) BlobInventoryPolicyLister {
	return &blobInventoryPolicyLister{indexer: indexer}
}

// List lists all BlobInventoryPolicies in the indexer.
func (s *blobInventoryPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.BlobInventoryPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BlobInventoryPolicy))
	})
	return ret, err
}

// BlobInventoryPolicies returns an object that can list and get BlobInventoryPolicies.
func (s *blobInventoryPolicyLister) BlobInventoryPolicies(namespace string) BlobInventoryPolicyNamespaceLister {
	return blobInventoryPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BlobInventoryPolicyNamespaceLister helps list and get BlobInventoryPolicies.
// All objects returned here must be treated as read-only.
type BlobInventoryPolicyNamespaceLister interface {
	// List lists all BlobInventoryPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BlobInventoryPolicy, err error)
	// Get retrieves the BlobInventoryPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.BlobInventoryPolicy, error)
	BlobInventoryPolicyNamespaceListerExpansion
}

// blobInventoryPolicyNamespaceLister implements the BlobInventoryPolicyNamespaceLister
// interface.
type blobInventoryPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BlobInventoryPolicies in the indexer for a given namespace.
func (s blobInventoryPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BlobInventoryPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BlobInventoryPolicy))
	})
	return ret, err
}

// Get retrieves the BlobInventoryPolicy from the indexer for a given namespace and name.
func (s blobInventoryPolicyNamespaceLister) Get(name string) (*v1alpha1.BlobInventoryPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("blobinventorypolicy"), name)
	}
	return obj.(*v1alpha1.BlobInventoryPolicy), nil
}
