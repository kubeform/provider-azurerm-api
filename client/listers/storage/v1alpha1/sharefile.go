/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/storage/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ShareFileLister helps list ShareFiles.
// All objects returned here must be treated as read-only.
type ShareFileLister interface {
	// List lists all ShareFiles in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ShareFile, err error)
	// ShareFiles returns an object that can list and get ShareFiles.
	ShareFiles(namespace string) ShareFileNamespaceLister
	ShareFileListerExpansion
}

// shareFileLister implements the ShareFileLister interface.
type shareFileLister struct {
	indexer cache.Indexer
}

// NewShareFileLister returns a new ShareFileLister.
func NewShareFileLister(indexer cache.Indexer) ShareFileLister {
	return &shareFileLister{indexer: indexer}
}

// List lists all ShareFiles in the indexer.
func (s *shareFileLister) List(selector labels.Selector) (ret []*v1alpha1.ShareFile, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ShareFile))
	})
	return ret, err
}

// ShareFiles returns an object that can list and get ShareFiles.
func (s *shareFileLister) ShareFiles(namespace string) ShareFileNamespaceLister {
	return shareFileNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ShareFileNamespaceLister helps list and get ShareFiles.
// All objects returned here must be treated as read-only.
type ShareFileNamespaceLister interface {
	// List lists all ShareFiles in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ShareFile, err error)
	// Get retrieves the ShareFile from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ShareFile, error)
	ShareFileNamespaceListerExpansion
}

// shareFileNamespaceLister implements the ShareFileNamespaceLister
// interface.
type shareFileNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ShareFiles in the indexer for a given namespace.
func (s shareFileNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ShareFile, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ShareFile))
	})
	return ret, err
}

// Get retrieves the ShareFile from the indexer for a given namespace and name.
func (s shareFileNamespaceLister) Get(name string) (*v1alpha1.ShareFile, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sharefile"), name)
	}
	return obj.(*v1alpha1.ShareFile), nil
}
