/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/synapse/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SqlPoolVulnerabilityAssessmentBaselineLister helps list SqlPoolVulnerabilityAssessmentBaselines.
// All objects returned here must be treated as read-only.
type SqlPoolVulnerabilityAssessmentBaselineLister interface {
	// List lists all SqlPoolVulnerabilityAssessmentBaselines in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SqlPoolVulnerabilityAssessmentBaseline, err error)
	// SqlPoolVulnerabilityAssessmentBaselines returns an object that can list and get SqlPoolVulnerabilityAssessmentBaselines.
	SqlPoolVulnerabilityAssessmentBaselines(namespace string) SqlPoolVulnerabilityAssessmentBaselineNamespaceLister
	SqlPoolVulnerabilityAssessmentBaselineListerExpansion
}

// sqlPoolVulnerabilityAssessmentBaselineLister implements the SqlPoolVulnerabilityAssessmentBaselineLister interface.
type sqlPoolVulnerabilityAssessmentBaselineLister struct {
	indexer cache.Indexer
}

// NewSqlPoolVulnerabilityAssessmentBaselineLister returns a new SqlPoolVulnerabilityAssessmentBaselineLister.
func NewSqlPoolVulnerabilityAssessmentBaselineLister(indexer cache.Indexer) SqlPoolVulnerabilityAssessmentBaselineLister {
	return &sqlPoolVulnerabilityAssessmentBaselineLister{indexer: indexer}
}

// List lists all SqlPoolVulnerabilityAssessmentBaselines in the indexer.
func (s *sqlPoolVulnerabilityAssessmentBaselineLister) List(selector labels.Selector) (ret []*v1alpha1.SqlPoolVulnerabilityAssessmentBaseline, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SqlPoolVulnerabilityAssessmentBaseline))
	})
	return ret, err
}

// SqlPoolVulnerabilityAssessmentBaselines returns an object that can list and get SqlPoolVulnerabilityAssessmentBaselines.
func (s *sqlPoolVulnerabilityAssessmentBaselineLister) SqlPoolVulnerabilityAssessmentBaselines(namespace string) SqlPoolVulnerabilityAssessmentBaselineNamespaceLister {
	return sqlPoolVulnerabilityAssessmentBaselineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SqlPoolVulnerabilityAssessmentBaselineNamespaceLister helps list and get SqlPoolVulnerabilityAssessmentBaselines.
// All objects returned here must be treated as read-only.
type SqlPoolVulnerabilityAssessmentBaselineNamespaceLister interface {
	// List lists all SqlPoolVulnerabilityAssessmentBaselines in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SqlPoolVulnerabilityAssessmentBaseline, err error)
	// Get retrieves the SqlPoolVulnerabilityAssessmentBaseline from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SqlPoolVulnerabilityAssessmentBaseline, error)
	SqlPoolVulnerabilityAssessmentBaselineNamespaceListerExpansion
}

// sqlPoolVulnerabilityAssessmentBaselineNamespaceLister implements the SqlPoolVulnerabilityAssessmentBaselineNamespaceLister
// interface.
type sqlPoolVulnerabilityAssessmentBaselineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SqlPoolVulnerabilityAssessmentBaselines in the indexer for a given namespace.
func (s sqlPoolVulnerabilityAssessmentBaselineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SqlPoolVulnerabilityAssessmentBaseline, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SqlPoolVulnerabilityAssessmentBaseline))
	})
	return ret, err
}

// Get retrieves the SqlPoolVulnerabilityAssessmentBaseline from the indexer for a given namespace and name.
func (s sqlPoolVulnerabilityAssessmentBaselineNamespaceLister) Get(name string) (*v1alpha1.SqlPoolVulnerabilityAssessmentBaseline, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sqlpoolvulnerabilityassessmentbaseline"), name)
	}
	return obj.(*v1alpha1.SqlPoolVulnerabilityAssessmentBaseline), nil
}
