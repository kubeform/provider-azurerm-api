/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/synapse/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IntegrationRuntimeSelfHostedLister helps list IntegrationRuntimeSelfHosteds.
// All objects returned here must be treated as read-only.
type IntegrationRuntimeSelfHostedLister interface {
	// List lists all IntegrationRuntimeSelfHosteds in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.IntegrationRuntimeSelfHosted, err error)
	// IntegrationRuntimeSelfHosteds returns an object that can list and get IntegrationRuntimeSelfHosteds.
	IntegrationRuntimeSelfHosteds(namespace string) IntegrationRuntimeSelfHostedNamespaceLister
	IntegrationRuntimeSelfHostedListerExpansion
}

// integrationRuntimeSelfHostedLister implements the IntegrationRuntimeSelfHostedLister interface.
type integrationRuntimeSelfHostedLister struct {
	indexer cache.Indexer
}

// NewIntegrationRuntimeSelfHostedLister returns a new IntegrationRuntimeSelfHostedLister.
func NewIntegrationRuntimeSelfHostedLister(indexer cache.Indexer) IntegrationRuntimeSelfHostedLister {
	return &integrationRuntimeSelfHostedLister{indexer: indexer}
}

// List lists all IntegrationRuntimeSelfHosteds in the indexer.
func (s *integrationRuntimeSelfHostedLister) List(selector labels.Selector) (ret []*v1alpha1.IntegrationRuntimeSelfHosted, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IntegrationRuntimeSelfHosted))
	})
	return ret, err
}

// IntegrationRuntimeSelfHosteds returns an object that can list and get IntegrationRuntimeSelfHosteds.
func (s *integrationRuntimeSelfHostedLister) IntegrationRuntimeSelfHosteds(namespace string) IntegrationRuntimeSelfHostedNamespaceLister {
	return integrationRuntimeSelfHostedNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IntegrationRuntimeSelfHostedNamespaceLister helps list and get IntegrationRuntimeSelfHosteds.
// All objects returned here must be treated as read-only.
type IntegrationRuntimeSelfHostedNamespaceLister interface {
	// List lists all IntegrationRuntimeSelfHosteds in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.IntegrationRuntimeSelfHosted, err error)
	// Get retrieves the IntegrationRuntimeSelfHosted from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.IntegrationRuntimeSelfHosted, error)
	IntegrationRuntimeSelfHostedNamespaceListerExpansion
}

// integrationRuntimeSelfHostedNamespaceLister implements the IntegrationRuntimeSelfHostedNamespaceLister
// interface.
type integrationRuntimeSelfHostedNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IntegrationRuntimeSelfHosteds in the indexer for a given namespace.
func (s integrationRuntimeSelfHostedNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IntegrationRuntimeSelfHosted, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IntegrationRuntimeSelfHosted))
	})
	return ret, err
}

// Get retrieves the IntegrationRuntimeSelfHosted from the indexer for a given namespace and name.
func (s integrationRuntimeSelfHostedNamespaceLister) Get(name string) (*v1alpha1.IntegrationRuntimeSelfHosted, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("integrationruntimeselfhosted"), name)
	}
	return obj.(*v1alpha1.IntegrationRuntimeSelfHosted), nil
}
