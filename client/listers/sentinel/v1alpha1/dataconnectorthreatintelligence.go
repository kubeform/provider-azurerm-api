/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/sentinel/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DataConnectorThreatIntelligenceLister helps list DataConnectorThreatIntelligences.
// All objects returned here must be treated as read-only.
type DataConnectorThreatIntelligenceLister interface {
	// List lists all DataConnectorThreatIntelligences in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DataConnectorThreatIntelligence, err error)
	// DataConnectorThreatIntelligences returns an object that can list and get DataConnectorThreatIntelligences.
	DataConnectorThreatIntelligences(namespace string) DataConnectorThreatIntelligenceNamespaceLister
	DataConnectorThreatIntelligenceListerExpansion
}

// dataConnectorThreatIntelligenceLister implements the DataConnectorThreatIntelligenceLister interface.
type dataConnectorThreatIntelligenceLister struct {
	indexer cache.Indexer
}

// NewDataConnectorThreatIntelligenceLister returns a new DataConnectorThreatIntelligenceLister.
func NewDataConnectorThreatIntelligenceLister(indexer cache.Indexer) DataConnectorThreatIntelligenceLister {
	return &dataConnectorThreatIntelligenceLister{indexer: indexer}
}

// List lists all DataConnectorThreatIntelligences in the indexer.
func (s *dataConnectorThreatIntelligenceLister) List(selector labels.Selector) (ret []*v1alpha1.DataConnectorThreatIntelligence, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataConnectorThreatIntelligence))
	})
	return ret, err
}

// DataConnectorThreatIntelligences returns an object that can list and get DataConnectorThreatIntelligences.
func (s *dataConnectorThreatIntelligenceLister) DataConnectorThreatIntelligences(namespace string) DataConnectorThreatIntelligenceNamespaceLister {
	return dataConnectorThreatIntelligenceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataConnectorThreatIntelligenceNamespaceLister helps list and get DataConnectorThreatIntelligences.
// All objects returned here must be treated as read-only.
type DataConnectorThreatIntelligenceNamespaceLister interface {
	// List lists all DataConnectorThreatIntelligences in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DataConnectorThreatIntelligence, err error)
	// Get retrieves the DataConnectorThreatIntelligence from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DataConnectorThreatIntelligence, error)
	DataConnectorThreatIntelligenceNamespaceListerExpansion
}

// dataConnectorThreatIntelligenceNamespaceLister implements the DataConnectorThreatIntelligenceNamespaceLister
// interface.
type dataConnectorThreatIntelligenceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataConnectorThreatIntelligences in the indexer for a given namespace.
func (s dataConnectorThreatIntelligenceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DataConnectorThreatIntelligence, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataConnectorThreatIntelligence))
	})
	return ret, err
}

// Get retrieves the DataConnectorThreatIntelligence from the indexer for a given namespace and name.
func (s dataConnectorThreatIntelligenceNamespaceLister) Get(name string) (*v1alpha1.DataConnectorThreatIntelligence, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dataconnectorthreatintelligence"), name)
	}
	return obj.(*v1alpha1.DataConnectorThreatIntelligence), nil
}
