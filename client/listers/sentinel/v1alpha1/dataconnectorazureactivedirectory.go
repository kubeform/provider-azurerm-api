/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/sentinel/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DataConnectorAzureActiveDirectoryLister helps list DataConnectorAzureActiveDirectories.
// All objects returned here must be treated as read-only.
type DataConnectorAzureActiveDirectoryLister interface {
	// List lists all DataConnectorAzureActiveDirectories in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DataConnectorAzureActiveDirectory, err error)
	// DataConnectorAzureActiveDirectories returns an object that can list and get DataConnectorAzureActiveDirectories.
	DataConnectorAzureActiveDirectories(namespace string) DataConnectorAzureActiveDirectoryNamespaceLister
	DataConnectorAzureActiveDirectoryListerExpansion
}

// dataConnectorAzureActiveDirectoryLister implements the DataConnectorAzureActiveDirectoryLister interface.
type dataConnectorAzureActiveDirectoryLister struct {
	indexer cache.Indexer
}

// NewDataConnectorAzureActiveDirectoryLister returns a new DataConnectorAzureActiveDirectoryLister.
func NewDataConnectorAzureActiveDirectoryLister(indexer cache.Indexer) DataConnectorAzureActiveDirectoryLister {
	return &dataConnectorAzureActiveDirectoryLister{indexer: indexer}
}

// List lists all DataConnectorAzureActiveDirectories in the indexer.
func (s *dataConnectorAzureActiveDirectoryLister) List(selector labels.Selector) (ret []*v1alpha1.DataConnectorAzureActiveDirectory, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataConnectorAzureActiveDirectory))
	})
	return ret, err
}

// DataConnectorAzureActiveDirectories returns an object that can list and get DataConnectorAzureActiveDirectories.
func (s *dataConnectorAzureActiveDirectoryLister) DataConnectorAzureActiveDirectories(namespace string) DataConnectorAzureActiveDirectoryNamespaceLister {
	return dataConnectorAzureActiveDirectoryNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataConnectorAzureActiveDirectoryNamespaceLister helps list and get DataConnectorAzureActiveDirectories.
// All objects returned here must be treated as read-only.
type DataConnectorAzureActiveDirectoryNamespaceLister interface {
	// List lists all DataConnectorAzureActiveDirectories in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DataConnectorAzureActiveDirectory, err error)
	// Get retrieves the DataConnectorAzureActiveDirectory from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DataConnectorAzureActiveDirectory, error)
	DataConnectorAzureActiveDirectoryNamespaceListerExpansion
}

// dataConnectorAzureActiveDirectoryNamespaceLister implements the DataConnectorAzureActiveDirectoryNamespaceLister
// interface.
type dataConnectorAzureActiveDirectoryNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataConnectorAzureActiveDirectories in the indexer for a given namespace.
func (s dataConnectorAzureActiveDirectoryNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DataConnectorAzureActiveDirectory, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataConnectorAzureActiveDirectory))
	})
	return ret, err
}

// Get retrieves the DataConnectorAzureActiveDirectory from the indexer for a given namespace and name.
func (s dataConnectorAzureActiveDirectoryNamespaceLister) Get(name string) (*v1alpha1.DataConnectorAzureActiveDirectory, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dataconnectorazureactivedirectory"), name)
	}
	return obj.(*v1alpha1.DataConnectorAzureActiveDirectory), nil
}
