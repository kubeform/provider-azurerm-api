/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/application/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InsightsAPIKeyLister helps list InsightsAPIKeys.
// All objects returned here must be treated as read-only.
type InsightsAPIKeyLister interface {
	// List lists all InsightsAPIKeys in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InsightsAPIKey, err error)
	// InsightsAPIKeys returns an object that can list and get InsightsAPIKeys.
	InsightsAPIKeys(namespace string) InsightsAPIKeyNamespaceLister
	InsightsAPIKeyListerExpansion
}

// insightsAPIKeyLister implements the InsightsAPIKeyLister interface.
type insightsAPIKeyLister struct {
	indexer cache.Indexer
}

// NewInsightsAPIKeyLister returns a new InsightsAPIKeyLister.
func NewInsightsAPIKeyLister(indexer cache.Indexer) InsightsAPIKeyLister {
	return &insightsAPIKeyLister{indexer: indexer}
}

// List lists all InsightsAPIKeys in the indexer.
func (s *insightsAPIKeyLister) List(selector labels.Selector) (ret []*v1alpha1.InsightsAPIKey, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InsightsAPIKey))
	})
	return ret, err
}

// InsightsAPIKeys returns an object that can list and get InsightsAPIKeys.
func (s *insightsAPIKeyLister) InsightsAPIKeys(namespace string) InsightsAPIKeyNamespaceLister {
	return insightsAPIKeyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InsightsAPIKeyNamespaceLister helps list and get InsightsAPIKeys.
// All objects returned here must be treated as read-only.
type InsightsAPIKeyNamespaceLister interface {
	// List lists all InsightsAPIKeys in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InsightsAPIKey, err error)
	// Get retrieves the InsightsAPIKey from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.InsightsAPIKey, error)
	InsightsAPIKeyNamespaceListerExpansion
}

// insightsAPIKeyNamespaceLister implements the InsightsAPIKeyNamespaceLister
// interface.
type insightsAPIKeyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InsightsAPIKeys in the indexer for a given namespace.
func (s insightsAPIKeyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InsightsAPIKey, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InsightsAPIKey))
	})
	return ret, err
}

// Get retrieves the InsightsAPIKey from the indexer for a given namespace and name.
func (s insightsAPIKeyNamespaceLister) Get(name string) (*v1alpha1.InsightsAPIKey, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("insightsapikey"), name)
	}
	return obj.(*v1alpha1.InsightsAPIKey), nil
}
