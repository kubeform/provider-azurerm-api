/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by informer-gen. DO NOT EDIT.

package externalversions

import (
	"fmt"

	v1alpha1 "kubeform.dev/provider-azurerm-api/apis/aadb2c/v1alpha1"
	activev1alpha1 "kubeform.dev/provider-azurerm-api/apis/active/v1alpha1"
	advancedv1alpha1 "kubeform.dev/provider-azurerm-api/apis/advanced/v1alpha1"
	analysisv1alpha1 "kubeform.dev/provider-azurerm-api/apis/analysis/v1alpha1"
	apimanagementv1alpha1 "kubeform.dev/provider-azurerm-api/apis/apimanagement/v1alpha1"
	appv1alpha1 "kubeform.dev/provider-azurerm-api/apis/app/v1alpha1"
	applicationv1alpha1 "kubeform.dev/provider-azurerm-api/apis/application/v1alpha1"
	attestationv1alpha1 "kubeform.dev/provider-azurerm-api/apis/attestation/v1alpha1"
	automationv1alpha1 "kubeform.dev/provider-azurerm-api/apis/automation/v1alpha1"
	availabilityv1alpha1 "kubeform.dev/provider-azurerm-api/apis/availability/v1alpha1"
	backupv1alpha1 "kubeform.dev/provider-azurerm-api/apis/backup/v1alpha1"
	bastionv1alpha1 "kubeform.dev/provider-azurerm-api/apis/bastion/v1alpha1"
	batchv1alpha1 "kubeform.dev/provider-azurerm-api/apis/batch/v1alpha1"
	blueprintv1alpha1 "kubeform.dev/provider-azurerm-api/apis/blueprint/v1alpha1"
	botv1alpha1 "kubeform.dev/provider-azurerm-api/apis/bot/v1alpha1"
	cdnv1alpha1 "kubeform.dev/provider-azurerm-api/apis/cdn/v1alpha1"
	cognitivev1alpha1 "kubeform.dev/provider-azurerm-api/apis/cognitive/v1alpha1"
	communicationv1alpha1 "kubeform.dev/provider-azurerm-api/apis/communication/v1alpha1"
	consumptionv1alpha1 "kubeform.dev/provider-azurerm-api/apis/consumption/v1alpha1"
	containerv1alpha1 "kubeform.dev/provider-azurerm-api/apis/container/v1alpha1"
	cosmosdbv1alpha1 "kubeform.dev/provider-azurerm-api/apis/cosmosdb/v1alpha1"
	costv1alpha1 "kubeform.dev/provider-azurerm-api/apis/cost/v1alpha1"
	customv1alpha1 "kubeform.dev/provider-azurerm-api/apis/custom/v1alpha1"
	dashboardv1alpha1 "kubeform.dev/provider-azurerm-api/apis/dashboard/v1alpha1"
	datav1alpha1 "kubeform.dev/provider-azurerm-api/apis/data/v1alpha1"
	databasev1alpha1 "kubeform.dev/provider-azurerm-api/apis/database/v1alpha1"
	databoxv1alpha1 "kubeform.dev/provider-azurerm-api/apis/databox/v1alpha1"
	databricksv1alpha1 "kubeform.dev/provider-azurerm-api/apis/databricks/v1alpha1"
	dedicatedhardwarev1alpha1 "kubeform.dev/provider-azurerm-api/apis/dedicatedhardware/v1alpha1"
	dedicatedhostv1alpha1 "kubeform.dev/provider-azurerm-api/apis/dedicatedhost/v1alpha1"
	devspacev1alpha1 "kubeform.dev/provider-azurerm-api/apis/devspace/v1alpha1"
	devtestv1alpha1 "kubeform.dev/provider-azurerm-api/apis/devtest/v1alpha1"
	digitalv1alpha1 "kubeform.dev/provider-azurerm-api/apis/digital/v1alpha1"
	diskv1alpha1 "kubeform.dev/provider-azurerm-api/apis/disk/v1alpha1"
	dnsv1alpha1 "kubeform.dev/provider-azurerm-api/apis/dns/v1alpha1"
	eventgridv1alpha1 "kubeform.dev/provider-azurerm-api/apis/eventgrid/v1alpha1"
	eventhubv1alpha1 "kubeform.dev/provider-azurerm-api/apis/eventhub/v1alpha1"
	expressroutev1alpha1 "kubeform.dev/provider-azurerm-api/apis/expressroute/v1alpha1"
	firewallv1alpha1 "kubeform.dev/provider-azurerm-api/apis/firewall/v1alpha1"
	frontdoorv1alpha1 "kubeform.dev/provider-azurerm-api/apis/frontdoor/v1alpha1"
	functionv1alpha1 "kubeform.dev/provider-azurerm-api/apis/function/v1alpha1"
	hdinsightv1alpha1 "kubeform.dev/provider-azurerm-api/apis/hdinsight/v1alpha1"
	healthbotv1alpha1 "kubeform.dev/provider-azurerm-api/apis/healthbot/v1alpha1"
	healthcarev1alpha1 "kubeform.dev/provider-azurerm-api/apis/healthcare/v1alpha1"
	hpcv1alpha1 "kubeform.dev/provider-azurerm-api/apis/hpc/v1alpha1"
	imagev1alpha1 "kubeform.dev/provider-azurerm-api/apis/image/v1alpha1"
	integrationv1alpha1 "kubeform.dev/provider-azurerm-api/apis/integration/v1alpha1"
	iotcentralv1alpha1 "kubeform.dev/provider-azurerm-api/apis/iotcentral/v1alpha1"
	iothubv1alpha1 "kubeform.dev/provider-azurerm-api/apis/iothub/v1alpha1"
	iotsecurityv1alpha1 "kubeform.dev/provider-azurerm-api/apis/iotsecurity/v1alpha1"
	iottimev1alpha1 "kubeform.dev/provider-azurerm-api/apis/iottime/v1alpha1"
	ipv1alpha1 "kubeform.dev/provider-azurerm-api/apis/ip/v1alpha1"
	keyvaultv1alpha1 "kubeform.dev/provider-azurerm-api/apis/keyvault/v1alpha1"
	kubernetesclusterv1alpha1 "kubeform.dev/provider-azurerm-api/apis/kubernetescluster/v1alpha1"
	kustov1alpha1 "kubeform.dev/provider-azurerm-api/apis/kusto/v1alpha1"
	lbv1alpha1 "kubeform.dev/provider-azurerm-api/apis/lb/v1alpha1"
	lighthousev1alpha1 "kubeform.dev/provider-azurerm-api/apis/lighthouse/v1alpha1"
	linuxv1alpha1 "kubeform.dev/provider-azurerm-api/apis/linux/v1alpha1"
	loadv1alpha1 "kubeform.dev/provider-azurerm-api/apis/load/v1alpha1"
	localv1alpha1 "kubeform.dev/provider-azurerm-api/apis/local/v1alpha1"
	loganalyticsv1alpha1 "kubeform.dev/provider-azurerm-api/apis/loganalytics/v1alpha1"
	logicappv1alpha1 "kubeform.dev/provider-azurerm-api/apis/logicapp/v1alpha1"
	logzv1alpha1 "kubeform.dev/provider-azurerm-api/apis/logz/v1alpha1"
	machinev1alpha1 "kubeform.dev/provider-azurerm-api/apis/machine/v1alpha1"
	maintenancev1alpha1 "kubeform.dev/provider-azurerm-api/apis/maintenance/v1alpha1"
	managedv1alpha1 "kubeform.dev/provider-azurerm-api/apis/managed/v1alpha1"
	managementv1alpha1 "kubeform.dev/provider-azurerm-api/apis/management/v1alpha1"
	mapsv1alpha1 "kubeform.dev/provider-azurerm-api/apis/maps/v1alpha1"
	mariadbv1alpha1 "kubeform.dev/provider-azurerm-api/apis/mariadb/v1alpha1"
	marketplacev1alpha1 "kubeform.dev/provider-azurerm-api/apis/marketplace/v1alpha1"
	mediav1alpha1 "kubeform.dev/provider-azurerm-api/apis/media/v1alpha1"
	monitorv1alpha1 "kubeform.dev/provider-azurerm-api/apis/monitor/v1alpha1"
	mssqlv1alpha1 "kubeform.dev/provider-azurerm-api/apis/mssql/v1alpha1"
	mysqlv1alpha1 "kubeform.dev/provider-azurerm-api/apis/mysql/v1alpha1"
	natv1alpha1 "kubeform.dev/provider-azurerm-api/apis/nat/v1alpha1"
	netappv1alpha1 "kubeform.dev/provider-azurerm-api/apis/netapp/v1alpha1"
	networkv1alpha1 "kubeform.dev/provider-azurerm-api/apis/network/v1alpha1"
	notificationhubv1alpha1 "kubeform.dev/provider-azurerm-api/apis/notificationhub/v1alpha1"
	orchestratedv1alpha1 "kubeform.dev/provider-azurerm-api/apis/orchestrated/v1alpha1"
	packetv1alpha1 "kubeform.dev/provider-azurerm-api/apis/packet/v1alpha1"
	pointv1alpha1 "kubeform.dev/provider-azurerm-api/apis/point/v1alpha1"
	policyv1alpha1 "kubeform.dev/provider-azurerm-api/apis/policy/v1alpha1"
	portalv1alpha1 "kubeform.dev/provider-azurerm-api/apis/portal/v1alpha1"
	postgresqlv1alpha1 "kubeform.dev/provider-azurerm-api/apis/postgresql/v1alpha1"
	powerbiv1alpha1 "kubeform.dev/provider-azurerm-api/apis/powerbi/v1alpha1"
	privatev1alpha1 "kubeform.dev/provider-azurerm-api/apis/private/v1alpha1"
	proximityv1alpha1 "kubeform.dev/provider-azurerm-api/apis/proximity/v1alpha1"
	publicipv1alpha1 "kubeform.dev/provider-azurerm-api/apis/publicip/v1alpha1"
	purviewv1alpha1 "kubeform.dev/provider-azurerm-api/apis/purview/v1alpha1"
	recoveryv1alpha1 "kubeform.dev/provider-azurerm-api/apis/recovery/v1alpha1"
	redisv1alpha1 "kubeform.dev/provider-azurerm-api/apis/redis/v1alpha1"
	relayv1alpha1 "kubeform.dev/provider-azurerm-api/apis/relay/v1alpha1"
	resourcev1alpha1 "kubeform.dev/provider-azurerm-api/apis/resource/v1alpha1"
	rolev1alpha1 "kubeform.dev/provider-azurerm-api/apis/role/v1alpha1"
	routev1alpha1 "kubeform.dev/provider-azurerm-api/apis/route/v1alpha1"
	searchv1alpha1 "kubeform.dev/provider-azurerm-api/apis/search/v1alpha1"
	securityv1alpha1 "kubeform.dev/provider-azurerm-api/apis/security/v1alpha1"
	sentinelv1alpha1 "kubeform.dev/provider-azurerm-api/apis/sentinel/v1alpha1"
	servicev1alpha1 "kubeform.dev/provider-azurerm-api/apis/service/v1alpha1"
	servicebusv1alpha1 "kubeform.dev/provider-azurerm-api/apis/servicebus/v1alpha1"
	sharedimagev1alpha1 "kubeform.dev/provider-azurerm-api/apis/sharedimage/v1alpha1"
	signalrv1alpha1 "kubeform.dev/provider-azurerm-api/apis/signalr/v1alpha1"
	siterecoveryv1alpha1 "kubeform.dev/provider-azurerm-api/apis/siterecovery/v1alpha1"
	snapshotv1alpha1 "kubeform.dev/provider-azurerm-api/apis/snapshot/v1alpha1"
	spatialv1alpha1 "kubeform.dev/provider-azurerm-api/apis/spatial/v1alpha1"
	springv1alpha1 "kubeform.dev/provider-azurerm-api/apis/spring/v1alpha1"
	sqlv1alpha1 "kubeform.dev/provider-azurerm-api/apis/sql/v1alpha1"
	sshv1alpha1 "kubeform.dev/provider-azurerm-api/apis/ssh/v1alpha1"
	stackv1alpha1 "kubeform.dev/provider-azurerm-api/apis/stack/v1alpha1"
	staticv1alpha1 "kubeform.dev/provider-azurerm-api/apis/static/v1alpha1"
	storagev1alpha1 "kubeform.dev/provider-azurerm-api/apis/storage/v1alpha1"
	streamv1alpha1 "kubeform.dev/provider-azurerm-api/apis/stream/v1alpha1"
	subnetv1alpha1 "kubeform.dev/provider-azurerm-api/apis/subnet/v1alpha1"
	subscriptionv1alpha1 "kubeform.dev/provider-azurerm-api/apis/subscription/v1alpha1"
	synapsev1alpha1 "kubeform.dev/provider-azurerm-api/apis/synapse/v1alpha1"
	templatev1alpha1 "kubeform.dev/provider-azurerm-api/apis/template/v1alpha1"
	tenantv1alpha1 "kubeform.dev/provider-azurerm-api/apis/tenant/v1alpha1"
	trafficmanagerv1alpha1 "kubeform.dev/provider-azurerm-api/apis/trafficmanager/v1alpha1"
	userv1alpha1 "kubeform.dev/provider-azurerm-api/apis/user/v1alpha1"
	videov1alpha1 "kubeform.dev/provider-azurerm-api/apis/video/v1alpha1"
	virtualv1alpha1 "kubeform.dev/provider-azurerm-api/apis/virtual/v1alpha1"
	vmwarev1alpha1 "kubeform.dev/provider-azurerm-api/apis/vmware/v1alpha1"
	vpnv1alpha1 "kubeform.dev/provider-azurerm-api/apis/vpn/v1alpha1"
	webv1alpha1 "kubeform.dev/provider-azurerm-api/apis/web/v1alpha1"
	windowsv1alpha1 "kubeform.dev/provider-azurerm-api/apis/windows/v1alpha1"

	schema "k8s.io/apimachinery/pkg/runtime/schema"
	cache "k8s.io/client-go/tools/cache"
)

// GenericInformer is type of SharedIndexInformer which will locate and delegate to other
// sharedInformers based on type
type GenericInformer interface {
	Informer() cache.SharedIndexInformer
	Lister() cache.GenericLister
}

type genericInformer struct {
	informer cache.SharedIndexInformer
	resource schema.GroupResource
}

// Informer returns the SharedIndexInformer.
func (f *genericInformer) Informer() cache.SharedIndexInformer {
	return f.informer
}

// Lister returns the GenericLister.
func (f *genericInformer) Lister() cache.GenericLister {
	return cache.NewGenericLister(f.Informer().GetIndexer(), f.resource)
}

// ForResource gives generic access to a shared informer of the matching type
// TODO extend this to unknown resources with a client pool
func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {
	switch resource {
	// Group=aadb2c.azurerm.kubeform.com, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithResource("directories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Aadb2c().V1alpha1().Directories().Informer()}, nil

		// Group=active.azurerm.kubeform.com, Version=v1alpha1
	case activev1alpha1.SchemeGroupVersion.WithResource("directorydomainservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Active().V1alpha1().DirectoryDomainServices().Informer()}, nil
	case activev1alpha1.SchemeGroupVersion.WithResource("directorydomainservicereplicasets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Active().V1alpha1().DirectoryDomainServiceReplicaSets().Informer()}, nil

		// Group=advanced.azurerm.kubeform.com, Version=v1alpha1
	case advancedv1alpha1.SchemeGroupVersion.WithResource("threatprotections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Advanced().V1alpha1().ThreatProtections().Informer()}, nil

		// Group=analysis.azurerm.kubeform.com, Version=v1alpha1
	case analysisv1alpha1.SchemeGroupVersion.WithResource("servicesservers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Analysis().V1alpha1().ServicesServers().Informer()}, nil

		// Group=apimanagement.azurerm.kubeform.com, Version=v1alpha1
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apis"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Apis().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apidiagnostics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ApiDiagnostics().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apimanagements"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ApiManagements().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apioperations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ApiOperations().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apioperationpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ApiOperationPolicies().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apioperationtags"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ApiOperationTags().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apipolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ApiPolicies().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apireleases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ApiReleases().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apischemas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ApiSchemas().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apitags"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ApiTags().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("apiversionsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ApiVersionSets().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("authorizationservers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().AuthorizationServers().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("backends"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Backends().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Certificates().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("customdomains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().CustomDomains().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("diagnostics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Diagnostics().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("emailtemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().EmailTemplates().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Gateways().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("gatewayapis"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().GatewayAPIs().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Groups().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("groupusers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().GroupUsers().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("identityprovideraads"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().IdentityProviderAads().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("identityprovideraadb2cs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().IdentityProviderAadb2cs().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("identityproviderfacebooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().IdentityProviderFacebooks().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("identityprovidergoogles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().IdentityProviderGoogles().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("identityprovidermicrosofts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().IdentityProviderMicrosofts().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("identityprovidertwitters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().IdentityProviderTwitters().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("loggers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Loggers().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("namedvalues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().NamedValues().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("notificationrecipientemails"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().NotificationRecipientEmails().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("notificationrecipientusers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().NotificationRecipientUsers().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("openidconnectproviders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().OpenidConnectProviders().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Policies().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("products"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Products().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("productapis"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ProductAPIs().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("productgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ProductGroups().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("productpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().ProductPolicies().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("properties"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Properties().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("rediscaches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().RedisCaches().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("subscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Subscriptions().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("tags"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Tags().Informer()}, nil
	case apimanagementv1alpha1.SchemeGroupVersion.WithResource("users"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apimanagement().V1alpha1().Users().Informer()}, nil

		// Group=app.azurerm.kubeform.com, Version=v1alpha1
	case appv1alpha1.SchemeGroupVersion.WithResource("configurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().Configurations().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("configurationfeatures"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ConfigurationFeatures().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("configurationkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ConfigurationKeys().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().Services().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("serviceactiveslots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceActiveSlots().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("servicecertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceCertificates().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("servicecertificatebindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceCertificateBindings().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("servicecertificateorders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceCertificateOrders().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("servicecustomhostnamebindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceCustomHostnameBindings().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("serviceenvironments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceEnvironments().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("serviceenvironmentv3s"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceEnvironmentV3s().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("servicehybridconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceHybridConnections().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("servicemanagedcertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceManagedCertificates().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("serviceplans"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServicePlans().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("servicepubliccertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServicePublicCertificates().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("serviceslots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceSlots().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("serviceslotcustomhostnamebindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceSlotCustomHostnameBindings().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("serviceslotvirtualnetworkswiftconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceSlotVirtualNetworkSwiftConnections().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("servicesourcecontroltokens"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceSourceControlTokens().Informer()}, nil
	case appv1alpha1.SchemeGroupVersion.WithResource("servicevirtualnetworkswiftconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.App().V1alpha1().ServiceVirtualNetworkSwiftConnections().Informer()}, nil

		// Group=application.azurerm.kubeform.com, Version=v1alpha1
	case applicationv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Application().V1alpha1().Gateways().Informer()}, nil
	case applicationv1alpha1.SchemeGroupVersion.WithResource("insightses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Application().V1alpha1().Insightses().Informer()}, nil
	case applicationv1alpha1.SchemeGroupVersion.WithResource("insightsapikeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Application().V1alpha1().InsightsAPIKeys().Informer()}, nil
	case applicationv1alpha1.SchemeGroupVersion.WithResource("insightsanalyticsitems"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Application().V1alpha1().InsightsAnalyticsItems().Informer()}, nil
	case applicationv1alpha1.SchemeGroupVersion.WithResource("insightssmartdetectionrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Application().V1alpha1().InsightsSmartDetectionRules().Informer()}, nil
	case applicationv1alpha1.SchemeGroupVersion.WithResource("insightswebtests"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Application().V1alpha1().InsightsWebTests().Informer()}, nil
	case applicationv1alpha1.SchemeGroupVersion.WithResource("securitygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Application().V1alpha1().SecurityGroups().Informer()}, nil

		// Group=attestation.azurerm.kubeform.com, Version=v1alpha1
	case attestationv1alpha1.SchemeGroupVersion.WithResource("providers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Attestation().V1alpha1().Providers().Informer()}, nil

		// Group=automation.azurerm.kubeform.com, Version=v1alpha1
	case automationv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().Accounts().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().Certificates().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().Connections().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("connectioncertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().ConnectionCertificates().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("connectionclassiccertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().ConnectionClassicCertificates().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("connectionserviceprincipals"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().ConnectionServicePrincipals().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("credentials"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().Credentials().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("dscconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().DscConfigurations().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("dscnodeconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().DscNodeconfigurations().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("jobschedules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().JobSchedules().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("modules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().Modules().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("runbooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().Runbooks().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("schedules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().Schedules().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("variablebools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().VariableBools().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("variabledatetimes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().VariableDatetimes().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("variableints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().VariableInts().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("variablestrings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().VariableStrings().Informer()}, nil
	case automationv1alpha1.SchemeGroupVersion.WithResource("webhooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Automation().V1alpha1().Webhooks().Informer()}, nil

		// Group=availability.azurerm.kubeform.com, Version=v1alpha1
	case availabilityv1alpha1.SchemeGroupVersion.WithResource("sets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Availability().V1alpha1().Sets().Informer()}, nil

		// Group=backup.azurerm.kubeform.com, Version=v1alpha1
	case backupv1alpha1.SchemeGroupVersion.WithResource("containerstorageaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().ContainerStorageAccounts().Informer()}, nil
	case backupv1alpha1.SchemeGroupVersion.WithResource("policyfileshares"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().PolicyFileShares().Informer()}, nil
	case backupv1alpha1.SchemeGroupVersion.WithResource("policyvms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().PolicyVms().Informer()}, nil
	case backupv1alpha1.SchemeGroupVersion.WithResource("protectedfileshares"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().ProtectedFileShares().Informer()}, nil
	case backupv1alpha1.SchemeGroupVersion.WithResource("protectedvms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Backup().V1alpha1().ProtectedVms().Informer()}, nil

		// Group=bastion.azurerm.kubeform.com, Version=v1alpha1
	case bastionv1alpha1.SchemeGroupVersion.WithResource("hosts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bastion().V1alpha1().Hosts().Informer()}, nil

		// Group=batch.azurerm.kubeform.com, Version=v1alpha1
	case batchv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Batch().V1alpha1().Accounts().Informer()}, nil
	case batchv1alpha1.SchemeGroupVersion.WithResource("applications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Batch().V1alpha1().Applications().Informer()}, nil
	case batchv1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Batch().V1alpha1().Certificates().Informer()}, nil
	case batchv1alpha1.SchemeGroupVersion.WithResource("jobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Batch().V1alpha1().Jobs().Informer()}, nil
	case batchv1alpha1.SchemeGroupVersion.WithResource("pools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Batch().V1alpha1().Pools().Informer()}, nil

		// Group=blueprint.azurerm.kubeform.com, Version=v1alpha1
	case blueprintv1alpha1.SchemeGroupVersion.WithResource("assignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Blueprint().V1alpha1().Assignments().Informer()}, nil

		// Group=bot.azurerm.kubeform.com, Version=v1alpha1
	case botv1alpha1.SchemeGroupVersion.WithResource("channelalexas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelAlexas().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("channeldirectlinespeeches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelDirectLineSpeeches().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("channeldirectlines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelDirectlines().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("channelemails"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelEmails().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("channelfacebooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelFacebooks().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("channellines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelLines().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("channelmsteamses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelMsTeamses().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("channelslacks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelSlacks().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("channelsmses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelSmses().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("channelwebchats"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelWebChats().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("channelsregistrations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ChannelsRegistrations().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().Connections().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("serviceazurebots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().ServiceAzureBots().Informer()}, nil
	case botv1alpha1.SchemeGroupVersion.WithResource("webapps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bot().V1alpha1().WebApps().Informer()}, nil

		// Group=cdn.azurerm.kubeform.com, Version=v1alpha1
	case cdnv1alpha1.SchemeGroupVersion.WithResource("endpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cdn().V1alpha1().Endpoints().Informer()}, nil
	case cdnv1alpha1.SchemeGroupVersion.WithResource("endpointcustomdomains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cdn().V1alpha1().EndpointCustomDomains().Informer()}, nil
	case cdnv1alpha1.SchemeGroupVersion.WithResource("profiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cdn().V1alpha1().Profiles().Informer()}, nil

		// Group=cognitive.azurerm.kubeform.com, Version=v1alpha1
	case cognitivev1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognitive().V1alpha1().Accounts().Informer()}, nil
	case cognitivev1alpha1.SchemeGroupVersion.WithResource("accountcustomermanagedkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cognitive().V1alpha1().AccountCustomerManagedKeys().Informer()}, nil

		// Group=communication.azurerm.kubeform.com, Version=v1alpha1
	case communicationv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Communication().V1alpha1().Services().Informer()}, nil

		// Group=consumption.azurerm.kubeform.com, Version=v1alpha1
	case consumptionv1alpha1.SchemeGroupVersion.WithResource("budgetmanagementgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Consumption().V1alpha1().BudgetManagementGroups().Informer()}, nil
	case consumptionv1alpha1.SchemeGroupVersion.WithResource("budgetresourcegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Consumption().V1alpha1().BudgetResourceGroups().Informer()}, nil
	case consumptionv1alpha1.SchemeGroupVersion.WithResource("budgetsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Consumption().V1alpha1().BudgetSubscriptions().Informer()}, nil

		// Group=container.azurerm.kubeform.com, Version=v1alpha1
	case containerv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().Groups().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("registries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().Registries().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("registryscopemaps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().RegistryScopeMaps().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("registrytasks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().RegistryTasks().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("registrytokens"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().RegistryTokens().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("registrywebhooks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().RegistryWebhooks().Informer()}, nil

		// Group=cosmosdb.azurerm.kubeform.com, Version=v1alpha1
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().Accounts().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("cassandraclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().CassandraClusters().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("cassandradatacenters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().CassandraDatacenters().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("cassandrakeyspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().CassandraKeyspaces().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("cassandratables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().CassandraTables().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("gremlindatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().GremlinDatabases().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("gremlingraphs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().GremlinGraphs().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("mongocollections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().MongoCollections().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("mongodatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().MongoDatabases().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("notebookworkspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().NotebookWorkspaces().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("sqlcontainers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().SqlContainers().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("sqldatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().SqlDatabases().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("sqlfunctions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().SqlFunctions().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("sqlstoredprocedures"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().SqlStoredProcedures().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("sqltriggers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().SqlTriggers().Informer()}, nil
	case cosmosdbv1alpha1.SchemeGroupVersion.WithResource("tables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cosmosdb().V1alpha1().Tables().Informer()}, nil

		// Group=cost.azurerm.kubeform.com, Version=v1alpha1
	case costv1alpha1.SchemeGroupVersion.WithResource("managementexportresourcegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cost().V1alpha1().ManagementExportResourceGroups().Informer()}, nil

		// Group=custom.azurerm.kubeform.com, Version=v1alpha1
	case customv1alpha1.SchemeGroupVersion.WithResource("providers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Custom().V1alpha1().Providers().Informer()}, nil

		// Group=dashboard.azurerm.kubeform.com, Version=v1alpha1
	case dashboardv1alpha1.SchemeGroupVersion.WithResource("dashboards"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dashboard().V1alpha1().Dashboards().Informer()}, nil

		// Group=data.azurerm.kubeform.com, Version=v1alpha1
	case datav1alpha1.SchemeGroupVersion.WithResource("factories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().Factories().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorycustomdatasets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryCustomDatasets().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydataflows"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDataFlows().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasetazureblobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetAzureBlobs().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasetbinaries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetBinaries().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasetcosmosdbsqlapis"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetCosmosdbSqlapis().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasetdelimitedtexts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetDelimitedTexts().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasethttps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetHTTPs().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasetjsons"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetJSONs().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasetmysqls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetMysqls().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasetparquets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetParquets().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasetpostgresqls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetPostgresqls().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasetsqlservertables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetSQLServerTables().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorydatasetsnowflakes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryDatasetSnowflakes().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factoryintegrationruntimeazures"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryIntegrationRuntimeAzures().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factoryintegrationruntimeazuressises"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryIntegrationRuntimeAzureSsises().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factoryintegrationruntimemanageds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryIntegrationRuntimeManageds().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factoryintegrationruntimeselfhosteds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryIntegrationRuntimeSelfHosteds().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedcustomservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedCustomServices().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedserviceazureblobstorages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceAzureBlobStorages().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedserviceazuredatabrickses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceAzureDatabrickses().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedserviceazurefilestorages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceAzureFileStorages().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedserviceazurefunctions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceAzureFunctions().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedserviceazuresqldatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceAzureSQLDatabases().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedserviceazuresearches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceAzureSearches().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedserviceazuretablestorages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceAzureTableStorages().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicecosmosdbs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceCosmosdbs().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicecosmosdbmongoapis"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceCosmosdbMongoapis().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicedatalakestoragegen2s"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceDataLakeStorageGen2s().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicekeyvaults"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceKeyVaults().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicekustos"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceKustos().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicemysqls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceMysqls().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedserviceodatas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceOdatas().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedserviceodbcs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceOdbcs().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicepostgresqls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServicePostgresqls().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicesqlservers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceSQLServers().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicesftps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceSftps().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicesnowflakes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceSnowflakes().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicesynapses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceSynapses().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorylinkedservicewebs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryLinkedServiceWebs().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorymanagedprivateendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryManagedPrivateEndpoints().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorypipelines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryPipelines().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorytriggerblobevents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryTriggerBlobEvents().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorytriggercustomevents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryTriggerCustomEvents().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorytriggerschedules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryTriggerSchedules().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("factorytriggertumblingwindows"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().FactoryTriggerTumblingWindows().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("lakeanalyticsaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().LakeAnalyticsAccounts().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("lakeanalyticsfirewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().LakeAnalyticsFirewallRules().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("lakestores"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().LakeStores().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("lakestorefiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().LakeStoreFiles().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("lakestorefirewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().LakeStoreFirewallRules().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("lakestorevirtualnetworkrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().LakeStoreVirtualNetworkRules().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("protectionbackupinstanceblobstorages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ProtectionBackupInstanceBlobStorages().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("protectionbackupinstancedisks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ProtectionBackupInstanceDisks().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("protectionbackupinstancepostgresqls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ProtectionBackupInstancePostgresqls().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("protectionbackuppolicyblobstorages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ProtectionBackupPolicyBlobStorages().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("protectionbackuppolicydisks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ProtectionBackupPolicyDisks().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("protectionbackuppolicypostgresqls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ProtectionBackupPolicyPostgresqls().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("protectionbackupvaults"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ProtectionBackupVaults().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("shares"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().Shares().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("shareaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ShareAccounts().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("sharedatasetblobstorages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ShareDatasetBlobStorages().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("sharedatasetdatalakegen1s"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ShareDatasetDataLakeGen1s().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("sharedatasetdatalakegen2s"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ShareDatasetDataLakeGen2s().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("sharedatasetkustoclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ShareDatasetKustoClusters().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("sharedatasetkustodatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().ShareDatasetKustoDatabases().Informer()}, nil

		// Group=database.azurerm.kubeform.com, Version=v1alpha1
	case databasev1alpha1.SchemeGroupVersion.WithResource("migrationprojects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Database().V1alpha1().MigrationProjects().Informer()}, nil
	case databasev1alpha1.SchemeGroupVersion.WithResource("migrationservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Database().V1alpha1().MigrationServices().Informer()}, nil

		// Group=databox.azurerm.kubeform.com, Version=v1alpha1
	case databoxv1alpha1.SchemeGroupVersion.WithResource("edgedevices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Databox().V1alpha1().EdgeDevices().Informer()}, nil
	case databoxv1alpha1.SchemeGroupVersion.WithResource("edgeorders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Databox().V1alpha1().EdgeOrders().Informer()}, nil

		// Group=databricks.azurerm.kubeform.com, Version=v1alpha1
	case databricksv1alpha1.SchemeGroupVersion.WithResource("workspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Databricks().V1alpha1().Workspaces().Informer()}, nil
	case databricksv1alpha1.SchemeGroupVersion.WithResource("workspacecustomermanagedkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Databricks().V1alpha1().WorkspaceCustomerManagedKeys().Informer()}, nil

		// Group=dedicatedhardware.azurerm.kubeform.com, Version=v1alpha1
	case dedicatedhardwarev1alpha1.SchemeGroupVersion.WithResource("securitymodules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dedicatedhardware().V1alpha1().SecurityModules().Informer()}, nil

		// Group=dedicatedhost.azurerm.kubeform.com, Version=v1alpha1
	case dedicatedhostv1alpha1.SchemeGroupVersion.WithResource("dedicatedhosts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dedicatedhost().V1alpha1().DedicatedHosts().Informer()}, nil
	case dedicatedhostv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dedicatedhost().V1alpha1().Groups().Informer()}, nil

		// Group=devspace.azurerm.kubeform.com, Version=v1alpha1
	case devspacev1alpha1.SchemeGroupVersion.WithResource("controllers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Devspace().V1alpha1().Controllers().Informer()}, nil

		// Group=devtest.azurerm.kubeform.com, Version=v1alpha1
	case devtestv1alpha1.SchemeGroupVersion.WithResource("globalvmshutdownschedules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Devtest().V1alpha1().GlobalVmShutdownSchedules().Informer()}, nil
	case devtestv1alpha1.SchemeGroupVersion.WithResource("labs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Devtest().V1alpha1().Labs().Informer()}, nil
	case devtestv1alpha1.SchemeGroupVersion.WithResource("linuxvirtualmachines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Devtest().V1alpha1().LinuxVirtualMachines().Informer()}, nil
	case devtestv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Devtest().V1alpha1().Policies().Informer()}, nil
	case devtestv1alpha1.SchemeGroupVersion.WithResource("schedules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Devtest().V1alpha1().Schedules().Informer()}, nil
	case devtestv1alpha1.SchemeGroupVersion.WithResource("virtualnetworks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Devtest().V1alpha1().VirtualNetworks().Informer()}, nil
	case devtestv1alpha1.SchemeGroupVersion.WithResource("windowsvirtualmachines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Devtest().V1alpha1().WindowsVirtualMachines().Informer()}, nil

		// Group=digital.azurerm.kubeform.com, Version=v1alpha1
	case digitalv1alpha1.SchemeGroupVersion.WithResource("twinsendpointeventgrids"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Digital().V1alpha1().TwinsEndpointEventgrids().Informer()}, nil
	case digitalv1alpha1.SchemeGroupVersion.WithResource("twinsendpointeventhubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Digital().V1alpha1().TwinsEndpointEventhubs().Informer()}, nil
	case digitalv1alpha1.SchemeGroupVersion.WithResource("twinsendpointservicebuses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Digital().V1alpha1().TwinsEndpointServicebuses().Informer()}, nil
	case digitalv1alpha1.SchemeGroupVersion.WithResource("twinsinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Digital().V1alpha1().TwinsInstances().Informer()}, nil

		// Group=disk.azurerm.kubeform.com, Version=v1alpha1
	case diskv1alpha1.SchemeGroupVersion.WithResource("accesses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Disk().V1alpha1().Accesses().Informer()}, nil
	case diskv1alpha1.SchemeGroupVersion.WithResource("encryptionsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Disk().V1alpha1().EncryptionSets().Informer()}, nil
	case diskv1alpha1.SchemeGroupVersion.WithResource("pools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Disk().V1alpha1().Pools().Informer()}, nil
	case diskv1alpha1.SchemeGroupVersion.WithResource("pooliscsitargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Disk().V1alpha1().PoolIscsiTargets().Informer()}, nil
	case diskv1alpha1.SchemeGroupVersion.WithResource("pooliscsitargetluns"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Disk().V1alpha1().PoolIscsiTargetLuns().Informer()}, nil
	case diskv1alpha1.SchemeGroupVersion.WithResource("poolmanageddiskattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Disk().V1alpha1().PoolManagedDiskAttachments().Informer()}, nil

		// Group=dns.azurerm.kubeform.com, Version=v1alpha1
	case dnsv1alpha1.SchemeGroupVersion.WithResource("arecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().ARecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("aaaarecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().AaaaRecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("caarecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().CaaRecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("cnamerecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().CnameRecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("mxrecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().MxRecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("nsrecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().NsRecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("ptrrecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().PtrRecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("srvrecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().SrvRecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("txtrecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().TxtRecords().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("zones"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Zones().Informer()}, nil

		// Group=eventgrid.azurerm.kubeform.com, Version=v1alpha1
	case eventgridv1alpha1.SchemeGroupVersion.WithResource("domains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventgrid().V1alpha1().Domains().Informer()}, nil
	case eventgridv1alpha1.SchemeGroupVersion.WithResource("domaintopics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventgrid().V1alpha1().DomainTopics().Informer()}, nil
	case eventgridv1alpha1.SchemeGroupVersion.WithResource("eventsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventgrid().V1alpha1().EventSubscriptions().Informer()}, nil
	case eventgridv1alpha1.SchemeGroupVersion.WithResource("systemtopics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventgrid().V1alpha1().SystemTopics().Informer()}, nil
	case eventgridv1alpha1.SchemeGroupVersion.WithResource("systemtopiceventsubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventgrid().V1alpha1().SystemTopicEventSubscriptions().Informer()}, nil
	case eventgridv1alpha1.SchemeGroupVersion.WithResource("topics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventgrid().V1alpha1().Topics().Informer()}, nil

		// Group=eventhub.azurerm.kubeform.com, Version=v1alpha1
	case eventhubv1alpha1.SchemeGroupVersion.WithResource("authorizationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventhub().V1alpha1().AuthorizationRules().Informer()}, nil
	case eventhubv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventhub().V1alpha1().Clusters().Informer()}, nil
	case eventhubv1alpha1.SchemeGroupVersion.WithResource("consumergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventhub().V1alpha1().ConsumerGroups().Informer()}, nil
	case eventhubv1alpha1.SchemeGroupVersion.WithResource("eventhubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventhub().V1alpha1().Eventhubs().Informer()}, nil
	case eventhubv1alpha1.SchemeGroupVersion.WithResource("namespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventhub().V1alpha1().Namespaces().Informer()}, nil
	case eventhubv1alpha1.SchemeGroupVersion.WithResource("namespaceauthorizationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventhub().V1alpha1().NamespaceAuthorizationRules().Informer()}, nil
	case eventhubv1alpha1.SchemeGroupVersion.WithResource("namespacecustomermanagedkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventhub().V1alpha1().NamespaceCustomerManagedKeys().Informer()}, nil
	case eventhubv1alpha1.SchemeGroupVersion.WithResource("namespacedisasterrecoveryconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventhub().V1alpha1().NamespaceDisasterRecoveryConfigs().Informer()}, nil

		// Group=expressroute.azurerm.kubeform.com, Version=v1alpha1
	case expressroutev1alpha1.SchemeGroupVersion.WithResource("circuits"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Expressroute().V1alpha1().Circuits().Informer()}, nil
	case expressroutev1alpha1.SchemeGroupVersion.WithResource("circuitauthorizations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Expressroute().V1alpha1().CircuitAuthorizations().Informer()}, nil
	case expressroutev1alpha1.SchemeGroupVersion.WithResource("circuitconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Expressroute().V1alpha1().CircuitConnections().Informer()}, nil
	case expressroutev1alpha1.SchemeGroupVersion.WithResource("circuitpeerings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Expressroute().V1alpha1().CircuitPeerings().Informer()}, nil
	case expressroutev1alpha1.SchemeGroupVersion.WithResource("connections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Expressroute().V1alpha1().Connections().Informer()}, nil
	case expressroutev1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Expressroute().V1alpha1().Gateways().Informer()}, nil
	case expressroutev1alpha1.SchemeGroupVersion.WithResource("ports"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Expressroute().V1alpha1().Ports().Informer()}, nil

		// Group=firewall.azurerm.kubeform.com, Version=v1alpha1
	case firewallv1alpha1.SchemeGroupVersion.WithResource("applicationrulecollections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Firewall().V1alpha1().ApplicationRuleCollections().Informer()}, nil
	case firewallv1alpha1.SchemeGroupVersion.WithResource("firewalls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Firewall().V1alpha1().Firewalls().Informer()}, nil
	case firewallv1alpha1.SchemeGroupVersion.WithResource("natrulecollections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Firewall().V1alpha1().NatRuleCollections().Informer()}, nil
	case firewallv1alpha1.SchemeGroupVersion.WithResource("networkrulecollections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Firewall().V1alpha1().NetworkRuleCollections().Informer()}, nil
	case firewallv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Firewall().V1alpha1().Policies().Informer()}, nil
	case firewallv1alpha1.SchemeGroupVersion.WithResource("policyrulecollectiongroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Firewall().V1alpha1().PolicyRuleCollectionGroups().Informer()}, nil

		// Group=frontdoor.azurerm.kubeform.com, Version=v1alpha1
	case frontdoorv1alpha1.SchemeGroupVersion.WithResource("customhttpsconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Frontdoor().V1alpha1().CustomHTTPSConfigurations().Informer()}, nil
	case frontdoorv1alpha1.SchemeGroupVersion.WithResource("firewallpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Frontdoor().V1alpha1().FirewallPolicies().Informer()}, nil
	case frontdoorv1alpha1.SchemeGroupVersion.WithResource("frontdoors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Frontdoor().V1alpha1().Frontdoors().Informer()}, nil
	case frontdoorv1alpha1.SchemeGroupVersion.WithResource("rulesengines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Frontdoor().V1alpha1().RulesEngines().Informer()}, nil

		// Group=function.azurerm.kubeform.com, Version=v1alpha1
	case functionv1alpha1.SchemeGroupVersion.WithResource("apps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Function().V1alpha1().Apps().Informer()}, nil
	case functionv1alpha1.SchemeGroupVersion.WithResource("appslots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Function().V1alpha1().AppSlots().Informer()}, nil

		// Group=hdinsight.azurerm.kubeform.com, Version=v1alpha1
	case hdinsightv1alpha1.SchemeGroupVersion.WithResource("hadoopclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hdinsight().V1alpha1().HadoopClusters().Informer()}, nil
	case hdinsightv1alpha1.SchemeGroupVersion.WithResource("hbaseclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hdinsight().V1alpha1().HbaseClusters().Informer()}, nil
	case hdinsightv1alpha1.SchemeGroupVersion.WithResource("interactivequeryclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hdinsight().V1alpha1().InteractiveQueryClusters().Informer()}, nil
	case hdinsightv1alpha1.SchemeGroupVersion.WithResource("kafkaclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hdinsight().V1alpha1().KafkaClusters().Informer()}, nil
	case hdinsightv1alpha1.SchemeGroupVersion.WithResource("mlservicesclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hdinsight().V1alpha1().MlServicesClusters().Informer()}, nil
	case hdinsightv1alpha1.SchemeGroupVersion.WithResource("rserverclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hdinsight().V1alpha1().RserverClusters().Informer()}, nil
	case hdinsightv1alpha1.SchemeGroupVersion.WithResource("sparkclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hdinsight().V1alpha1().SparkClusters().Informer()}, nil
	case hdinsightv1alpha1.SchemeGroupVersion.WithResource("stormclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hdinsight().V1alpha1().StormClusters().Informer()}, nil

		// Group=healthbot.azurerm.kubeform.com, Version=v1alpha1
	case healthbotv1alpha1.SchemeGroupVersion.WithResource("healthbots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthbot().V1alpha1().Healthbots().Informer()}, nil

		// Group=healthcare.azurerm.kubeform.com, Version=v1alpha1
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().Services().Informer()}, nil

		// Group=hpc.azurerm.kubeform.com, Version=v1alpha1
	case hpcv1alpha1.SchemeGroupVersion.WithResource("caches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hpc().V1alpha1().Caches().Informer()}, nil
	case hpcv1alpha1.SchemeGroupVersion.WithResource("cacheaccesspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hpc().V1alpha1().CacheAccessPolicies().Informer()}, nil
	case hpcv1alpha1.SchemeGroupVersion.WithResource("cacheblobnfstargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hpc().V1alpha1().CacheBlobNfsTargets().Informer()}, nil
	case hpcv1alpha1.SchemeGroupVersion.WithResource("cacheblobtargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hpc().V1alpha1().CacheBlobTargets().Informer()}, nil
	case hpcv1alpha1.SchemeGroupVersion.WithResource("cachenfstargets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Hpc().V1alpha1().CacheNfsTargets().Informer()}, nil

		// Group=image.azurerm.kubeform.com, Version=v1alpha1
	case imagev1alpha1.SchemeGroupVersion.WithResource("images"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Image().V1alpha1().Images().Informer()}, nil

		// Group=integration.azurerm.kubeform.com, Version=v1alpha1
	case integrationv1alpha1.SchemeGroupVersion.WithResource("serviceenvironments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Integration().V1alpha1().ServiceEnvironments().Informer()}, nil

		// Group=iotcentral.azurerm.kubeform.com, Version=v1alpha1
	case iotcentralv1alpha1.SchemeGroupVersion.WithResource("applications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iotcentral().V1alpha1().Applications().Informer()}, nil

		// Group=iothub.azurerm.kubeform.com, Version=v1alpha1
	case iothubv1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().Certificates().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("consumergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().ConsumerGroups().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("dpses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().Dpses().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("dpscertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().DpsCertificates().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("dpssharedaccesspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().DpsSharedAccessPolicies().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("endpointeventhubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().EndpointEventhubs().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("endpointservicebusqueues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().EndpointServicebusQueues().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("endpointservicebustopics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().EndpointServicebusTopics().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("endpointstoragecontainers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().EndpointStorageContainers().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("enrichments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().Enrichments().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("fallbackroutes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().FallbackRoutes().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("iothubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().Iothubs().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("routes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().Routes().Informer()}, nil
	case iothubv1alpha1.SchemeGroupVersion.WithResource("sharedaccesspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iothub().V1alpha1().SharedAccessPolicies().Informer()}, nil

		// Group=iotsecurity.azurerm.kubeform.com, Version=v1alpha1
	case iotsecurityv1alpha1.SchemeGroupVersion.WithResource("devicegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iotsecurity().V1alpha1().DeviceGroups().Informer()}, nil
	case iotsecurityv1alpha1.SchemeGroupVersion.WithResource("solutions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iotsecurity().V1alpha1().Solutions().Informer()}, nil

		// Group=iottime.azurerm.kubeform.com, Version=v1alpha1
	case iottimev1alpha1.SchemeGroupVersion.WithResource("seriesinsightsaccesspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iottime().V1alpha1().SeriesInsightsAccessPolicies().Informer()}, nil
	case iottimev1alpha1.SchemeGroupVersion.WithResource("seriesinsightseventsourceeventhubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iottime().V1alpha1().SeriesInsightsEventSourceEventhubs().Informer()}, nil
	case iottimev1alpha1.SchemeGroupVersion.WithResource("seriesinsightseventsourceiothubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iottime().V1alpha1().SeriesInsightsEventSourceIothubs().Informer()}, nil
	case iottimev1alpha1.SchemeGroupVersion.WithResource("seriesinsightsgen2environments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iottime().V1alpha1().SeriesInsightsGen2Environments().Informer()}, nil
	case iottimev1alpha1.SchemeGroupVersion.WithResource("seriesinsightsreferencedatasets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iottime().V1alpha1().SeriesInsightsReferenceDataSets().Informer()}, nil
	case iottimev1alpha1.SchemeGroupVersion.WithResource("seriesinsightsstandardenvironments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iottime().V1alpha1().SeriesInsightsStandardEnvironments().Informer()}, nil

		// Group=ip.azurerm.kubeform.com, Version=v1alpha1
	case ipv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ip().V1alpha1().Groups().Informer()}, nil

		// Group=keyvault.azurerm.kubeform.com, Version=v1alpha1
	case keyvaultv1alpha1.SchemeGroupVersion.WithResource("accesspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Keyvault().V1alpha1().AccessPolicies().Informer()}, nil
	case keyvaultv1alpha1.SchemeGroupVersion.WithResource("certificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Keyvault().V1alpha1().Certificates().Informer()}, nil
	case keyvaultv1alpha1.SchemeGroupVersion.WithResource("certificateissuers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Keyvault().V1alpha1().CertificateIssuers().Informer()}, nil
	case keyvaultv1alpha1.SchemeGroupVersion.WithResource("keys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Keyvault().V1alpha1().Keys().Informer()}, nil
	case keyvaultv1alpha1.SchemeGroupVersion.WithResource("keyvaults"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Keyvault().V1alpha1().KeyVaults().Informer()}, nil
	case keyvaultv1alpha1.SchemeGroupVersion.WithResource("managedhardwaresecuritymodules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Keyvault().V1alpha1().ManagedHardwareSecurityModules().Informer()}, nil
	case keyvaultv1alpha1.SchemeGroupVersion.WithResource("managedstorageaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Keyvault().V1alpha1().ManagedStorageAccounts().Informer()}, nil
	case keyvaultv1alpha1.SchemeGroupVersion.WithResource("managedstorageaccountsastokendefinitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Keyvault().V1alpha1().ManagedStorageAccountSasTokenDefinitions().Informer()}, nil
	case keyvaultv1alpha1.SchemeGroupVersion.WithResource("secrets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Keyvault().V1alpha1().Secrets().Informer()}, nil

		// Group=kubernetescluster.azurerm.kubeform.com, Version=v1alpha1
	case kubernetesclusterv1alpha1.SchemeGroupVersion.WithResource("kubernetesclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kubernetescluster().V1alpha1().KubernetesClusters().Informer()}, nil
	case kubernetesclusterv1alpha1.SchemeGroupVersion.WithResource("nodepools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kubernetescluster().V1alpha1().NodePools().Informer()}, nil

		// Group=kusto.azurerm.kubeform.com, Version=v1alpha1
	case kustov1alpha1.SchemeGroupVersion.WithResource("attacheddatabaseconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().AttachedDatabaseConfigurations().Informer()}, nil
	case kustov1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().Clusters().Informer()}, nil
	case kustov1alpha1.SchemeGroupVersion.WithResource("clustercustomermanagedkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().ClusterCustomerManagedKeys().Informer()}, nil
	case kustov1alpha1.SchemeGroupVersion.WithResource("clusterprincipalassignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().ClusterPrincipalAssignments().Informer()}, nil
	case kustov1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().Databases().Informer()}, nil
	case kustov1alpha1.SchemeGroupVersion.WithResource("databaseprincipals"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().DatabasePrincipals().Informer()}, nil
	case kustov1alpha1.SchemeGroupVersion.WithResource("databaseprincipalassignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().DatabasePrincipalAssignments().Informer()}, nil
	case kustov1alpha1.SchemeGroupVersion.WithResource("eventgriddataconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().EventgridDataConnections().Informer()}, nil
	case kustov1alpha1.SchemeGroupVersion.WithResource("eventhubdataconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().EventhubDataConnections().Informer()}, nil
	case kustov1alpha1.SchemeGroupVersion.WithResource("iothubdataconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().IothubDataConnections().Informer()}, nil
	case kustov1alpha1.SchemeGroupVersion.WithResource("scripts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kusto().V1alpha1().Scripts().Informer()}, nil

		// Group=lb.azurerm.kubeform.com, Version=v1alpha1
	case lbv1alpha1.SchemeGroupVersion.WithResource("backendaddresspools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().BackendAddressPools().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("backendaddresspooladdresses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().BackendAddressPoolAddresses().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("lbs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().Lbs().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("natpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().NatPools().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("natrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().NatRules().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("outboundrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().OutboundRules().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("probes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().Probes().Informer()}, nil
	case lbv1alpha1.SchemeGroupVersion.WithResource("rules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lb().V1alpha1().Rules().Informer()}, nil

		// Group=lighthouse.azurerm.kubeform.com, Version=v1alpha1
	case lighthousev1alpha1.SchemeGroupVersion.WithResource("assignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lighthouse().V1alpha1().Assignments().Informer()}, nil
	case lighthousev1alpha1.SchemeGroupVersion.WithResource("definitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Lighthouse().V1alpha1().Definitions().Informer()}, nil

		// Group=linux.azurerm.kubeform.com, Version=v1alpha1
	case linuxv1alpha1.SchemeGroupVersion.WithResource("virtualmachines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Linux().V1alpha1().VirtualMachines().Informer()}, nil
	case linuxv1alpha1.SchemeGroupVersion.WithResource("virtualmachinescalesets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Linux().V1alpha1().VirtualMachineScaleSets().Informer()}, nil

		// Group=load.azurerm.kubeform.com, Version=v1alpha1
	case loadv1alpha1.SchemeGroupVersion.WithResource("loadtests"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Load().V1alpha1().Loadtests().Informer()}, nil

		// Group=local.azurerm.kubeform.com, Version=v1alpha1
	case localv1alpha1.SchemeGroupVersion.WithResource("networkgateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Local().V1alpha1().NetworkGateways().Informer()}, nil

		// Group=loganalytics.azurerm.kubeform.com, Version=v1alpha1
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().Clusters().Informer()}, nil
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("clustercustomermanagedkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().ClusterCustomerManagedKeys().Informer()}, nil
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("dataexportrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().DataExportRules().Informer()}, nil
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("datasourcewindowsevents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().DatasourceWindowsEvents().Informer()}, nil
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("datasourcewindowsperformancecounters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().DatasourceWindowsPerformanceCounters().Informer()}, nil
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("linkedservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().LinkedServices().Informer()}, nil
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("linkedstorageaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().LinkedStorageAccounts().Informer()}, nil
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("savedsearches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().SavedSearches().Informer()}, nil
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("solutions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().Solutions().Informer()}, nil
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("storageinsightses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().StorageInsightses().Informer()}, nil
	case loganalyticsv1alpha1.SchemeGroupVersion.WithResource("workspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Loganalytics().V1alpha1().Workspaces().Informer()}, nil

		// Group=logicapp.azurerm.kubeform.com, Version=v1alpha1
	case logicappv1alpha1.SchemeGroupVersion.WithResource("actioncustoms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().ActionCustoms().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("actionhttps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().ActionHTTPs().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("integrationaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().IntegrationAccounts().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("integrationaccountagreements"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().IntegrationAccountAgreements().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("integrationaccountassemblies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().IntegrationAccountAssemblies().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("integrationaccountbatchconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().IntegrationAccountBatchConfigurations().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("integrationaccountcertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().IntegrationAccountCertificates().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("integrationaccountmaps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().IntegrationAccountMaps().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("integrationaccountpartners"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().IntegrationAccountPartners().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("integrationaccountschemas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().IntegrationAccountSchemas().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("integrationaccountsessions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().IntegrationAccountSessions().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("standards"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().Standards().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("triggercustoms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().TriggerCustoms().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("triggerhttprequests"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().TriggerHTTPRequests().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("triggerrecurrences"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().TriggerRecurrences().Informer()}, nil
	case logicappv1alpha1.SchemeGroupVersion.WithResource("workflows"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logicapp().V1alpha1().Workflows().Informer()}, nil

		// Group=logz.azurerm.kubeform.com, Version=v1alpha1
	case logzv1alpha1.SchemeGroupVersion.WithResource("monitors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logz().V1alpha1().Monitors().Informer()}, nil
	case logzv1alpha1.SchemeGroupVersion.WithResource("tagrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logz().V1alpha1().TagRules().Informer()}, nil

		// Group=machine.azurerm.kubeform.com, Version=v1alpha1
	case machinev1alpha1.SchemeGroupVersion.WithResource("learningcomputeclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Machine().V1alpha1().LearningComputeClusters().Informer()}, nil
	case machinev1alpha1.SchemeGroupVersion.WithResource("learningcomputeinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Machine().V1alpha1().LearningComputeInstances().Informer()}, nil
	case machinev1alpha1.SchemeGroupVersion.WithResource("learninginferenceclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Machine().V1alpha1().LearningInferenceClusters().Informer()}, nil
	case machinev1alpha1.SchemeGroupVersion.WithResource("learningsynapsesparks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Machine().V1alpha1().LearningSynapseSparks().Informer()}, nil
	case machinev1alpha1.SchemeGroupVersion.WithResource("learningworkspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Machine().V1alpha1().LearningWorkspaces().Informer()}, nil

		// Group=maintenance.azurerm.kubeform.com, Version=v1alpha1
	case maintenancev1alpha1.SchemeGroupVersion.WithResource("assignmentdedicatedhosts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Maintenance().V1alpha1().AssignmentDedicatedHosts().Informer()}, nil
	case maintenancev1alpha1.SchemeGroupVersion.WithResource("assignmentvirtualmachines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Maintenance().V1alpha1().AssignmentVirtualMachines().Informer()}, nil
	case maintenancev1alpha1.SchemeGroupVersion.WithResource("assignmentvirtualmachinescalesets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Maintenance().V1alpha1().AssignmentVirtualMachineScaleSets().Informer()}, nil
	case maintenancev1alpha1.SchemeGroupVersion.WithResource("configurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Maintenance().V1alpha1().Configurations().Informer()}, nil

		// Group=managed.azurerm.kubeform.com, Version=v1alpha1
	case managedv1alpha1.SchemeGroupVersion.WithResource("applications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Managed().V1alpha1().Applications().Informer()}, nil
	case managedv1alpha1.SchemeGroupVersion.WithResource("applicationdefinitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Managed().V1alpha1().ApplicationDefinitions().Informer()}, nil
	case managedv1alpha1.SchemeGroupVersion.WithResource("disks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Managed().V1alpha1().Disks().Informer()}, nil

		// Group=management.azurerm.kubeform.com, Version=v1alpha1
	case managementv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Management().V1alpha1().Groups().Informer()}, nil
	case managementv1alpha1.SchemeGroupVersion.WithResource("grouppolicyassignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Management().V1alpha1().GroupPolicyAssignments().Informer()}, nil
	case managementv1alpha1.SchemeGroupVersion.WithResource("groupsubscriptionassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Management().V1alpha1().GroupSubscriptionAssociations().Informer()}, nil
	case managementv1alpha1.SchemeGroupVersion.WithResource("grouptemplatedeployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Management().V1alpha1().GroupTemplateDeployments().Informer()}, nil
	case managementv1alpha1.SchemeGroupVersion.WithResource("locks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Management().V1alpha1().Locks().Informer()}, nil

		// Group=maps.azurerm.kubeform.com, Version=v1alpha1
	case mapsv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Maps().V1alpha1().Accounts().Informer()}, nil
	case mapsv1alpha1.SchemeGroupVersion.WithResource("creators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Maps().V1alpha1().Creators().Informer()}, nil

		// Group=mariadb.azurerm.kubeform.com, Version=v1alpha1
	case mariadbv1alpha1.SchemeGroupVersion.WithResource("configurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mariadb().V1alpha1().Configurations().Informer()}, nil
	case mariadbv1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mariadb().V1alpha1().Databases().Informer()}, nil
	case mariadbv1alpha1.SchemeGroupVersion.WithResource("firewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mariadb().V1alpha1().FirewallRules().Informer()}, nil
	case mariadbv1alpha1.SchemeGroupVersion.WithResource("servers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mariadb().V1alpha1().Servers().Informer()}, nil
	case mariadbv1alpha1.SchemeGroupVersion.WithResource("virtualnetworkrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mariadb().V1alpha1().VirtualNetworkRules().Informer()}, nil

		// Group=marketplace.azurerm.kubeform.com, Version=v1alpha1
	case marketplacev1alpha1.SchemeGroupVersion.WithResource("agreements"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Marketplace().V1alpha1().Agreements().Informer()}, nil

		// Group=media.azurerm.kubeform.com, Version=v1alpha1
	case mediav1alpha1.SchemeGroupVersion.WithResource("assets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().Assets().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("assetfilters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().AssetFilters().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("contentkeypolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().ContentKeyPolicies().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("jobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().Jobs().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("liveevents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().LiveEvents().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("liveeventoutputs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().LiveEventOutputs().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("servicesaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().ServicesAccounts().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("streamingendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().StreamingEndpoints().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("streaminglocators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().StreamingLocators().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("streamingpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().StreamingPolicies().Informer()}, nil
	case mediav1alpha1.SchemeGroupVersion.WithResource("transforms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Media().V1alpha1().Transforms().Informer()}, nil

		// Group=monitor.azurerm.kubeform.com, Version=v1alpha1
	case monitorv1alpha1.SchemeGroupVersion.WithResource("aaddiagnosticsettings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().AadDiagnosticSettings().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("actiongroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().ActionGroups().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("actionruleactiongroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().ActionRuleActionGroups().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("actionrulesuppressions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().ActionRuleSuppressions().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("activitylogalerts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().ActivityLogAlerts().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("autoscalesettings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().AutoscaleSettings().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("diagnosticsettings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().DiagnosticSettings().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("logprofiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().LogProfiles().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("metricalerts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().MetricAlerts().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("privatelinkscopes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().PrivateLinkScopes().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("privatelinkscopedservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().PrivateLinkScopedServices().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("scheduledqueryrulesalerts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().ScheduledQueryRulesAlerts().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("scheduledqueryruleslogs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().ScheduledQueryRulesLogs().Informer()}, nil
	case monitorv1alpha1.SchemeGroupVersion.WithResource("smartdetectoralertrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitor().V1alpha1().SmartDetectorAlertRules().Informer()}, nil

		// Group=mssql.azurerm.kubeform.com, Version=v1alpha1
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().Databases().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("databaseextendedauditingpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().DatabaseExtendedAuditingPolicies().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("databasevulnerabilityassessmentrulebaselines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().DatabaseVulnerabilityAssessmentRuleBaselines().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("elasticpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().Elasticpools().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("failovergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().FailoverGroups().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("firewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().FirewallRules().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("jobagents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().JobAgents().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("jobcredentials"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().JobCredentials().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("manageddatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().ManagedDatabases().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("managedinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().ManagedInstances().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("managedinstanceactivedirectoryadministrators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().ManagedInstanceActiveDirectoryAdministrators().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("managedinstancefailovergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().ManagedInstanceFailoverGroups().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("outboundfirewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().OutboundFirewallRules().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("servers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().Servers().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("serverextendedauditingpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().ServerExtendedAuditingPolicies().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("serversecurityalertpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().ServerSecurityAlertPolicies().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("servertransparentdataencryptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().ServerTransparentDataEncryptions().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("servervulnerabilityassessments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().ServerVulnerabilityAssessments().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("virtualmachines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().VirtualMachines().Informer()}, nil
	case mssqlv1alpha1.SchemeGroupVersion.WithResource("virtualnetworkrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mssql().V1alpha1().VirtualNetworkRules().Informer()}, nil

		// Group=mysql.azurerm.kubeform.com, Version=v1alpha1
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("activedirectoryadministrators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().ActiveDirectoryAdministrators().Informer()}, nil
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("configurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().Configurations().Informer()}, nil
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().Databases().Informer()}, nil
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("firewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().FirewallRules().Informer()}, nil
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("flexibledatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().FlexibleDatabases().Informer()}, nil
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("flexibleservers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().FlexibleServers().Informer()}, nil
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("flexibleserverconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().FlexibleServerConfigurations().Informer()}, nil
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("flexibleserverfirewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().FlexibleServerFirewallRules().Informer()}, nil
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("servers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().Servers().Informer()}, nil
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("serverkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().ServerKeys().Informer()}, nil
	case mysqlv1alpha1.SchemeGroupVersion.WithResource("virtualnetworkrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Mysql().V1alpha1().VirtualNetworkRules().Informer()}, nil

		// Group=nat.azurerm.kubeform.com, Version=v1alpha1
	case natv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Nat().V1alpha1().Gateways().Informer()}, nil
	case natv1alpha1.SchemeGroupVersion.WithResource("gatewaypublicipassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Nat().V1alpha1().GatewayPublicIPAssociations().Informer()}, nil
	case natv1alpha1.SchemeGroupVersion.WithResource("gatewaypublicipprefixassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Nat().V1alpha1().GatewayPublicIPPrefixAssociations().Informer()}, nil

		// Group=netapp.azurerm.kubeform.com, Version=v1alpha1
	case netappv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Netapp().V1alpha1().Accounts().Informer()}, nil
	case netappv1alpha1.SchemeGroupVersion.WithResource("pools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Netapp().V1alpha1().Pools().Informer()}, nil
	case netappv1alpha1.SchemeGroupVersion.WithResource("snapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Netapp().V1alpha1().Snapshots().Informer()}, nil
	case netappv1alpha1.SchemeGroupVersion.WithResource("snapshotpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Netapp().V1alpha1().SnapshotPolicies().Informer()}, nil
	case netappv1alpha1.SchemeGroupVersion.WithResource("volumes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Netapp().V1alpha1().Volumes().Informer()}, nil

		// Group=network.azurerm.kubeform.com, Version=v1alpha1
	case networkv1alpha1.SchemeGroupVersion.WithResource("connectionmonitors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().ConnectionMonitors().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("ddosprotectionplans"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().DdosProtectionPlans().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().Interfaces().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfaceapplicationgatewaybackendaddresspoolassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().InterfaceApplicationGatewayBackendAddressPoolAssociations().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfaceapplicationsecuritygroupassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().InterfaceApplicationSecurityGroupAssociations().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfacebackendaddresspoolassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().InterfaceBackendAddressPoolAssociations().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfacenatruleassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().InterfaceNATRuleAssociations().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("interfacesecuritygroupassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().InterfaceSecurityGroupAssociations().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("packetcaptures"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().PacketCaptures().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("profiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().Profiles().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("securitygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().SecurityGroups().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("securityrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().SecurityRules().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("watchers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().Watchers().Informer()}, nil
	case networkv1alpha1.SchemeGroupVersion.WithResource("watcherflowlogs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().WatcherFlowLogs().Informer()}, nil

		// Group=notificationhub.azurerm.kubeform.com, Version=v1alpha1
	case notificationhubv1alpha1.SchemeGroupVersion.WithResource("authorizationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Notificationhub().V1alpha1().AuthorizationRules().Informer()}, nil
	case notificationhubv1alpha1.SchemeGroupVersion.WithResource("namespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Notificationhub().V1alpha1().Namespaces().Informer()}, nil
	case notificationhubv1alpha1.SchemeGroupVersion.WithResource("notificationhubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Notificationhub().V1alpha1().NotificationHubs().Informer()}, nil

		// Group=orchestrated.azurerm.kubeform.com, Version=v1alpha1
	case orchestratedv1alpha1.SchemeGroupVersion.WithResource("virtualmachinescalesets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Orchestrated().V1alpha1().VirtualMachineScaleSets().Informer()}, nil

		// Group=packet.azurerm.kubeform.com, Version=v1alpha1
	case packetv1alpha1.SchemeGroupVersion.WithResource("captures"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Packet().V1alpha1().Captures().Informer()}, nil

		// Group=point.azurerm.kubeform.com, Version=v1alpha1
	case pointv1alpha1.SchemeGroupVersion.WithResource("tositevpngateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Point().V1alpha1().ToSiteVPNGateways().Informer()}, nil

		// Group=policy.azurerm.kubeform.com, Version=v1alpha1
	case policyv1alpha1.SchemeGroupVersion.WithResource("assignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Policy().V1alpha1().Assignments().Informer()}, nil
	case policyv1alpha1.SchemeGroupVersion.WithResource("definitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Policy().V1alpha1().Definitions().Informer()}, nil
	case policyv1alpha1.SchemeGroupVersion.WithResource("remediations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Policy().V1alpha1().Remediations().Informer()}, nil
	case policyv1alpha1.SchemeGroupVersion.WithResource("setdefinitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Policy().V1alpha1().SetDefinitions().Informer()}, nil
	case policyv1alpha1.SchemeGroupVersion.WithResource("virtualmachineconfigurationassignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Policy().V1alpha1().VirtualMachineConfigurationAssignments().Informer()}, nil

		// Group=portal.azurerm.kubeform.com, Version=v1alpha1
	case portalv1alpha1.SchemeGroupVersion.WithResource("tenantconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Portal().V1alpha1().TenantConfigurations().Informer()}, nil

		// Group=postgresql.azurerm.kubeform.com, Version=v1alpha1
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("activedirectoryadministrators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().ActiveDirectoryAdministrators().Informer()}, nil
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("configurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().Configurations().Informer()}, nil
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().Databases().Informer()}, nil
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("firewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().FirewallRules().Informer()}, nil
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("flexibleservers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().FlexibleServers().Informer()}, nil
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("flexibleserverconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().FlexibleServerConfigurations().Informer()}, nil
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("flexibleserverdatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().FlexibleServerDatabases().Informer()}, nil
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("flexibleserverfirewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().FlexibleServerFirewallRules().Informer()}, nil
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("servers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().Servers().Informer()}, nil
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("serverkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().ServerKeys().Informer()}, nil
	case postgresqlv1alpha1.SchemeGroupVersion.WithResource("virtualnetworkrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Postgresql().V1alpha1().VirtualNetworkRules().Informer()}, nil

		// Group=powerbi.azurerm.kubeform.com, Version=v1alpha1
	case powerbiv1alpha1.SchemeGroupVersion.WithResource("embeddeds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Powerbi().V1alpha1().Embeddeds().Informer()}, nil

		// Group=private.azurerm.kubeform.com, Version=v1alpha1
	case privatev1alpha1.SchemeGroupVersion.WithResource("dnsarecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().DnsARecords().Informer()}, nil
	case privatev1alpha1.SchemeGroupVersion.WithResource("dnsaaaarecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().DnsAaaaRecords().Informer()}, nil
	case privatev1alpha1.SchemeGroupVersion.WithResource("dnscnamerecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().DnsCnameRecords().Informer()}, nil
	case privatev1alpha1.SchemeGroupVersion.WithResource("dnsmxrecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().DnsMxRecords().Informer()}, nil
	case privatev1alpha1.SchemeGroupVersion.WithResource("dnsptrrecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().DnsPtrRecords().Informer()}, nil
	case privatev1alpha1.SchemeGroupVersion.WithResource("dnssrvrecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().DnsSrvRecords().Informer()}, nil
	case privatev1alpha1.SchemeGroupVersion.WithResource("dnstxtrecords"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().DnsTxtRecords().Informer()}, nil
	case privatev1alpha1.SchemeGroupVersion.WithResource("dnszones"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().DnsZones().Informer()}, nil
	case privatev1alpha1.SchemeGroupVersion.WithResource("dnszonevirtualnetworklinks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().DnsZoneVirtualNetworkLinks().Informer()}, nil
	case privatev1alpha1.SchemeGroupVersion.WithResource("endpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().Endpoints().Informer()}, nil
	case privatev1alpha1.SchemeGroupVersion.WithResource("linkservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Private().V1alpha1().LinkServices().Informer()}, nil

		// Group=proximity.azurerm.kubeform.com, Version=v1alpha1
	case proximityv1alpha1.SchemeGroupVersion.WithResource("placementgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Proximity().V1alpha1().PlacementGroups().Informer()}, nil

		// Group=publicip.azurerm.kubeform.com, Version=v1alpha1
	case publicipv1alpha1.SchemeGroupVersion.WithResource("prefixes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Publicip().V1alpha1().Prefixes().Informer()}, nil
	case publicipv1alpha1.SchemeGroupVersion.WithResource("publicips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Publicip().V1alpha1().PublicIPs().Informer()}, nil

		// Group=purview.azurerm.kubeform.com, Version=v1alpha1
	case purviewv1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Purview().V1alpha1().Accounts().Informer()}, nil

		// Group=recovery.azurerm.kubeform.com, Version=v1alpha1
	case recoveryv1alpha1.SchemeGroupVersion.WithResource("servicesvaults"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Recovery().V1alpha1().ServicesVaults().Informer()}, nil

		// Group=redis.azurerm.kubeform.com, Version=v1alpha1
	case redisv1alpha1.SchemeGroupVersion.WithResource("caches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redis().V1alpha1().Caches().Informer()}, nil
	case redisv1alpha1.SchemeGroupVersion.WithResource("enterpriseclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redis().V1alpha1().EnterpriseClusters().Informer()}, nil
	case redisv1alpha1.SchemeGroupVersion.WithResource("enterprisedatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redis().V1alpha1().EnterpriseDatabases().Informer()}, nil
	case redisv1alpha1.SchemeGroupVersion.WithResource("firewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redis().V1alpha1().FirewallRules().Informer()}, nil
	case redisv1alpha1.SchemeGroupVersion.WithResource("linkedservers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redis().V1alpha1().LinkedServers().Informer()}, nil

		// Group=relay.azurerm.kubeform.com, Version=v1alpha1
	case relayv1alpha1.SchemeGroupVersion.WithResource("hybridconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Relay().V1alpha1().HybridConnections().Informer()}, nil
	case relayv1alpha1.SchemeGroupVersion.WithResource("hybridconnectionauthorizationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Relay().V1alpha1().HybridConnectionAuthorizationRules().Informer()}, nil
	case relayv1alpha1.SchemeGroupVersion.WithResource("namespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Relay().V1alpha1().Namespaces().Informer()}, nil
	case relayv1alpha1.SchemeGroupVersion.WithResource("namespaceauthorizationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Relay().V1alpha1().NamespaceAuthorizationRules().Informer()}, nil

		// Group=resource.azurerm.kubeform.com, Version=v1alpha1
	case resourcev1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().Groups().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("groupcostmanagementexports"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().GroupCostManagementExports().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("grouppolicyassignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().GroupPolicyAssignments().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("grouptemplatedeployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().GroupTemplateDeployments().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("policyassignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().PolicyAssignments().Informer()}, nil
	case resourcev1alpha1.SchemeGroupVersion.WithResource("providerregistrations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ProviderRegistrations().Informer()}, nil

		// Group=role.azurerm.kubeform.com, Version=v1alpha1
	case rolev1alpha1.SchemeGroupVersion.WithResource("assignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Role().V1alpha1().Assignments().Informer()}, nil
	case rolev1alpha1.SchemeGroupVersion.WithResource("definitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Role().V1alpha1().Definitions().Informer()}, nil

		// Group=route.azurerm.kubeform.com, Version=v1alpha1
	case routev1alpha1.SchemeGroupVersion.WithResource("filters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route().V1alpha1().Filters().Informer()}, nil
	case routev1alpha1.SchemeGroupVersion.WithResource("routes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route().V1alpha1().Routes().Informer()}, nil
	case routev1alpha1.SchemeGroupVersion.WithResource("tables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Route().V1alpha1().Tables().Informer()}, nil

		// Group=search.azurerm.kubeform.com, Version=v1alpha1
	case searchv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Search().V1alpha1().Services().Informer()}, nil

		// Group=security.azurerm.kubeform.com, Version=v1alpha1
	case securityv1alpha1.SchemeGroupVersion.WithResource("centerassessments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().CenterAssessments().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("centerassessmentmetadatas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().CenterAssessmentMetadatas().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("centerassessmentpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().CenterAssessmentPolicies().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("centerautoprovisionings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().CenterAutoProvisionings().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("centerautomations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().CenterAutomations().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("centercontacts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().CenterContacts().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("centerservervulnerabilityassessments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().CenterServerVulnerabilityAssessments().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("centersettings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().CenterSettings().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("centersubscriptionpricings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().CenterSubscriptionPricings().Informer()}, nil
	case securityv1alpha1.SchemeGroupVersion.WithResource("centerworkspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Security().V1alpha1().CenterWorkspaces().Informer()}, nil

		// Group=sentinel.azurerm.kubeform.com, Version=v1alpha1
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("alertrulefusions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().AlertRuleFusions().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("alertrulemachinelearningbehavioranalyticses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().AlertRuleMachineLearningBehaviorAnalyticses().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("alertrulemssecurityincidents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().AlertRuleMsSecurityIncidents().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("alertrulescheduleds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().AlertRuleScheduleds().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("automationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().AutomationRules().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("dataconnectorawscloudtrails"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().DataConnectorAwsCloudTrails().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("dataconnectorazureactivedirectories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().DataConnectorAzureActiveDirectories().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("dataconnectorazureadvancedthreatprotections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().DataConnectorAzureAdvancedThreatProtections().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("dataconnectorazuresecuritycenters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().DataConnectorAzureSecurityCenters().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("dataconnectormicrosoftcloudappsecurities"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().DataConnectorMicrosoftCloudAppSecurities().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("dataconnectormicrosoftdefenderadvancedthreatprotections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().DataConnectorMicrosoftDefenderAdvancedThreatProtections().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("dataconnectoroffice365s"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().DataConnectorOffice365s().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("dataconnectorthreatintelligences"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().DataConnectorThreatIntelligences().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("watchlists"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().Watchlists().Informer()}, nil
	case sentinelv1alpha1.SchemeGroupVersion.WithResource("watchlistitems"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sentinel().V1alpha1().WatchlistItems().Informer()}, nil

		// Group=service.azurerm.kubeform.com, Version=v1alpha1
	case servicev1alpha1.SchemeGroupVersion.WithResource("fabricclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().FabricClusters().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("fabricmanagedclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().FabricManagedClusters().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("fabricmeshapplications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().FabricMeshApplications().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("fabricmeshlocalnetworks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().FabricMeshLocalNetworks().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("fabricmeshsecrets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().FabricMeshSecrets().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("fabricmeshsecretvalues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().FabricMeshSecretValues().Informer()}, nil

		// Group=servicebus.azurerm.kubeform.com, Version=v1alpha1
	case servicebusv1alpha1.SchemeGroupVersion.WithResource("namespaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicebus().V1alpha1().Namespaces().Informer()}, nil
	case servicebusv1alpha1.SchemeGroupVersion.WithResource("namespaceauthorizationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicebus().V1alpha1().NamespaceAuthorizationRules().Informer()}, nil
	case servicebusv1alpha1.SchemeGroupVersion.WithResource("namespacedisasterrecoveryconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicebus().V1alpha1().NamespaceDisasterRecoveryConfigs().Informer()}, nil
	case servicebusv1alpha1.SchemeGroupVersion.WithResource("namespacenetworkrulesets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicebus().V1alpha1().NamespaceNetworkRuleSets().Informer()}, nil
	case servicebusv1alpha1.SchemeGroupVersion.WithResource("queues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicebus().V1alpha1().Queues().Informer()}, nil
	case servicebusv1alpha1.SchemeGroupVersion.WithResource("queueauthorizationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicebus().V1alpha1().QueueAuthorizationRules().Informer()}, nil
	case servicebusv1alpha1.SchemeGroupVersion.WithResource("subscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicebus().V1alpha1().Subscriptions().Informer()}, nil
	case servicebusv1alpha1.SchemeGroupVersion.WithResource("subscriptionrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicebus().V1alpha1().SubscriptionRules().Informer()}, nil
	case servicebusv1alpha1.SchemeGroupVersion.WithResource("topics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicebus().V1alpha1().Topics().Informer()}, nil
	case servicebusv1alpha1.SchemeGroupVersion.WithResource("topicauthorizationrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Servicebus().V1alpha1().TopicAuthorizationRules().Informer()}, nil

		// Group=sharedimage.azurerm.kubeform.com, Version=v1alpha1
	case sharedimagev1alpha1.SchemeGroupVersion.WithResource("galleries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sharedimage().V1alpha1().Galleries().Informer()}, nil
	case sharedimagev1alpha1.SchemeGroupVersion.WithResource("sharedimages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sharedimage().V1alpha1().SharedImages().Informer()}, nil
	case sharedimagev1alpha1.SchemeGroupVersion.WithResource("versions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sharedimage().V1alpha1().Versions().Informer()}, nil

		// Group=signalr.azurerm.kubeform.com, Version=v1alpha1
	case signalrv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Signalr().V1alpha1().Services().Informer()}, nil
	case signalrv1alpha1.SchemeGroupVersion.WithResource("servicenetworkacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Signalr().V1alpha1().ServiceNetworkACLs().Informer()}, nil

		// Group=siterecovery.azurerm.kubeform.com, Version=v1alpha1
	case siterecoveryv1alpha1.SchemeGroupVersion.WithResource("fabrics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Siterecovery().V1alpha1().Fabrics().Informer()}, nil
	case siterecoveryv1alpha1.SchemeGroupVersion.WithResource("networkmappings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Siterecovery().V1alpha1().NetworkMappings().Informer()}, nil
	case siterecoveryv1alpha1.SchemeGroupVersion.WithResource("protectioncontainers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Siterecovery().V1alpha1().ProtectionContainers().Informer()}, nil
	case siterecoveryv1alpha1.SchemeGroupVersion.WithResource("protectioncontainermappings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Siterecovery().V1alpha1().ProtectionContainerMappings().Informer()}, nil
	case siterecoveryv1alpha1.SchemeGroupVersion.WithResource("replicatedvms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Siterecovery().V1alpha1().ReplicatedVms().Informer()}, nil
	case siterecoveryv1alpha1.SchemeGroupVersion.WithResource("replicationpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Siterecovery().V1alpha1().ReplicationPolicies().Informer()}, nil

		// Group=snapshot.azurerm.kubeform.com, Version=v1alpha1
	case snapshotv1alpha1.SchemeGroupVersion.WithResource("snapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Snapshot().V1alpha1().Snapshots().Informer()}, nil

		// Group=spatial.azurerm.kubeform.com, Version=v1alpha1
	case spatialv1alpha1.SchemeGroupVersion.WithResource("anchorsaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spatial().V1alpha1().AnchorsAccounts().Informer()}, nil

		// Group=spring.azurerm.kubeform.com, Version=v1alpha1
	case springv1alpha1.SchemeGroupVersion.WithResource("cloudactivedeployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spring().V1alpha1().CloudActiveDeployments().Informer()}, nil
	case springv1alpha1.SchemeGroupVersion.WithResource("cloudapps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spring().V1alpha1().CloudApps().Informer()}, nil
	case springv1alpha1.SchemeGroupVersion.WithResource("cloudappcosmosdbassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spring().V1alpha1().CloudAppCosmosdbAssociations().Informer()}, nil
	case springv1alpha1.SchemeGroupVersion.WithResource("cloudappmysqlassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spring().V1alpha1().CloudAppMysqlAssociations().Informer()}, nil
	case springv1alpha1.SchemeGroupVersion.WithResource("cloudappredisassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spring().V1alpha1().CloudAppRedisAssociations().Informer()}, nil
	case springv1alpha1.SchemeGroupVersion.WithResource("cloudcertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spring().V1alpha1().CloudCertificates().Informer()}, nil
	case springv1alpha1.SchemeGroupVersion.WithResource("cloudcustomdomains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spring().V1alpha1().CloudCustomDomains().Informer()}, nil
	case springv1alpha1.SchemeGroupVersion.WithResource("cloudjavadeployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spring().V1alpha1().CloudJavaDeployments().Informer()}, nil
	case springv1alpha1.SchemeGroupVersion.WithResource("cloudservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spring().V1alpha1().CloudServices().Informer()}, nil
	case springv1alpha1.SchemeGroupVersion.WithResource("cloudstorages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spring().V1alpha1().CloudStorages().Informer()}, nil

		// Group=sql.azurerm.kubeform.com, Version=v1alpha1
	case sqlv1alpha1.SchemeGroupVersion.WithResource("activedirectoryadministrators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().ActiveDirectoryAdministrators().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().Databases().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("elasticpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().Elasticpools().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("failovergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().FailoverGroups().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("firewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().FirewallRules().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("manageddatabases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().ManagedDatabases().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("managedinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().ManagedInstances().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("managedinstanceactivedirectoryadministrators"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().ManagedInstanceActiveDirectoryAdministrators().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("managedinstancefailovergroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().ManagedInstanceFailoverGroups().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("servers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().Servers().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("virtualnetworkrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().VirtualNetworkRules().Informer()}, nil

		// Group=ssh.azurerm.kubeform.com, Version=v1alpha1
	case sshv1alpha1.SchemeGroupVersion.WithResource("publickeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ssh().V1alpha1().PublicKeys().Informer()}, nil

		// Group=stack.azurerm.kubeform.com, Version=v1alpha1
	case stackv1alpha1.SchemeGroupVersion.WithResource("hciclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stack().V1alpha1().HciClusters().Informer()}, nil

		// Group=static.azurerm.kubeform.com, Version=v1alpha1
	case staticv1alpha1.SchemeGroupVersion.WithResource("sites"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Static().V1alpha1().Sites().Informer()}, nil
	case staticv1alpha1.SchemeGroupVersion.WithResource("sitecustomdomains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Static().V1alpha1().SiteCustomDomains().Informer()}, nil

		// Group=storage.azurerm.kubeform.com, Version=v1alpha1
	case storagev1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Accounts().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("accountcustomermanagedkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().AccountCustomerManagedKeys().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("accountnetworkruleses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().AccountNetworkRuleses().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("blobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Blobs().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("blobinventorypolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().BlobInventoryPolicies().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("containers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Containers().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("datalakegen2filesystems"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().DataLakeGen2Filesystems().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("datalakegen2paths"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().DataLakeGen2Paths().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("diskspools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().DisksPools().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("encryptionscopes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().EncryptionScopes().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("managementpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().ManagementPolicies().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("objectreplications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().ObjectReplications().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("queues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Queues().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("shares"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Shares().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("sharedirectories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().ShareDirectories().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("sharefiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().ShareFiles().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("syncs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Syncs().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("synccloudendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().SyncCloudEndpoints().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("syncgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().SyncGroups().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("tables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Tables().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("tableentities"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().TableEntities().Informer()}, nil

		// Group=stream.azurerm.kubeform.com, Version=v1alpha1
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsClusters().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsfunctionjavascriptudves"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsFunctionJavascriptUdves().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsjobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsJobs().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsmanagedprivateendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsManagedPrivateEndpoints().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsoutputblobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsOutputBlobs().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsoutputeventhubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsOutputEventhubs().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsoutputfunctions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsOutputFunctions().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsoutputmssqls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsOutputMssqls().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsoutputservicebusqueues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsOutputServicebusQueues().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsoutputservicebustopics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsOutputServicebusTopics().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsoutputsynapses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsOutputSynapses().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsoutputtables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsOutputTables().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsreferenceinputblobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsReferenceInputBlobs().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsreferenceinputmssqls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsReferenceInputMssqls().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsstreaminputblobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsStreamInputBlobs().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsstreaminputeventhubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsStreamInputEventhubs().Informer()}, nil
	case streamv1alpha1.SchemeGroupVersion.WithResource("analyticsstreaminputiothubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Stream().V1alpha1().AnalyticsStreamInputIothubs().Informer()}, nil

		// Group=subnet.azurerm.kubeform.com, Version=v1alpha1
	case subnetv1alpha1.SchemeGroupVersion.WithResource("natgatewayassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subnet().V1alpha1().NatGatewayAssociations().Informer()}, nil
	case subnetv1alpha1.SchemeGroupVersion.WithResource("networksecuritygroupassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subnet().V1alpha1().NetworkSecurityGroupAssociations().Informer()}, nil
	case subnetv1alpha1.SchemeGroupVersion.WithResource("routetableassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subnet().V1alpha1().RouteTableAssociations().Informer()}, nil
	case subnetv1alpha1.SchemeGroupVersion.WithResource("serviceendpointstoragepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subnet().V1alpha1().ServiceEndpointStoragePolicies().Informer()}, nil
	case subnetv1alpha1.SchemeGroupVersion.WithResource("subnets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subnet().V1alpha1().Subnets().Informer()}, nil

		// Group=subscription.azurerm.kubeform.com, Version=v1alpha1
	case subscriptionv1alpha1.SchemeGroupVersion.WithResource("costmanagementexports"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subscription().V1alpha1().CostManagementExports().Informer()}, nil
	case subscriptionv1alpha1.SchemeGroupVersion.WithResource("policyassignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subscription().V1alpha1().PolicyAssignments().Informer()}, nil
	case subscriptionv1alpha1.SchemeGroupVersion.WithResource("subscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subscription().V1alpha1().Subscriptions().Informer()}, nil
	case subscriptionv1alpha1.SchemeGroupVersion.WithResource("templatedeployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Subscription().V1alpha1().TemplateDeployments().Informer()}, nil

		// Group=synapse.azurerm.kubeform.com, Version=v1alpha1
	case synapsev1alpha1.SchemeGroupVersion.WithResource("firewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().FirewallRules().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("integrationruntimeazures"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().IntegrationRuntimeAzures().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("integrationruntimeselfhosteds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().IntegrationRuntimeSelfHosteds().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("linkedservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().LinkedServices().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("managedprivateendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().ManagedPrivateEndpoints().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("privatelinkhubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().PrivateLinkHubs().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("roleassignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().RoleAssignments().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("sparkpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().SparkPools().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("sqlpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().SqlPools().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("sqlpoolextendedauditingpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().SqlPoolExtendedAuditingPolicies().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("sqlpoolsecurityalertpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().SqlPoolSecurityAlertPolicies().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("sqlpoolvulnerabilityassessments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().SqlPoolVulnerabilityAssessments().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("sqlpoolvulnerabilityassessmentbaselines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().SqlPoolVulnerabilityAssessmentBaselines().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("sqlpoolworkloadclassifiers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().SqlPoolWorkloadClassifiers().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("sqlpoolworkloadgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().SqlPoolWorkloadGroups().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("workspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().Workspaces().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("workspaceaadadmins"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().WorkspaceAadAdmins().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("workspaceextendedauditingpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().WorkspaceExtendedAuditingPolicies().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("workspacekeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().WorkspaceKeys().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("workspacesqlaadadmins"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().WorkspaceSQLAadAdmins().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("workspacesecurityalertpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().WorkspaceSecurityAlertPolicies().Informer()}, nil
	case synapsev1alpha1.SchemeGroupVersion.WithResource("workspacevulnerabilityassessments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Synapse().V1alpha1().WorkspaceVulnerabilityAssessments().Informer()}, nil

		// Group=template.azurerm.kubeform.com, Version=v1alpha1
	case templatev1alpha1.SchemeGroupVersion.WithResource("deployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Template().V1alpha1().Deployments().Informer()}, nil

		// Group=tenant.azurerm.kubeform.com, Version=v1alpha1
	case tenantv1alpha1.SchemeGroupVersion.WithResource("templatedeployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tenant().V1alpha1().TemplateDeployments().Informer()}, nil

		// Group=trafficmanager.azurerm.kubeform.com, Version=v1alpha1
	case trafficmanagerv1alpha1.SchemeGroupVersion.WithResource("azureendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Trafficmanager().V1alpha1().AzureEndpoints().Informer()}, nil
	case trafficmanagerv1alpha1.SchemeGroupVersion.WithResource("endpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Trafficmanager().V1alpha1().Endpoints().Informer()}, nil
	case trafficmanagerv1alpha1.SchemeGroupVersion.WithResource("externalendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Trafficmanager().V1alpha1().ExternalEndpoints().Informer()}, nil
	case trafficmanagerv1alpha1.SchemeGroupVersion.WithResource("nestedendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Trafficmanager().V1alpha1().NestedEndpoints().Informer()}, nil
	case trafficmanagerv1alpha1.SchemeGroupVersion.WithResource("profiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Trafficmanager().V1alpha1().Profiles().Informer()}, nil

		// Group=user.azurerm.kubeform.com, Version=v1alpha1
	case userv1alpha1.SchemeGroupVersion.WithResource("assignedidentities"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.User().V1alpha1().AssignedIdentities().Informer()}, nil

		// Group=video.azurerm.kubeform.com, Version=v1alpha1
	case videov1alpha1.SchemeGroupVersion.WithResource("analyzers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Video().V1alpha1().Analyzers().Informer()}, nil
	case videov1alpha1.SchemeGroupVersion.WithResource("analyzeredgemodules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Video().V1alpha1().AnalyzerEdgeModules().Informer()}, nil

		// Group=virtual.azurerm.kubeform.com, Version=v1alpha1
	case virtualv1alpha1.SchemeGroupVersion.WithResource("desktopapplications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().DesktopApplications().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("desktopapplicationgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().DesktopApplicationGroups().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("desktophostpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().DesktopHostPools().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("desktophostpoolregistrationinfos"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().DesktopHostPoolRegistrationInfos().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("desktopscalingplans"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().DesktopScalingPlans().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("desktopworkspaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().DesktopWorkspaces().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("desktopworkspaceapplicationgroupassociations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().DesktopWorkspaceApplicationGroupAssociations().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("hubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().Hubs().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("hubbgpconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().HubBGPConnections().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("hubconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().HubConnections().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("hubips"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().HubIPs().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("hubroutetables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().HubRouteTables().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("hubroutetableroutes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().HubRouteTableRoutes().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("hubsecuritypartnerproviders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().HubSecurityPartnerProviders().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("machines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().Machines().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("machineconfigurationpolicyassignments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().MachineConfigurationPolicyAssignments().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("machinedatadiskattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().MachineDataDiskAttachments().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("machineextensions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().MachineExtensions().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("machinescalesets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().MachineScaleSets().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("machinescalesetextensions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().MachineScaleSetExtensions().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("networks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().Networks().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("networkdnsserverses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().NetworkDNSServerses().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("networkgateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().NetworkGateways().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("networkgatewayconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().NetworkGatewayConnections().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("networkpeerings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().NetworkPeerings().Informer()}, nil
	case virtualv1alpha1.SchemeGroupVersion.WithResource("wans"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Virtual().V1alpha1().Wans().Informer()}, nil

		// Group=vmware.azurerm.kubeform.com, Version=v1alpha1
	case vmwarev1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vmware().V1alpha1().Clusters().Informer()}, nil
	case vmwarev1alpha1.SchemeGroupVersion.WithResource("expressrouteauthorizations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vmware().V1alpha1().ExpressRouteAuthorizations().Informer()}, nil
	case vmwarev1alpha1.SchemeGroupVersion.WithResource("privateclouds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vmware().V1alpha1().PrivateClouds().Informer()}, nil

		// Group=vpn.azurerm.kubeform.com, Version=v1alpha1
	case vpnv1alpha1.SchemeGroupVersion.WithResource("gateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().Gateways().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("gatewayconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().GatewayConnections().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("gatewaynatrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().GatewayNATRules().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("serverconfigurations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().ServerConfigurations().Informer()}, nil
	case vpnv1alpha1.SchemeGroupVersion.WithResource("sites"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpn().V1alpha1().Sites().Informer()}, nil

		// Group=web.azurerm.kubeform.com, Version=v1alpha1
	case webv1alpha1.SchemeGroupVersion.WithResource("applicationfirewallpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Web().V1alpha1().ApplicationFirewallPolicies().Informer()}, nil
	case webv1alpha1.SchemeGroupVersion.WithResource("pubsubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Web().V1alpha1().Pubsubs().Informer()}, nil
	case webv1alpha1.SchemeGroupVersion.WithResource("pubsubhubs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Web().V1alpha1().PubsubHubs().Informer()}, nil
	case webv1alpha1.SchemeGroupVersion.WithResource("pubsubnetworkacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Web().V1alpha1().PubsubNetworkACLs().Informer()}, nil

		// Group=windows.azurerm.kubeform.com, Version=v1alpha1
	case windowsv1alpha1.SchemeGroupVersion.WithResource("virtualmachines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Windows().V1alpha1().VirtualMachines().Informer()}, nil
	case windowsv1alpha1.SchemeGroupVersion.WithResource("virtualmachinescalesets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Windows().V1alpha1().VirtualMachineScaleSets().Informer()}, nil

	}

	return nil, fmt.Errorf("no informer found for %v", resource)
}
